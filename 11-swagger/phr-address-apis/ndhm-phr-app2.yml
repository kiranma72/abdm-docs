openapi: 3.0.3
info:
  title: Patient Health Record Service
  description: 'Create your PHR ID to track your health records in one place. '
  version: V.1.0
servers:
  - url: https://dev.abdm.gov.in/cm
    description: Inferred Url
tags:
  - name: Login Collection API's
    description: Login API's by Phr Addres, Mobile, Email-Id.
  - name: Profile Collection API's.
    description: Profile Controller Impl
  - name: Registration By Health ID Number
    description: Registration By Hid Number Controller Impl
  - name: Registration by Mobile Or Email APIs
    description: Registration By Mobile Controller Impl
  - name: New
    description: New API's

paths:
  /v1/apps/login/hid/auth-init:
    post:
      tags:
        - Login Collection API's
      summary: Initiate the Login transaction using the healthId number, Based on the Auth mode generate OTP to start Login transaction
      description: "<b>Explanation</b>\t- Api Accepts <b>PHR ADDRESS</b> and then Generates <b>OTP</b>based on Authentication mode for it.\r\n<b>Request Body</b>\t- Required\r\n<b>Response</b>\t- Api Accepts <b>HealthId Number</b> and then Generates <b>OTP</b>based on the auth methods for it. if number not found then throws error.\r\n\r\n<p>Note : \r\n</p><p>1. <b style='color:red'>OTP will be valid for 10 Minutes only</b>"
      operationId: healthIdNumberInitUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthIntRequestPayLoad'
      responses:
        '200':
          description: Return transaction id in case of success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LoginViaMobileEmailRequestResponse'
        '201':
          description: Created
        '400':
          description: Bad request, check request before retrying
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Could not Generate OTP, Invalid request data
        '500':
          description: |-
            Downstream system(s) is down.
            Unhandled exceptions.

  /v1/apps/login/mobileEmail/auth-confirm:
    post:
      tags:
        - Login Collection API's
      summary: Get the User Token using the mobile/email 
      description: 'fetch the User token '
      operationId: postVerificationViaMobileEmailUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginPostVerificationRequest'
      responses:
        '200':
          description: Return list of phr address mapped with mobile in case of success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LoginPostVerificationRequestResponse'
        '201':
          description: Created
        '400':
          description: Bad request, check request before retrying
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Could not Verify OTP , Invalid Request Data.
        '500':
          description: |-
            Downstream system(s) is down.
            Unhandled exceptions.
  /v1/apps/login/mobileEmail/auth-init:
    post:
      tags:
        - Login Collection API's
      summary: Generate Mobile/Email OTP to start Login transaction
      description: "<b>Explanation</b>\t- Api Accepts <b>Mobile/Email address</b> and then Generates <b>OTP</b> for it.\r\n<b>Request Body</b>\t- Required\r\n<b>Response</b>\t- Api Accepts <b>PHR ADDRESS</b> and then Generates <b>OTP</b>based on the auth methods for it. if number not found then throws error.\r\n\r\n<p>Note : \r\n</p><p>1. <b style='color:red'>OTP will be valid for 10 Minutes only</b>"
      operationId: initLoginViaMobileEmailUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginViaMobileEmailRequest'
      responses:
        '200':
          description: Return transaction id in case of success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LoginViaMobileEmailRequestResponse'
        '201':
          description: Created
        '400':
          description: Bad request, check request before retrying
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Could not Generate OTP, Invalid Request data
        '500':
          description: |-
            Downstream system(s) is down.
            Unhandled exceptions.

  /v1/apps/login/mobileEmail/pre-Verify:
    post:
      tags:
        - Login Collection API's
      summary: 'Verify Mobile/Email OTP to start Login '
      description: "<b>Explanation</b>\t- Api Accepts <b>Transaction  Number</b> and <b>OTP(Encrypted form)</b> for it.\r\n<b>Request Body</b>\t- Required\r\n\r\n\r\n<p>Note : \r\n</p><p>1. <b style='color:red'>OTP will be valid for 10 Minutes only</b>"
      operationId: preVerificationViaMobileEmailUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginPreVerificationRequest'
      responses:
        '200':
          description: Return list of phr address mapped with mobile in case of success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LoginPreVerificationResponse'
        '201':
          description: Created
        '400':
          description: Bad request, check request before retrying
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Could not Verify OTP , Invalid Request Data.
        '500':
          description: |-
            Downstream system(s) is down.
            Unhandled exceptions.

  /v1/apps/phrAddress/auth-init:
    post:
      tags:
        - Login Collection API's
      summary: Initiate the Login transaction using the PHR ADDRESS, Based on the Auth mode generate Mobile/Email OTP to start Login transaction
      description: "<b>Explanation</b>\t- Api Accepts <b>PHR ADDRESS</b> and then Generates <b>OTP</b>based on Authentication mode for it.\r\n<b>Request Body</b>\t- Required\r\n<b>Response</b>\t- Api Accepts <b>PHR ADDRESS</b> and then Generates <b>OTP</b>based on the auth methods for it. if number not found then throws error.\r\n\r\n<p>Note : \r\n</p><p>1. <b style='color:red'>OTP will be valid for 10 Minutes only</b>"
      operationId: initLoginUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginViaPhrRequest'
      responses:
        '200':
          description: Return transaction id in case of success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthInitResponse'
        '201':
          description: Created
        '400':
          description: Bad request, check request before retrying
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Could not Generate OTP, Invalid request data
        '500':
          description: |-
            Downstream system(s) is down.
            Unhandled exceptions.

  /v1/apps/phrAddress/auth-confirm:
    post:
      tags:
        - Login Collection API's
      summary: Verify the Login transaction, Based on the Auth mode verify password, Mobile/Email OTP
      description: "<b>Explanation</b>\t- Api Accepts <b>Transaction Id and Passowrd, Mobile/Email OTP</b> based on Auth methods, Plain text credentails is not allowed.\r\n<b>Request Body</b>\t- Required\r\n\r\n\r\n<p>Note : \r\n</p><p>1. <b style='color:red'>OTP will be valid for 10 Minutes only</b>"
      operationId: VerifyLoginUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyPasswordOtpLoginRequest'
      responses:
        '200':
          description: Return user Token id in case of success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthConfirmResponse'
        '201':
          description: Created
        '400':
          description: Bad request, check request before retrying
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Could not Verify OTP or Password, Input Request Data.
        '500':
          description: |-
            Downstream system(s) is down.
            Unhandled exceptions.

  /v1/apps/login/hid/search/auth-mode:
    post:
      tags:
        - Login Collection API's
      summary: 'Sequence_1: Search a user by Health ID Number.'
      description: "<b>Explanation</b>\t- Api Checks <b>Health ID Number</b> to <b>find User</b>.\r\n\r\n<b>Request Body</b>\t- Required\r\n\r\n<b>Response</b>\t- Retrun partial details of Health ID Number."
      operationId: SearchByHealthIdNumberUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchByHealthIdNumberRequest'
      responses:
        '200':
          description: Return status as true alone with partail details of Health id number  in case of success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SearchResponsePayLoad'
        '201':
          description: Created
        '400':
          description: Bad request, check request before retrying
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: No Details Found for Given Health ID Including permanently deleted HIDs.
        '500':
          description: |-
            Downstream system(s) is down.
            Unhandled exceptions.

  /v1/apps/phrAddress/search/auth-mode:
    get:
      tags:
        - Login Collection API's
      summary: Get the PHR Address authentication methods.
      operationId: fetchPhrAuthModeUsingGET
      parameters:
        - name: phrAddress
          in: query
          description: PHR Address
          required: true
          style: form
          allowReserved: false
          schema:
            type: string
      responses:
        '200':
          description: Return PHR ADDRESS Authentication method Details in case of success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SearchPhrAuthResponse'
        '400':
          description: Bad request, check request before retrying
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Invalid Request data, See API error for more details.
        '500':
          description: |-
            Downstream system(s) is down.
            Unhandled exceptions.

  /v1/apps/profile/me:
    get:
      tags:
        - Profile Collection API's.
      summary: Get the user details
      operationId: getUsingGET
      parameters:
        - name: X-Auth-Token
          in: header
          description: Bearer Access token which was issued after successful login with gateway auth server.
          required: true
          allowReserved: false
          schema:
            type: string
      responses:
        '200':
          description: Return PHR User Account Details in case of success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request, check request before retrying
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Invalid Request data, See API error for more details.
        '500':
          description: |-
            Downstream system(s) is down.
            Unhandled exceptions.
  /v1/apps/patients/profile/reset-password:
    post:
      tags:
        - Profile Collection API's.
      summary: API to Update the password.
      description: "##  Update the password in the PHR Account.\r\n## Request\r\nBelow is the Request Parameters description \r\n| Attributes | Description |\r\n| ------ | ------ |\r\n| transactionId <sup style='color:red'>* required</sup> | Transaction number, Based on UUID. |\r\n"
      operationId: updateProfilePasswordUsingPOST
      parameters:
        - name: X-Token
          in: header
          description: Auth Token
          required: true
          allowReserved: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfilePasswordUpdateRequest'
      responses:
        '200':
          description: Return true in case of success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '201':
          description: Created
        '400':
          description: Bad request, check request before retrying
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Request in invalid, Check the request Parameter.
        '500':
          description: |-
            Downstream system(s) is down.
            Unhandled exceptions.

  /v1/apps/registration/hid/confirm-init:
    post:
      tags:
        - Registration By Health ID Number
      summary: 'Sequence_3: it will the transaction and send the otp on mobile number'
      description: "<b>Explanation</b>\t- Api Checks <b>Health ID Number</b> to <b>find User</b>.\r\n\r\n<b>Request Body</b>\t- Required\r\n\r\n<b>Response</b>\t- Retrun session in case of success against request."
      operationId: sequence_3UsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestPayload'
      responses:
        '200':
          description: Return status as true alone with partail details of Health id number  in case of success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HidResponse'
        '201':
          description: Created
        '400':
          description: Bad request, check request before retrying
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: No Details Found for Given Health ID Including permanently deleted HIDs.
        '500':
          description: |-
            Downstream system(s) is down.
            Unhandled exceptions.

  /v1/apps/create/registration/hid/create/phrAddress:
    post:
      tags:
        - Registration By Health ID Number
      summary: sequence_4
      operationId: sequence_4UsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePHRRequest'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JwtResponse'
        '201':
          description: Created
        '400':
          description: Bad request, check request before retrying
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: |-
            Downstream system(s) is down.
            Unhandled exceptions.

  /v1/apps/registration/hid/auth-init:
    post:
      tags:
        - Registration By Health ID Number
      summary: 'Sequence_2: It will create the transaction and send the otp on mobile number'
      description: "<b>Explanation</b>\t- Api Checks <b>Health ID Number</b> to <b>find User</b>.\r\n\r\n<b>Request Body</b>\t- Required\r\n\r\n<b>Response</b>\t- Retrun transaction in case of success against request."
      operationId: sequence_2UsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthIntRequestPayLoad'
      responses:
        '200':
          description: Return status as true alone with partail details of Health id number  in case of success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        '201':
          description: Created
        '400':
          description: Bad request, check request before retrying
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: No Details Found for Given Health ID Including permanently deleted HIDs.
        '500':
          description: |-
            Downstream system(s) is down.
            Unhandled exceptions.

  /v1/apps/registration/hid/search/auth-mode:
    post:
      tags:
        - Registration By Health ID Number
      summary: 'Sequence_1: Search a user by Health ID Number.'
      description: "<b>Explanation</b>\t- Api Checks <b>Health ID Number</b> to <b>find User</b>.\r\n\r\n<b>Request Body</b>\t- Required\r\n\r\n<b>Response</b>\t- Retrun partial details of Health ID Number."
      operationId: sequence_1UsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequestPayLoad'
      responses:
        '200':
          description: Return status as true alone with partail details of Health id number  in case of success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SearchResponsePayLoad'
        '201':
          description: Created
        '400':
          description: Bad request, check request before retrying
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: No Details Found for Given Health ID Including permanently deleted HIDs.
        '500':
          description: |-
            Downstream system(s) is down.
            Unhandled exceptions.

  /v1/apps/create/phrAddress:
    post:
      tags:
        - Registration by Mobile Or Email APIs
      summary: Register the Beneficiary to the PHR using the Mobile/Email Address
      description: "## To Register the beneficiary.\r\n\r\n- Beneficiary data required to pass in the request\r\n## Request\r\nBelow is the Request Parameters description \r\n| Attributes | Description |\r\n| ------ | ------ |\r\n| sessionId <sup style='color:red'>* required</sup> | Session Id, Based on UUID. |\r\n| phrAddress <sup style='color:red'>* required</sup> | PHR address of the Beneficiary or user |\r\n| password <sup style='color:red'>* required</sup>| Password for the account. Same will be used to login to PHR Account.<b style='color:red'> Password must contain an uppercase, a lowercase, a number, a special character (@,_$,#) and at least 8 or more characters. It should not contain any sequences (like 123)</b>|\r\n\r\n\r\n<p>Note : \r\n</p><p>1. <b style='color:red'>Password must be in encrypted form</b>, Plain text form Password is not allowed in request</p>"
      operationId: createPHRUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePHRRequest'
      responses:
        '200':
          description: Return user token id in case of success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JwtResponse'
        '201':
          description: Created
        '400':
          description: Bad request, check request before retrying
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Could not Generate PHR ID, Invalid data in the request. See API error for more details.
        '500':
          description: |-
            Downstream system(s) is down.
            Unhandled exceptions.

  /v1/apps/registration/details:
    post:
      tags:
        - Registration by Mobile Or Email APIs
      summary: Register the Beneficiary to the PHR using the Mobile/Email Address
      description: "## To Register the beneficiary.\r\n\r\n- Beneficiary data required to pass in the request\r\n## Request\r\nBelow is the Request Parameters description \r\n| Attributes | Description |\r\n| ------ | ------ |\r\n| sessionId <sup style='color:red'>* required</sup> | Transaction number, Based on UUID. |\r\n| first <sup style='color:red'>* required</sup> | First Name of the Beneficiary mentioned in the documents |\r\n| middle | Middle Name of the Beneficiary mentioned in the documents |\r\n| last  | Last Name of the Beneficiary mentioned in the documents |\r\n| gender <sup style='color:red'>* required</sup> | Male - <b>M</b>, Female - <b>M</b>, Other - <b>O</b> |\r\n| email <sup style='color:red'>* required</sup> | Valid E-mail address of the beneficiary (Encrypted) |\r\n| mobile<sup style='color:red'>* required</sup> | Valid 10-digit Mobile Number<sup style='color:red'>(Note - Mobile number must be encrypted)</sup> of the Beneficiary(Encrypted).|\r\n| dayOfBirth <sup style='color:red'>* required</sup> | day of birth |\r\n| monthOfBirth <sup style='color:red'>* required</sup> | month of birth |\r\n| yearOfBirth <sup style='color:red'>* required</sup> | year of birth |\r\n| stateCode <sup style='color:red'>* required</sup> | Valid State Code [(LGD)](https://lgdirectory.gov.in/) |\r\n| districtCode | Valid District Code [(LGD)](https://lgdirectory.gov.in/). |\r\n| countryCode | Country code. |\r\n| pincode <sup style='color:red'>* required</sup> | Pincode |\r\n| address | Valid Address as per documents.|"
      operationId: registerDetailsUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationByMobileOrEmailRequest'
      responses:
        '200':
          description: Return transaction id in case of success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        '201':
          description: Created
        '400':
          description: Bad request, check request before retrying
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Could not Generate PHR ID, Invalid data in the request. See API error for more details.
        '500':
          description: |-
            Downstream system(s) is down.
            Unhandled exceptions.

  /v1/apps/generate/otp:
    post:
      tags:
        - Registration by Mobile Or Email APIs
      summary: Generate Mobile/Email OTP to start registration transaction
      description: "<b>Explanation</b>\t- Api Accepts <b>Mobile Number/Email</b> and then Generates <b>OTP</b> for it.\r\n<b>Request Body</b>\t- Required\r\n<b>Response</b>\t- Api Accepts <b>Mobile Number/Email</b> and then Generates <b>OTP</b> for it. if number/email id not found then throws error.\r\n\r\n<p>Note : \r\n</p><p>1. <b style='color:red'>OTP will be valid for 10 Minutes only</b>"
      operationId: generateOTPUsingPOST_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateOTPRequest'
      responses:
        '200':
          description: Return transaction id in case of success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        '201':
          description: Created
        '400':
          description: Bad request, check request before retrying
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Could not Generate OTP or Mobile number may be already used.
        '500':
          description: |-
            Downstream system(s) is down.
            Unhandled exceptions.

  /v1/apps/resend/otp:
    post:
      tags:
        - Registration by Mobile Or Email APIs
      summary: Resend Mobile OTP f registration transaction
      description: "<b>Explanation</b>\t- Api Accepts <b>Transaction Number</b> and then Resend <b>OTP</b> for it.\r\n<b>Request Body</b>\t- Required\r\n<b>Response</b>\t- Api Accepts <b>Transaction Number</b> and then Resend <b>OTP</b> for it. if transaction number not found then throws error."
      operationId: resendOTPUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendOTPRequest'
      responses:
        '200':
          description: Return transaction id in case of success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '201':
          description: Created
        '400':
          description: Bad request, check request before retrying
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Could not Generate OTP or Mobile number may be already used.
        '500':
          description: |-
            Downstream system(s) is down.
            Unhandled exceptions.

  /v1/apps/validate/otp:
    post:
      tags:
        - Registration by Mobile Or Email APIs
      summary: Verify the mobile/email OTP to create the PHR ID.
      description: "## API to verify the Mobile/Email OTP\r\n## Request\r\nBelow is the Request Parameters description \r\n| Attributes | Description |\r\n| ------ | ------ |\r\n| sessionId <sup style='color:red'>* required</sup> | Session number, Based on UUID. |\r\n| value <sup style='color:red'>* required</sup> | Value reviced on the mobile number. |\r\n\r\n\r\n<p>Note : \r\n</p><p>1. <b style='color:red'>OTP must be in encrypted form</b>, Plain text form OTP is not allowed</p>"
      operationId: verifyOTPUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyOTPRequest'
      responses:
        '200':
          description: Return Transaction Number in case of success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TransactionWithPHRResponse'
        '201':
          description: Created
        '400':
          description: Bad request, check request before retrying
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Could not Find Account or Non-Existing/Expired Tocken
        '500':
          description: |-
            Downstream system(s) is down.
            Unhandled exceptions.

  /patients/get-notification:
    get:
      tags:
        - New
      summary: Get Notification Details
      parameters:
        - name: X-Auth-Token
          in: header
          description: Bearer Access token which was issued after successful login with gateway auth server.
          required: true
          allowReserved: false
          schema:
            type: string
      responses:
        '200':
          description: Return PHR User Account Details in case of success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNotificationResponse'
        '400':
          description: Bad request, check request before retrying
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Invalid Request data, See API error for more details.
        '500':
          description: |-
            Downstream system(s) is down.
            Unhandled exceptions.

  /v1/apps/patients/qr-code:
    get:
      tags:
        - Profile Collection API's.
      summary: Get Patients's QR code
      parameters:
        - name: X-Auth-Token
          in: header
          description: Bearer Access token which was issued after successful login with gateway auth server.
          required: true
          allowReserved: false
          schema:
            type: string
      responses:
        '200':
          description: Return PHR User Account Details in case of success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
        '400':
          description: Bad request, check request before retrying
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Invalid Request data, See API error for more details.
        '500':
          description: |-
            Downstream system(s) is down.
            Unhandled exceptions.

  /v1/apps/patients/profile/qr-code:
    get:
      tags:
        - Profile Collection API's.
      summary: Get Patient's ABHA Card
      parameters:
        - name: X-Auth-Token
          in: header
          description: Bearer Access token which was issued after successful login with gateway auth server.
          required: true
          allowReserved: false
          schema:
            type: string
      responses:
        '200':
          description: Return PHR User Account Details in case of success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
        '400':
          description: Bad request, check request before retrying
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Invalid Request data, See API error for more details.
        '500':
          description: |-
            Downstream system(s) is down.
            Unhandled exceptions.

  /v1/apps/patients/profile/getCard:
    get:
      tags:
        - Profile Collection API's.
      summary: Get Patient's SVG Card.
      parameters:
        - name: X-Auth-Token
          in: header
          description: Bearer Access token which was issued after successful login with gateway auth server.
          required: true
          allowReserved: false
          schema:
            type: string
      responses:
        '200':
          description: Return PHR User Account Details in case of success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
        '400':
          description: Bad request, check request before retrying
        '401':
          description: Unauthorized Access.
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Invalid Request data, See API error for more details.
        '500':
          description: |-
            Downstream system(s) is down.
            Unhandled exceptions.

components:
  schemas:
    Address:
      title: Address
      type: object
      properties:
        addressLine:
          type: string
          description: Address of the user.
          example: 9th Floor, Tower-l, Jeevan Bharati Building, Connaught Place, New Delhi - 110001
        countryCode:
          type: string
          description: Country code of the user
          example: '+91 '
        countryName:
          type: string
          description: Country Name of the user
          example: India
        districtCode:
          type: string
          description: District Code of the user (LGD).
          example: '71'
        districtName:
          type: string
          description: District Name of the user (LGD).
          example: Central
        stateCode:
          type: string
          description: State Code of the user (LGD).
          example: '7'
        stateName:
          type: string
          description: State Name of the user (LGD).
          example: Delhi
        subDistrictCode:
          type: string
          description: Sub District Code of the user (LGD).
          example: ' '
        subDistrictName:
          type: string
          description: Sub District Name of the user (LGD).
        townCode:
          type: string
          description: town Code of the user (LGD).
          example: ' '
        townName:
          type: string
          description: town Name of the user (LGD).
          example: ' '
        villageCode:
          type: string
          description: village Code of the user (LGD).
          example: ' '
        villageName:
          type: string
          description: village Name of the user (LGD).
          example: ' '
        wardCode:
          type: string
          description: Ward Code of the user (LGD).
          example: ' '
        wardName:
          type: string
          description: Ward Name of the user (LGD).
          example: ' '
    ApiError:
      title: ApiError
      required:
        - code
        - details
        - message
      type: object
      properties:
        code:
          type: object
          description: Error Code
          example: MIS-422
        details:
          type: object
          description: Dril down error details of the API
          example: '[{"attribute": {"key": "email","value": "email is invalid"},"code": "MIS-1010","message": "Invalid Data"}]'
        message:
          type: object
          description: Error Code
          example: Unable to process the current request due to some wrong data entered
    AuthIntRequestPayLoad:
      title: LoginViaMobileEmailRequest
      required:
        - healthIdNumber
        - purpose
        - authMode
        - requester
      type: object
      properties:
        healthIdNumber:
          type: string
          description: Health Id Number
          example: 22-2626-4321-7532
        purpose:
          type: string
          example: CM_ACCESS
        authMode:
          type: string
          enum: [ "MOBILE_OTP", "AADHAAR_OTP"]
          description: >
            Subjected to CM specific capability
             1. MOBILE_OTP - for SMS OTP
             2. AADHAAR_OTP - for auth using OTP sent to Aadhaar number
        requester:
          type: object
          required:
            - type
            - id
          properties:
            type:
              type: string
              enum: [ "PHR" ]
            id:
              type: string
              example: "IN0400XX"
              description: service id
    CreatePHRRequest:
      title: CreatePHRRequest
      required:
        - phrAddress
        - sessionId
      type: object
      properties:
        alreadyExistedPHR:
          type: boolean
        password:
          type: object
          description: User Password(Encrypted with public key).
          example: HNceo964MVndrs8Z2oMtzIsmmbzagveHbWkDsDKskTue+/YZhHHrMon19J03ggU457upzWMIX0nU3d38xjB3FxA2qWCVmvLZ98A9l0y3i33vq1ywu9cORGF4OEqV8l7H9h4tDnLGDHnbOh9ct85VfOohP4p73lqW6WQSMYcU+xkBfEsRj42pWL19EVsE1UULtQE8gYY1B0SeM63svUp1kQ4Pt5hdgKxibYBq+hRcck2PkEIhp2N7AkjH4Tf+AhXU9956WLwjKgAKMk7K4+Zv8JtxYCcblQitbpN4ImPH5edf4mO5R/L9RpdAVSllAQQfPIDlp5ZGOZ1GrSmhzOSP3g==
        phrAddress:
          type: object
          description: Phr address/Id of the User
          example: user@abdm
        sessionId:
          type: object
          description: Based on UUID
          example: a825f76b-0696-40f3-864c-5a3a5b389a83
    ErrorAttribute:
      title: ErrorAttribute
      required:
        - key
        - value
      type: object
      properties:
        key:
          type: object
          description: Attribute of the request that data is not valid
          example: email
        value:
          type: object
          description: Details of the error
          example: email is invalid
    ErrorDetails:
      title: ErrorDetails
      required:
        - code
        - message
      type: object
      properties:
        attribute:
          $ref: '#/components/schemas/ErrorAttribute'
        code:
          type: object
          description: Error Code
          example: MIS-1010
        message:
          type: object
          description: Details of the Api error code
          example: email is invalid
    GenerateOTPRequest:
      title: GenerateOTPRequest
      required:
        - value
        - authMode
      type: object
      properties:
        value:
          type: object
          description: Mobile Number/Email Address(Encrypted with public key).
          example: yJ2hY5bc2g3P2pQyca/ER6VYQ8TGMj/VN42h9xkh/3jAwJQtZEspnhrtEKqwFXt1+8budi64CPlUEzbkwUsCotIOMm8idfSX+SQyb8VlqLxxIkAzGvmXjWrbQUNEUWnnJjzkIjweNmj8GJ2u0uRdrAGpBc1vMoMz5XD2SGfFttvmziTtucq5w2dOoAPOni4Bl7sfii3Qyo8Szl1/tXNnZbDZi8HH9Cpajno4pFiu6mQDVTkkyDHTqyo7Bv3IFpdNYiRDAZ1yh1cBOfufMy1gSZQetCwETFxdsOgw7JvKL/gEN+RAFKZF2oUriCsAkYYbxW1cfrqa/YRXUw0ho+n4Jw==
        authMode:
          type: object
          description : accepts Mobile no. / Email in encrytped form
          example: MOBILE_OTP / EMAIL_OTP
    HidResponse:
      title: HidResponse
      required:
        - sessionId
        - name
        - dateOfBirth
      type: object
      properties:
        sessionId:
          type: object
          description: Based on UUID
          example: a825f76b-0696-40f3-864c-5a3a5b389a83
        name:
          required:
            - firstName
            - middleName
            - lastName
          type: object
          properties:
            firstName:
              type: string
              description: First name of the user
              example: Shubhanshu
            middleName:
              type: string
              description: First name of the user
              example: Kumar
            lastName:
              type: string
              description: First name of the user
              example: Shukla
        gender:
          type: object
          example: Male
        dateOfBirth:
          required:
            - date
            - month
            - year
          type: object
          properties:
            date:
              type: string
              description: Date of the birth of user.
              example: 14
            month:
              type: string
              description: Month of the birth of user.
              example: 01
            year:
              type: string
              description: Year of the birth of user.
              example: 1996
        healthIdNumber:
          type: object
          example: 43-4221-5105-6749
        stateName:
          type: object
          example: MAHARASHTRA
        stateCode:
          type: object
          example: '27'
        districtCode:
          type: object
          example: '401'
        districtName:
          type: object
          example: Pune
        pincode:
          type: object
          example: '412306'
        aadhaarVerified:
          type: object
          example: true
        profilePhoto:
          type: object
          description: Encoded with Base 64
          example: /9j/4AAQSkZJRgABAQAAAQABAAD/2wCEAAkJCQkJCQoLCwoODw0PDhQSERESFB4WFxYXFh4uHSEdHSEdLikxKCUoMSlJOTMzOUlUR0NHVGZbW2aBeoGoqOIBCQkJCQkJCgsLCg4PDQ8OFBIRERIUHhYXFhcWHi4dIR0dIR0uKTEoJSgxKUk5MzM5SVRHQ0dUZltbZoF6gaio4v/CABEIBLAHgAMBIgACEQEDEQH/xAAbAAACAwEBAQAAAAAAAAAAAAACAwABBAUGB//aAAgBAQAAAADwawLpMspcK7qrlE5F0Vtul2bVywMUNeBHUkW/bmxvYELGuNjh2VDvixxo5ViljKjDRMoahCULjs2JCShjhjh2OGxo0Y2MoXHOLszsKLhw7tD99mpZQxj8xceofmLEKFwXLTIyHwY1Ls+iEotjHY0M0pjRYxtGj4VFKLPohQlFQyy4Qipc0XG9pS+CP/2Q==
        authMethods:
          type: object
          description: Based on authMethods
          example: AADHAAR_OTP
        email:
          type: object
          example: example@demo.com
        mobile:
          type: object
          example: '9545812125'
        kycPhoto:
          type: object
          description: Encoded with Base 64
          example: sw1uD+gpv3fj6NHBNhtcII3GksVtkLT9bvcz0svYDyUt/x3jTtedXSYgw4b90GTwfLfs1eow056VsOw9HFS/wB8uH5Ysx+QzpL7PxmAY1WOHwOj04sPKN6Dw8XY8vcXovtvZc1dUB+TPAlGGPNu8iqMVPetukysjRxgbNdLLKMxn46rIRb8NieeyuDx1EHa90jJP9KwKGZdsLr08BysrmMJExzTO9FT93CzoNg50/nxzaQgmkBSbu9D8DxJm7XrLzWSUB05YCknHbokm4iXwyYBsrmfFDE/xCDfzYPhYyhtEmOi4J/GMp+lO+gAHQFQtxkIADhoSR8WXGcAbCUj7uTjFsBU/tc+RtvSotso4FXy8v+Ylzj28jbFTmmOWyAwYi9pThQjXnmRnq43dVdd5OXmxIII6SXs0JzoFvKwSk7VxhuLIRYzKqrkfcnWMrrmRgE8xZ6ZLft6O3IeiHb9WA8b/6/qO8Hdd17FKsSF6te59gSpoajS0FtQIgFn/c+NHzQYo5ZdsuRGM9v+bhHTInI=
        phrAddress:
          uniqueItems: true
          type: array
          items:
            type: string
        tags:
          type: object
          additionalProperties:
            type: string
    JwtResponse:
      title: JwtResponse
      required:
        - phrAdress
      type: object
      properties:
        phrAdress:
          type: object
          description: PHR Address
          example: user@abdm
        token:
          type: object
          description: JWT Bearer Token
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
    LinkedPlayLoad:
      title: LinkedPlayLoad
      required:
        - action
        - transactionId
      type: object
      properties:
        action:
          type: object
          example: LINK
        transactionId:
          type: object
          description: Based on UUID
          example: a825f76b-0696-40f3-864c-5a3a5b389a83
    LoginPostVerificationRequest:
      title: LoginPostVerificationRequest
      required:
        - patientId
        - transactionId
        - requesterId
      type: object
      properties:
        patientId:
          type: object
          description: PHR address of the user
          example: user@abdm
        transactionId:
          type: object
          description: Based on UUID
          example: a825f76b-0696-40f3-864c-5a3a5b389a83
        requesterId:
          type: object
          example: IN0401XX
    LoginPostVerificationRequestResponse:
      required:
        - token
      properties:
        token:
          type: object
          example: Bearer eyJhbGciOiJSUzUxMiJ9.eyJzdWIiOiJzaHViaGFuc2h1QGFiZG0iLCJjbGllbnRJZCI6IiIsInJlcXVlc3RlcklkIjoiUEhSLVsdfsdfsdfsdfdsfsfszAtMDA4Mi00ZGJlLTk3N2MtMjUxY2YyMWZiOWFhIn0.DOmjJzM1KwfdgDSg_JiHvomo5_sOwqTgG2vMyaM-c1XMCPklR-0FdWKMipIjNVycoF_sdfdfsdsfvsdY6WAqk2fM3T0d8Z9cycuavzSynT4mtNNcHX78y4OAu53mpTsTpesA4s6dK8IAcN9ir9T7Cnr5k4393i5ZUTOTs9Fq1wLPR87YzfJ6-tUgOIDdfJiGzEew2vIz_wt481ShQiIeHOG5PPCPC-H1JhblqRzijFJEX2G0zvolwC8cO9ATBWZlbOxq9gmENzYMAY1y1IBb8uO56zeldiVf0-_Pw4f8nP90nlyQrGoYfut3HuK-jmL7nUBs7Y0gufUiFw8gAIEg
    LoginPreVerificationRequest:
      title: LoginPreVerificationRequest
      required:
        - authcode
        - transactionId
        - requesterId
      type: object
      properties:
        transactionId:
          type: object
          description: Based on UUID
          example: a825f76b-0696-40f3-864c-5a3a5b389a83
        authcode:
          type: object
          description: Encrypted Mobile OTP.
          example: tSCaVUjHwHiMVCokz7u3ogfop5r7ON5GmVY4rJNaQhoVAMlZl5lDqbb4vobfFMsQ1zO404gkWqPqLoDCdavx+JJ5pxprDpRo+PbeV44q51xr5OoNW2ITy9x6WM81KF9o7OnIU3FOGg09jqcJ/By3S8ICWxzJDKVwCJPehHtjhSFiy+mdWEjKkBTrEWJRTy3ZOkij+fskm+JjLoJlIF0TmA94Jb/avX0/LrnacpWEYWAHd0R/8/HIeITVNwG5hnsuRyIcIKKy7bEuYul8wJDD8RPBhL/gIAV4c5zDCb518o1MJGQtNg8Yf/zcROdaynWrBHIh2tacPrxmLHiZHD+BHQ==
        requesterId:
          type: object
          description: Service ID
          example: IN0410XX
    LoginPreVerificationResponse:
      title: LoginPreVerificationResponse
      required:
        - mappedPhrAddress
        - mobileEmail
        - transactionId
        - requesterId
      type: object
      properties:
        mappedPhrAddress:
          uniqueItems: true
          type: array
          description: List of the Phr Address mapped with the Mobile number
          example: '[user@abdm, user2@abdm]'
          items:
            type: object
        mobileEmail:
          type: string
          description: Email/Mobile number registered with PHR ADDRESS.
          example: '9988776XX5'
        requesterId:
          type: string
          description: service Id.
          example: 'IN0410XX'
        transactionId:
          type: object
          description: Based on UUID
          example: a825f76b-0696-40f3-864c-5a3a5b389a83
    LoginRequestPayload:
      title: LoginRequestPayload
      required:
        - sessionId
        - value
      type: object
      properties:
        sessionId:
          type: object
          description: Based on UUID
          example: a825f76b-0696-40f3-864c-5a3a5b389a83
        value:
          type: object
          description: Encrypted value.
          example: sw1uD+gpv3fj6NHBNhtcII3GksVtkLT9bvcz0svYDyUt/x3jTtedXSYgw4b90GTwfLfs1eow056VsOw9HFS/wB8uH5Ysx+QzpL7PxmAY1WOHwOj04sPKN6Dw8XY8vcXovtvZc1dUB+TPAlGGPNu8iqMVPetukysjRxgbNdLLKMxn46rIRb8NieeyuDx1EHa90jJP9KwKGZdsLr08BysrmMJExzTO9FT93CzoNg50/nxzaQgmkBSbu9D8DxJm7XrLzWSUB05YCknHbokm4iXwyYBsrmfFDE/xCDfzYPhYyhtEmOi4J/GMp+lO+gAHQFQtxkIADhoSR8WXGcAbCUj7uTjFsBU/tc+RtvSotso4FXy8v+Ylzj28jbFTmmOWyAwYi9pThQjXnmRnq43dVdd5OXmxIII6SXs0JzoFvKwSk7VxhuLIRYzKqrkfcnWMrrmRgE8xZ6ZLft6O3IeiHb9WA8b/6/qO8Hdd17FKsSF6te59gSpoajS0FtQIgFn/c+NHzQYo5ZdsuRGM9v+bhHTInI=
    LoginViaMobileEmailRequest:
      title: LoginViaMobileEmailRequest
      required:
        - value
        - purpose
        - authMode
        - requester
      type: object
      properties:
        value:
          type: string
          description: Mobile/Email registered with PHR Address
          example: yJ2hY5bc2g3P2pQyca/ER6VYQ8TGMj/VN42h9xkh/3jAwJQtZEspnhrtEKqwFXt1+8budi64CPlUEzbkwUsCotIOMm8idfSX+SQyb8VlqLxxIkAzGvmXjWrbQUNEUWnnJjzkIjweNmj8GJ2u0uRdrAGpBc1vMoMz5XD2SGfFttvmziTtucq5w2dOoAPOni4Bl7sfii3Qyo8Szl1/tXNnZbDZi8HH9Cpajno4pFiu6mQDVTkkyDHTqyo7Bv3IFpdNYiRDAZ1yh1cBOfufMy1gSZQetCwETFxdsOgw7JvKL/gEN+RAFKZF2oUriCsAkYYbxW1cfrqa/YRXUw0ho+n4Jw==
        purpose:
          type: string
          example: CM_ACCESS
        authMode:
          type: string
          enum: [ "MOBILE_OTP", "AADHAAR_OTP"]
          description: >
            Subjected to CM specific capability
             1. MOBILE_OTP - for SMS OTP
             2. AADHAAR_OTP - for auth using OTP sent to Aadhaar number
        requester:
          type: object
          required:
            - type
            - id
          properties:
            type:
              type: string
              enum: [ "PHR" ]
            id:
              type: string
              example: "IN0400XX"
              description: service id
    LoginViaMobileEmailRequestResponse:
      required:
        - transactionId
        - requesterId
        - authMode
        - error
      properties:
        transactionId:
          type: object
          example: 1431fa4f-82b4-4cba-bdc0-770e9178f644
        requesterId:
          type: string
          example: IN041XX
        authMode:
          type: string
          example: MOBILE_OTP
        error:
          type: string
          example: null
    LoginViaPhrRequest:
      type: object
      required:
        - patientId
        - purpose
        - authMode
        - requester
      properties:
        patientId:
          type: string
          example: hinapatel@sbx
        purpose:
          type: string
          enum: [ "CM_ACCESS" ]
        authMode:
          type: string
          enum: [ "MOBILE_OTP", "AADHAAR_OTP"]
          description: >
            Subjected to CM specific capability
             1. MOBILE_OTP - for SMS OTP
             2. AADHAAR_OTP - for auth using OTP sent to Aadhaar number
        requester:
          type: object
          required:
            - type
            - id
          properties:
            type:
              type: string
              enum: [ "PHR" ]
            id:
              type: string
              example: "IN0400XX"
              description: service id
    AuthInitResponse:
      type: object
      properties:
        transactionId:
          type: string
          example: b6547f6a-f0d1-4f6f-b82b-05f681b4d1f7
        requesterId:
          type: string
          example: "IN0400XX"
          description: service id
        authMode:
          type: string
          enum: ["AADHAAR_OTP", "MOBILE_OTP"]
        error:
          type: string
          example: null
    PHRSuggestionRequst:
      title: PHRSuggestionRequst
      required:
        - transactionId
      type: object
      properties:
        transactionId:
          type: object
          description: Based on UUID
          example: a825f76b-0696-40f3-864c-5a3a5b389a83
    ProfileEditRequest:
      title: ProfileEditRequest
      type: object
      properties:
        addressLine:
          type: string
          description: Address of the user.
          example: 9th Floor, Tower-l, Jeevan Bharati Building, Connaught Place, New Delhi - 110001
        dayOfBirth:
          type: string
          description: Day of birth of the user.
          example: '15'
        districtCode:
          type: string
          description: District Code of the user (LGD).
          example: '71'
        firstName:
          type: string
          description: First name of the user
          example: Ayushman
        gender:
          type: string
          description: Gender
          example: M
          enum:
            - F
            - M
            - O
        lastName:
          type: string
          description: 'Last name of the user '
          example: Mission
        middleName:
          type: string
          description: 'Middle name of the user '
          example: Bharat
        monthOfBirth:
          type: string
          description: Month of birth of the user.
          example: '8'
        pinCode:
          type: string
          description: Area Pincode of the user.
          example: '110001'
        profilePhoto:
          type: string
          description: Profile photo of the user.
          example: <BASE-64 FORMAT ENCODED STRING>
        stateCode:
          type: string
          description: State Code of the user (LGD).
          example: '7'
        yearOfBirth:
          type: string
          description: Year of birth of the user.
          example: '2021'
    ProfilePasswordUpdateRequest:
      title: ProfilePasswordUpdateRequest
      type: object
      properties:
        password:
          type: object
          description: User Password(Encrypted with public key).
          example: HNceo964MVndrs8Z2oMtzIsmmbzagveHbWkDsDKskTue+/YZhHHrMon19J03ggU457upzWMIX0nU3d38xjB3FxA2qWCVmvLZ98A9l0y3i33vq1ywu9cORGF4OEqV8l7H9h4tDnLGDHnbOh9ct85VfOohP4p73lqW6WQSMYcU+xkBfEsRj42pWL19EVsE1UULtQE8gYY1B0SeM63svUp1kQ4Pt5hdgKxibYBq+hRcck2PkEIhp2N7AkjH4Tf+AhXU9956WLwjKgAKMk7K4+Zv8JtxYCcblQitbpN4ImPH5edf4mO5R/L9RpdAVSllAQQfPIDlp5ZGOZ1GrSmhzOSP3g==
    RegistrationByMobileOrEmailRequest:
      title: RegistrationByMobileOrEmailRequest
      required:
        - name
        - gender
        - mobile
        - dateOfBirth
        - stateCode
        - districtCode
        - sessionId
      type: object
      properties:
        sessionId:
          type: object
          description: Based on UUID
          example: a825f76b-0696-40f3-864c-5a3a5b389a83
        name:
          required:
            - first
            - middle
            - last
          type: object
          properties:
            first:
              type: string
              description: First name of the user
              example: Shubhanshu
            middle:
              type: string
              description: First name of the user
              example: Kumar
            last:
              type: string
              description: First name of the user
              example: Shukla
        dateOfBirth:
          required:
            - date
            - month
            - year
          type: object
          properties:
            date:
              type: string
              description: Date of the birth of user.
              example: 14
            month:
              type: string
              description: Month of the birth of user.
              example: 01
            year:
              type: string
              description: Year of the birth of user.
              example: 1996
        gender:
          type: string
          description: Gender
          example: M
          enum:
            - F
            - M
            - O
        stateCode:
          type: string
          description: State Code of the user (LGD).
          example: '7'
        districtCode:
          type: string
          description: District Code of the user (LGD).
          example: '77'
        email:
          type: string
          description: Email address of the user
          example: 6BE4FfCtkOrDZU/Fc545GrhVGgC8JxiK8uU/DSQT7PNebX2Bigz0lUuC3R0F4RA+PoulQCfqqK4OKDe1vi0oAgiSbvAQl4DoCnd4ANmb5k+5YevhouiHCiBCp1zUZZLJ6A28Ux7NBWioNxFuWUYh2syF+nOoQ0kyQ1bUUMYg8tFtm0SLj0MRTowh3fksCFsbYBj6sgx7Hd+5M8xlUDhd/v5mHh4zoTodQNRc5L/2nlT/eBSQPof1iIgkMsgYZjLllS0v1LPSdeGsnsreEVtqkWn/tPyLwcsqkcMxDKrhHbI3odlIkYngBLGqLuBWLVE52pihdCbGrVwpG4S0bpQ0qg==
        mobile:
          type: string
          description: Mobile number of the user.
          example: yJ2hY5bc2g3P2pQyca/ER6VYQ8TGMj/VN42h9xkh/3jAwJQtZEspnhrtEKqwFXt1+8budi64CPlUEzbkwUsCotIOMm8idfSX+SQyb8VlqLxxIkAzGvmXjWrbQUNEUWnnJjzkIjweNmj8GJ2u0uRdrAGpBc1vMoMz5XD2SGfFttvmziTtucq5w2dOoAPOni4Bl7sfii3Qyo8Szl1/tXNnZbDZi8HH9Cpajno4pFiu6mQDVTkkyDHTqyo7Bv3IFpdNYiRDAZ1yh1cBOfufMy1gSZQetCwETFxdsOgw7JvKL/gEN+RAFKZF2oUriCsAkYYbxW1cfrqa/YRXUw0ho+n4Jw==
        countryCode:
          type: string
          description: Country of the user
          example: '+91 '
        pinCode:
          type: string
          description: Area Pincode of the user.
          example: '110001'
        address:
          type: string
          description: Address of the user.
          example: 9th Floor, Tower-l, Jeevan Bharati Building, Connaught Place, New Delhi - 110001

    ResendOTPRequest:
      title: ResendOTPRequest
      required:
        - sessionId
      type: object
      properties:
        sessionId:
          type: object
          description: Based on UUID
          example: a825f76b-0696-40f3-864c-5a3a5b389a83
    SearchByHealthIdNumberRequest:
      title: SearchByHealthIdNumberRequest
      required:
        - healthIdNumber
        - yearOfBirth
      type: object
      properties:
        healthIdNumber:
          type: object
          example: 11-1111-1111-1111
        yearOfBirth:
          type: object
          example: '1994'
    SearchPhrAuthResponse:
      title: SearchPhrAuthResponse
      required:
        - phrAddress
      type: object
      properties:
        authMethods:
          uniqueItems: true
          type: array
          description: Based on Login Methods
          example: '[PASSWORD, MOBILE_OTP, EMAIL_OTP]'
          items:
            type: object
        phrAddress:
          type: object
          description: Phr Address of the user
          example: user@abdm
    SearchRequestPayLoad:
      title: SearchRequestPayLoad
      required:
        - healhtIdNumber
      type: object
      properties:
        healhtIdNumber:
          type: object
          example: 11-1111-1111-1111
    SearchResponsePayLoad:
      title: SearchResponsePayLoad
      type: object
      properties:
        authMethods:
          uniqueItems: true
          type: array
          items:
            type: string
        blockedAuthMethods:
          uniqueItems: true
          type: array
          items:
            type: string
        healthIdNumber:
          type: string
        status:
          type: string
    SuccessResponse:
      title: SuccessResponse
      required:
        - success
        - sessionId
      type: object
      properties:
        success:
          type: object
          description: bool
          example: 'true'
        sessionId:
          type: object
          example: 16a18568-7c86-49a7-a95c-f1671cd04a94
    TransactionResponse:
      title: TransactionResponse
      required:
        - sessionId
      type: object
      properties:
        sessionId:
          type: object
          description: Based on UUID
          example: 31216fed-4a23-4a18-ac89-03c9f3a0bf89
    TransactionWithPHRResponse:
      title: TransactionWithPHRResponse
      required:
        - mappedPhrAddress
        - sessionId
      type: object
      properties:
        mappedPhrAddress:
          uniqueItems: true
          type: array
          description: List of the Phr Address mapped with the Mobile number
          example: '[user@abdm, user2@abdm]'
          items:
            type: object
        sessionId:
          type: object
          description: Based on UUID
          example: a825f76b-0696-40f3-864c-5a3a5b389a83
    UpdateProfileRequest:
      title: UpdateProfileRequest
      required:
        - transactionId
      type: object
      properties:
        transactionId:
          type: object
          description: Based on UUID
          example: a825f76b-0696-40f3-864c-5a3a5b389a83
    User:
      title: User
      required:
        - authMode
      type: object
      properties:
        id:
          type: object
          description: Phr address/Id of the User
          example: user@abdm
        name:
          required:
            - first
            - middle
            - last
          type: object
          properties:
            first:
              type: string
              description: First name of the user
              example: Shubhanshu
            middle:
              type: string
              description: First name of the user
              example: Kumar
            last:
              type: string
              description: First name of the user
              example: Shukla
        dateOfBirth:
          required:
            - date
            - month
            - year
          type: object
          properties:
            date:
              type: string
              description: Date of the birth of user.
              example: 14
            month:
              type: string
              description: Month of the birth of user.
              example: 01
            year:
              type: string
              description: Year of the birth of user.
              example: 1996
        hasTransactionPin:
          type: boolean
          description: District Code of the user (LGD).
          example: 'false'
        healthId:
          type: string
          description: HealthcareID Number.
          example: 20-0878-1213-5055
        address:
          type: string
          description: Address of the user.
          example: 9th Floor, Tower-l, Jeevan Bharati Building, Connaught Place, New Delhi - 110001
        stateName:
          type: string
          example: Delhi
        stateCode:
          type: string
          example: 7
        districtName:
          type: string
          description: District Name of the user (LGD).
          example: 'Central'
        districtCode:
          type: string
          description: District Code of the user (LGD).
          example: '77'
        aadhaarVerified:
          type: boolean
          description: AadhaarVerification status.
          example: 'false'
        profilePhoto:
          type: string
          description: Profile photo of the user.
          example: <BASE64 ENCODED STRING>
        kycDocumentType:
          type: string
        kycStatus:
          type: string
          description: Kyc status of the user
          example: VERIFIED
        mobile:
          type: object
          description: Mobile Number/Email Address(Encrypted with public key).
          example: '9988776655'
        mobileVerified:
          type: boolean
          description: Mobile Number is verified or not
          example: true
        email:
          type: string
          description: Email address of the user
          example: user@nha.com
        emailVerified:
          type: object
          description: Email Address is verified or not
          example: 'true'
        gender:
          type: string
          description: Gender
          example: M
          enum:
            - F
            - M
            - O
        countryName:
          type: string
          description: Country of the user
          example: 'India'
    VerifyOTPRequest:
      title: VerifyOTPRequest
      required:
        - value
        - sessionId
      type: object
      properties:
        value:
          type: object
          description: Encrypted Mobile OTP.
          example: tSCaVUjHwHiMVCokz7u3ogfop5r7ON5GmVY4rJNaQhoVAMlZl5lDqbb4vobfFMsQ1zO404gkWqPqLoDCdavx+JJ5pxprDpRo+PbeV44q51xr5OoNW2ITy9x6WM81KF9o7OnIU3FOGg09jqcJ/By3S8ICWxzJDKVwCJPehHtjhSFiy+mdWEjKkBTrEWJRTy3ZOkij+fskm+JjLoJlIF0TmA94Jb/avX0/LrnacpWEYWAHd0R/8/HIeITVNwG5hnsuRyIcIKKy7bEuYul8wJDD8RPBhL/gIAV4c5zDCb518o1MJGQtNg8Yf/zcROdaynWrBHIh2tacPrxmLHiZHD+BHQ==
        sessionId:
          type: object
          description: Based on UUID
          example: a825f76b-0696-40f3-864c-5a3a5b389a83
    VerifyPasswordOtpLoginRequest:
      type: object
      required:
        - transactionId
        - authCode
        - requesterId
      properties:
        transactionId:
          type: string
          example: de277b66-00ea-4a4a-a29f-bb9a467960aa
        authCode:
          type: string
          example: 2xxWA2g4HeLZsG3NB9/Zx676BIAXZaCHZU3LkrXxV0DSCaT1dQpKsd/Nq6tw6yjSOXiY8vM9GJpZ3gnkBttp47ciwVjM7iIKXKZghjuStDxIabUjEA5OdQZkLdiXp0t185s59tfOnKz1FsJeOPBzhM6qAEbn7EgMZounP3aZrS16FQrWahLNVgrxeVOrfg7HgZcwK+EHTP8q8Z9Ya4sW4sdsM3Aptkb1aBpj8j/G36+n9xNEoWTljfCeHdgpwKzWr2yU72ZLUXSEykA722H8NM8L982HNiLlOnBbmoaijMo50MKFse9pmSlveIQGPl3uz/NtAy+5sKLjtt31AR45sQ==
          description : OTP
        requesterId:
          type: string
          example: "IN0400XX"
          description: service id
    AuthConfirmResponse:
      type: object
      properties:
        token:
          type: string
          description: JWT Token
    GetNotificationResponse:
      type: array
      items:
        type: object
        properties:
          healthId:
            type: string
            example: "batman@sbx"
            description: 'this will be the service id'
          target:
            type: string
            example: "in.nhdm.phr.ui.activity.LinkLockerDetailsActivity"
          params:
            required:
              - subscription_request_id
              - month
              - year
            type: object
            properties:
              subscription_request_id:
                type: string
                description: Based on UUID
                example: 463d626e-49a3-4b4f-9941-41a0743698a1
              authorization_request_id:
                type: string
                description: Based on UUID
                example: 724d58b0-2f73-4ced-857f-0103186efb55
          title:
            type: string
            example: "Locker Setup Request"
          body:
            example: DRiefcase Health Locker
          timestamp:
            example: "2022-03-17T10:11:45.913992"
    StringResponse:
      type: string
      properties:
        String:
          type: object
          example: String




