[{"content":"Main Envelope The base FHR envelope contains all the data that you want to transfer, compiled as a FHIR Bundle. A FHIR Bundle, referred to as data content, allows for packaging information of multiple types or as a Document.\nYou can send over multiple such bundles through the data transfer API. Note that the bundle itself must be encrypted. Note: Refer to the API reference documentation for information on bundles and how data should be sent over HTTPs. For bundle encryption, refer to the API and Elliptic-curve Diffie–Hellman key exchange documentation.\nThe following is a sample of the basic structure of a FHIR Bundle:\n{ \"resourceType\": \"Bundle\", \"id\": \"bundle01\", \"meta\": { \"versionId\": \"1\", \"lastUpdated\": \"2020-01-01T15:32:26.605+05:30\" }, \"timestamp\": \"2020-01-01T15:32:26.605+05:30\", \"identifier\": { \"system\": \"https://example.hospital.com/pr\", \"value\": \"bundle01\" }, \"type\": \"document\", \"entry\": [ { \"fullUrl\": \"Composition/1\", \"resource\": { \"resourceType\": \"Composition\", \"id\": \"1\", \"date\": \"2020-01-01T15:32:26.605+05:30\", \"meta\": { \"versionId\": \"1\", \"lastUpdated\": \"2020-01-01T15:32:26.605+05:30\" }, \"identifier\": { \"system\": \"https://example.hospital.com/documents\", \"value\": \"645bb0c3-ff7e-4123-bef5-3852a4784813\" }, \"status\": \"final\", \"type\": { \"coding\": [ { \"system\": \"https://ndhm.gov.in/sct\", \"code\": \"440545006\", \"display\": \"Prescription record\" } ], \"text\":\"Prescription Record\" }, \"subject\": { \"reference\": \"Patient/1\", \"display\": \"Hina Patel\" }, \"author\": [ { \"reference\": \"Practitioner/1\", \"display\": \"Dr. Manju Sengar\" } ], \"title\": \"Prescription record\", \"encounter\": { \"reference\": \"Encounter/7fce6ec8-5013-4a27-b0a6-c43232608cda\", \"display\": \"OP Visit\" }, \"attester\": [ { \"mode\": \"official\", \"time\": \"2019-01-04T09:10:14Z\", \"party\": { \"reference\": \"Organization/MaxSaket01\", \"display\": \"Max Super Speciality Hospital, Saket\" } } ], \"section\": [ { \"title\": \"Prescription record\", \"code\": { \"coding\": [ { \"system\": \"https://affinitydomain.in/sct\", \"code\": \"440545006\", \"display\": \"Prescription record\" } ] }, \"entry\": [ { \"reference\": \"MedicationRequest/1\" } ] } ] } }, { \"fullUrl\": \"Organization/MaxSaket01\", \"resource\": { \"resourceType\": \"Organization\", \"id\": \"MaxSaket01\", \"name\": \"Max Super Speciality Hospital, Saket\", \"identifier\": [ { \"type\": { \"coding\": [ { \"system\": \"http://terminology.hl7.org/CodeSystem/v2-0203\", \"code\": \"PRN\", \"display\": \"Provider number\" } ] }, \"system\": \"https://facility.ndhm.gov.in\", \"value\": \"10000005\" } ], \"address\": [ { \"line\": [ \"1, 2, Press Enclave Marg, Saket Institutional Area, Saket\" ], \"city\": \"New Delhi\", \"state\": \"New Delhi\", \"postalCode\": \"110017\", \"country\": \"INDIA\" } ] } }, { \"fullUrl\": \"Encounter/7fce6ec8-5013-4a27-b0a6-c43232608cda\", \"resource\": { \"resourceType\": \"Encounter\", \"id\": \"7fce6ec8-5013-4a27-b0a6-c43232608cda\", \"status\": \"finished\", \"class\": { \"system\": \"http://terminology.hl7.org/CodeSystem/v3-ActCode\", \"code\": \"AMB\", \"display\": \"Outpatient visit\" } } }, { \"fullUrl\": \"MedicationRequest/1\", \"resource\": { \"id\": \"1\", \"resourceType\": \"MedicationRequest\", ..... } } ] } Explanation:\nresourceType*: It must be Bundle id*: Id must be unique for each bundle that you want to send. For traceability purposes, it’s recommended that you provide an id (for every resource) that you must be able to resolve within your system. timestamp*: Timestamp should be the time of issue of the document. identifier*: It should be an identifier by which you can trace the document back to your system type*: Type must be “document”. The first resource must be a composition in the bundle, and is meant for contextual grouping of information. entry*: It is an array of FHIR resources. As of now, the reference HIU service supports top level Health Information (HI) types like - “Prescription”, “Diagnostic Report”, “Discharge Summary”, “OP Consultation”, which may contain resources like “Observation”, “Condition”, “MedicationRequest”, “DocumentReference”, “DiagnosticReport”, “Procedure” - and also other reference entities like “Medication”, “Practitioner”, “Patient”, “Organization”, etc. meta.versionId : The versionId should be mentioned in the bundle.meta . Can be used to ensure that updates are based on the latest version of the resource. Note for simplicity sake, the example above does not illustrate the full document details like the Practitioner, Patient, Organization etc. They must be included in the document and should be resolvable by the references.\nComposition\nThe composition is the first resource in the bundle and acts as a .. logical package that provides a single coherent statement of meaning, establishes its own context and that has clinical attestation with regard to who is making the statement. It defines the structure and content necessary for a document. Note, it alone does not mean anything, but along with its sections and entries allow grouping and packaging of all other resources, which when referenced from Composition must be included as entries in the Bundle.\ntitle*: Must be provided and must broadly describe what the composition is about. title*: Should specify what the type of the document is. For example “440545006” is meant for “Prescription Record” is SNOMED-CT. encounter*: Provides the context of visit or clinical encounter. subject*: The patient reference. You can provide minimal information. You should also provide a “display” attribute (typically the name) for the subject. author*: Specifies the practitioner who is the author of the document. In some contexts, this may be an Organization resource reference as well. Again, please provide a “display” attribute as well. attester*: It is used to list out the practitioner or organization who has attested to the accuracy of the composition/document. These listed resources must be available within the same bundle. As specified in the example, the mode should be official. In party, provide the reference of organization resource. The organization must have an identifier registered with ABDM facility registry. Organization.identifier.value value should be an HIP id registered with ABDM facility registry. for production use, the organization identifier system must be ABDM facility registry while for sandbox it should be ABDM sandbox facility registry. section*: Sections and their entries are used to list out the top level resources the document is composed of. For example, in the example above, it may contain a list of MedicationRequest (even a DocumentReference or Binary containing an image). Note, do not include the referenced resources (e.g. Patient, Encounter, Practitioner etc) in the section.entry[] - such resources must be available in the bundle, but need not be included in the section.list[] Important\nNotice each bundle entry’s fullUrl: there are 2 ways to specify so. Specified as “resource-type/id”, as logical URL, and resolvable within the bundle. Each resource id must be also specified. All entries must be resolvable in the bundle. Please do not provide absolute URL for any references. Document Types\nIn the above example, we are preparing a FHIR Document for Prescription Record. Composition.type indicates what is the document about, and you must send over the appropriate codes, so that the HIU or Patient applications understand the health information sent.\nJust like in the example above, if you were to send over a Diagnostic Report Record you would send over Composition.type as:\n\"type\":{ \"coding\":[ { \"system\":\"https://ndhm.gov.in/sct\", \"code\":\"721981007\", \"display\":\"Diagnostic Report\" } ], \"text\":\"Diagnostic Report Record\" } ","description":"","tags":null,"title":"Main Envelope","uri":"/abdm-docs/3-milestone2/packaging-health-data/main-envelope/index.html"},{"content":"Creation of ABHA Address Understanding ABHA Address What is ABHA Address?\nABHA Address is an easy to remember username that enables a user to access their health records digitally and share their records with various healthcare providers. An ABHA address may look like ‘name@abdm’. It is required to sign up on ABHA Application\nEvery 14-digit ABHA number is automatically issued a default ABHA address on the ABDM HIE-CM, which looks like 14-digit@sbx or 14-digit@abdm.\nCreate ABHA Address\nThe user can also create a user defined name on the HIE-CM that can be linked to this ABHA number. for example: ramesh123@abdm, so that’s easy to remember.\nIt is also possible to create an ABHA address that is not linked to an ABHA number on the HIE-CM using mobile, name, age \u0026 gender.\nTest Cases Mapping Applicable To PHR App Using Aadhar OTP Mandatory Using Aadhar Biometrics Optional Using Aadhar Demographics (Offline) NA Using Driving License Optional Download ABHA Card Mandatory Profile Update Mandatory This section covers: Using Mobile Number Using ABHA Number Link / De-link of ABHA number \u0026 ABHA address ","description":"","tags":null,"title":"Creation of ABHA Address","uri":"/abdm-docs/5-building-a-phr-app/create-abha-address/index.html"},{"content":"Implementation Guidelines for Encrypting and Decrypting FHIR Data This guide outlines the technical foundations and protocols underpinning the process of encrypting and decrypting FHIR data within the ABDM ecosystem. Key actors in this system include Health Information Providers (HIPs), Health Information Users (HIUs), and Health Information Exchange Consent Managers (HIE-CMs).\nTerminology In this guide, the following abbreviations are used:\nHIP: Health Information Provider HIU: Health Information User HIE-CM: Health Information Exchange Consent Manager ECDH: Elliptic-curve Diffie–Hellman Key Exchange AES-GCM: Advanced Encryption Standard-Galois/Counter Mode P and U: Represent the Health Information Provider and Health Information User in the system, respectively DHPK: Elliptic-curve Diffie–Hellman Public Key DHSK: Elliptic-curve Diffie–Hellman Secret/Private Key RAND: Random String DHK(U,P): Elliptic-curve Diffie–Hellman Key / Shared Secret Key for a specific data exchange session between U and P HKDF: Hash-based Key Derivation Function SK(U,P): AES-GCM Encryption/Decryption Key for a specific data exchange session between U and P Security and Cryptographic Mechanism The FHIR data within this system is securely exchanged using a cryptographic mechanism ensuring perfect forward secrecy. Consequently, even if any key materials held by HIPs, HIUs, or HIE-CM servers are compromised, previously exchanged data remains secure. This mechanism employs the Elliptic-curve Diffie–Hellman Key Exchange (ECDH), and all encryption/decryption operations use the Elliptic Curve Cryptography (ECC) curve, Curve25519. This curve and the ECDH protocol are widely utilized in internet security protocols such as SSH and TLS, and in applications like WhatsApp, to establish shared secrets between remote parties.\nThe diagram below provides a visual summary of the FHIR data flow between the HIP and HIU within the ABDM system.\nData Encryption at HIP The data flow begins with a health information data request from the HIU. The request contains the corresponding patient’s consent, and HIU’s public key material (HIU’s public key and nonce). The HIU key material is generated in the following steps:\nCreate a set of ECDH parameters. Generate a short-term ECDH key pair (DHSK(U), DHPK(U)). Produce a 32-byte random value, RAND(U), also referred to as a nonce. The consent artefact, HIU’s public key, and nonce are sent to the HIE-CM as part of the data request through a digitally-signed API call, which is then forwarded to the HIP.\nUpon successful consent validation, the HIP prepares the corresponding FHIR bundle and carries out these steps:\nGenerate a new ECDH public-private key pair (DHSK(P), DHPK(P)) in the same group as specified by the HIU. Generate a 32-byte random value, RAND(P), or nonce. Compute an ECDH shared key, DHK(U,P), using DHPK(U) and DHSK(P). Derive the IV and SALT by XORing RAND(P) and RAND(U), using the first 20 bytes as the SALT for the HKDF, and the last 12 bytes as IV for the encryption process. Compute a 256-bit AES-GCM encryption key for the session, SK(U,P), using the HKDF function with the ECDH shared key and the derived SALT. Encrypt the data using the derived AES-GCM encryption key and the IV. The HIP then sends its public key DHPK(P), its nonce RAND(P), and the encrypted data to the HIU.\nData Decryption at HIU Upon receiving the encrypted data and HIP’s public key material (the public key DHPK(P), and the nonce RAND(P)), the HIU follows these steps:\nQuery the stored data and retrieve its own key material initially used for the data request. Compute the ECDH shared key, DHK(U,P), using DHPK(P) and DHSK(U). Derive the IV and SALT by XORing RAND(U) and RAND(P), using the first 20 bytes as the SALT for the HKDF, and the last 12 bytes as IV for the decryption process. Compute a 256-bit AES-GCM decryption key for the session, SK(U,P), using the HKDF function with the ECDH shared key and the derived SALT. Decrypt the data using the derived AES-GCM decryption key and the IV. Code Implementation A full implementation of the above processes — Key Material Generation, Encryption, Decryption — in Java is available in Fidelius CLI. The specific parts are:\nKey Material Generation Encryption Decryption Guidelines for Public Keys Public keys should follow the big endian byte ordering scheme (network byte order) to maintain consistency and ensure interoperability across different systems.\nBouncy Castle’s cryptographic implementations generally comply with these conventions. Additionally, public keys should be uncompressed and free of any additional headers or encoding details.\nSeveral libraries, such as OpenSSL, Bouncy Castle, NaCl, Libgcrypt, PyNaCl, and TweetNaCl, can help with this task. These libraries offer the ability to export public keys in their uncompressed form.\nFor uncompressed EC public keys, including those of Curve25519, their hexadecimal representation consistently starts with the ‘04’ prefix. This ‘04’ prefix serves as an identifier signaling that the public key is in uncompressed form. After this ‘04’ prefix, the hexadecimal representations of the X and Y coordinates of the EC point are provided, each 32 bytes in length.\n","description":"","tags":null,"title":"Implementation Guidelines","uri":"/abdm-docs/3-milestone2/encryption-decryption/implementation-guidelines/index.html"},{"content":"Health Record Formats HRP can only link the following type of health records to an ABHA Address. All health records must be structured as FHIR (Fast Healthcare Interoperability Resources) formats. The FHIR specifications used by ABDM are published and maintained by the National Resource Centre for E-Health Standards (NRCES) at https://nrces.in/ndhm/fhir/r4/index.html.\nAll health records have been designed to be used in 2 ways\nA simple FHIR bundle with a PDF or image attachment containing the detailed health information A structured FHIR bundle with coded health information. While integrators can start with simple bundles with attachments, they will be expected to comply with producing structured FHIR data within a couple of years from achieving compliance.\nHere is a list of Health Records, based on FHIR’s specifications:\nName Definition Diagnostic Report Record The Clinical Artifact represents diagnostic reports including Radiology and Laboratory reports that can be shared across the health ecosystem. Discharge Summary Record Clinical document used to represent the discharge summary record for ABDM HDE data set. Health Document Record The Clinical Artifact represents the unstructured historical health records as a single of multiple Health Record Documents generally uploaded by the patients through the Health Locker and can be shared across the health ecosystem. Immunization Record The Clinical Artifact represents the Immunization records with any additional documents such as vaccine certificate, the next immunization recommendations, etc. This can be further shared across the health ecosystem. OP Consult Record The Clinical Artifact represents the outpatient visit consultation note which may include clinical information on any OP examinations, procedures along with medication administered, and advice that can be shared across the health ecosystem. Prescription Record The Clinical Artifact represents the medication advice to the patient in compliance with the Pharmacy Council of India (PCI) guidelines, which can be shared across the health ecosystem. Wellness Record The Clinical Artifact represents regular wellness information of patients typically through the Patient Health Record (PHR) application covering clinical information such as vitals, physical examination, general wellness, women wellness, etc., that can be shared across the health ecosystem. ","description":"","tags":null,"title":"Health Record Formats","uri":"/abdm-docs/3-milestone2/health-record-format/index.html"},{"content":"HIP Initiated linking This is applicable when User has shared an ABHA address during registration.\nWhenever a new health record is created for a patient, decide which care context this will be a part of.\nThe HRP must link the care context as soon as the health record is ready to be shared with the user\nLinking the care context requires a linking token. This is obtained and saved at the time of registration.\nif the HRP does not have a valid linking token, they need to generate linking token via demographic auth.\nWhenever a new care context is linked or an existing care context is updated with new health records, a notification is sent to all PHR applications that have subscribed to receive notifications for this ABHA address.\nTest Cases Function: Health Record Creation\nFunctionality Test Case Steps To Be Executed Mandatory Creation of Health Records (Health_RECORD_CREATION_101) The system should have a provision to create digital health records 1. Check if digital Health Records are being created in HIP systems (valid for HI types as applicable to the integrating entity). 2. Recommend to have the health record in FHIR format. Function: HIP Initiated Health Record Linking Using Mobile OTP\n(Testcase incorrect for this section)\nFunctionality Test Case Steps To Be Executed Mandatory Link record via mobile OTP (HIP_INTI_LINK_201) The system should have provision to link patient’s Health record with ABHA address 1. Enter patient’s ABHA address on the System. 2. OTP receive by the patient. Mandatory OTP validation (HIP_INTI_LINK_203) The user shares the OTP with the HIP for validation 1. Share Mobile OTP with HIP System. 2. Validate the OTP. 3. Upon successful validation of OTP linking token is generated. Mandatory Linking of Health Records (HIP_INTI_LINK_205) HIP system links the ABHA number / address with the patient records 1. Link Health Records. 2. Through PHR Application check if the linked records can be pulled Function: HIP Initiated Health Record Linking Using Aadhaar OTP\n(Testcase incorrect for this section)\nFunctionality Test Case Steps To Be Executed Mandatory Link record via aadhaar linked mobile OTP (HIP_INTI_LINK_301) The system should have provision to link patient’s Health record with ABHA address 1. Enter patient’s ABHA address on the System. 2. OTP receive by the patient. Mandatory OTP validation (HIP_INTI_LINK_303) The user shares the OTP with the HIP for validation 1. Share Mobile OTP with HIP System. 2. Validate the OTP. 3. Upon successful validation of OTP linking token is generated. Mandatory Linking of Health Records (HIP_INTI_LINK_305) HIP system links the ABHA number / address with the patient records 1. Link Health Records. 2. Through PHR Application check if the linked records can be pulled Function: HIP Initiated Health Record Linking Using Direct Auth\n(Testcase incorrect for this section)\nFunctionality Test Case Steps To Be Executed Mandatory for the Govt. Integartors Direct Auth mode for Linking of Health Records (HIP_INTI_LINK_401) The system should have provision to link patient’s Health record with ABHA address 1. Enter patient’s ABHA address on the System. 2. The user logs into their PHR Application receives the request for approval and approves it. 3. Search the request in the Notification tab. 4. Approve the request.(User may approve or reject the request. if the request is rejected process ends there). 5. Upon successful validation of OTP linking token is generated. Mandatory Linking of Health Records (HIP_INTI_LINK_404) HIP system links the ABHA Address with the patient records 1. Link Health Records. 2. Through PHR Application check if the linked records can be pulled. Function: HIP Initiated Health Record Linking Using Demographic Auth\n(Testcase needs language modification)\nFunctionality Test Case Steps To Be Executed Mandatory for the Govt. Integartors Link record via Demographic Auth (HIP_INTI_LINK_501) The system should have provision to link patient’s Health record with ABHA address. 1. For the verified ABHA Address of the patient in the HIP System. 2. The user provides their demographic details (name, gender, DOB, mobile number). 3. Enter user/patient’s demographic details in the HIP System Mandatory Validate the demographic details (HIP_INTI_LINK_503) The HIP validates demographic details of patient 1. Validate Demographic Details ( Provided by the user and fetch by the ABHA address). 2. Upon successful validation of OTP linking token is generated. Mandatory Linking of Health Records (HIP_INTI_LINK_505) HIP system links the ABHA Address with the patient records 1. Link Health Records. 2. Through PHR Application check if the linked records can be pulled API Versions V0.5 API Sequence Diagram for V0.5 API API Information Request Response for V0.5 V3 API Sequence Diagram for V3 API API Information Request Response for V3 Note: V0.5 APIs are currently in production. V3 APIs are currently only available in sandbox\nV0.5 API Sequence Diagram %%{init:{\"fontSize\": \"1.0rem\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram title HIP Initiated Linking activate HRP/HIP activate HIE-CM HRP/HIP-\u003e\u003eHIE-CM: POST V0.5/links/link/add-contexts HIE-CM--\u003e\u003eHRP/HIP: return deactivate HRP/HIP deactivate HIE-CM activate HRP/HIP activate HIE-CM HIE-CM-\u003e\u003eHRP/HIP: (callback_url)V0.5/links/link/on-add-contexts HRP/HIP--\u003e\u003eHIE-CM:return deactivate HRP/HIP deactivate HIE-CM V0.5 API Information Request Response 1. Care-Context Linking\nAPI to submit care-context to HIE-CM for HIP initiated linking. The API must accompany the “accessToken” (linking token) fetched in the users/auth process or via demographic auth\nBASE URLs: https://dev.abdm.gov.in/gateway\n2. Call Back API for add-contexts\nCallback API for HIP initiated patient linking /link/add-context. If the accessToken is valid for purpose of linking, and specified details provided, HIE-CM will send “acknoweldgement.status” as SUCCESS.\nBASE URLs: https://your-hrp-server.com\nV3 API Sequence Diagram %%{init:{\"fontSize\": \"1.0rem\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram title HIP Initiated Linking activate HRP/HIP activate HIE-CM HRP/HIP-\u003e\u003eHIE-CM : POST/hiecm/api/v3/link/carecontext HIE-CM--\u003e\u003eHRP/HIP: return deactivate HRP/HIP deactivate HIE-CM activate HRP/HIP activate HIE-CM HIE-CM-\u003e\u003eHRP/HIP:(callback_url)/v3/hip/link/on-carecontext HRP/HIP--\u003e\u003eHIE-CM :return deactivate HRP/HIP deactivate HIE-CM HIE-CM-\u003e\u003ePHR App:(callback_url)/v3/hiu/subscriptions/notify PHR App--\u003e\u003eHIE-CM :s V3 API Information Request Response -YAML Not yet released-\n","description":"","tags":null,"title":"HIP Initiated linking","uri":"/abdm-docs/3-milestone2/link-care-context/hip-initiated-linking/index.html"},{"content":"Scan Health Facility QR Applicable To HMIS / LMIS (PVT) Government Health App Scan Health Facility QR Mandatory Mandatory Functionality Overview Patients can scan a Health Facility QR code pasted at the facility registration counter on their PHR application.\nThe User/Patient can share their profile with the HMIS/LIMS software used by the Health Facility by scanning a facility specific QR Code. This enables the user/patients to instantly register themselves, share their ABHA address and optionally obtain a token number from the facility.\nSteps to scanning the QR Code:\nUser must have an PHR app and have a valid ABHA address Hospital must generate a Health Facility QR code and display it at the registration counter User can then scan the QR code from their phone camera or their PHR application If scanned from phone camera – The list of PHR apps is shown on the phone. The user can select any of the applications. If scanned from within a PHR app - The app will obtain user consent and then call the share-profile API on HIE-CM. The HIE-CM will verify if this is a registered healthcare provider and identify the HRP linked to this Health Facility in the ABDM registry. The Gateway will call the share-profile API on the callback URL registered by the HRP. The HRP software must create a screen to display all the scanned profiles for a (counter) code. The operator (at the counter) should be able to select a shared profile and perform a fast user registration. The HRP software must correctly handle this for both new and returning patients Use Case 1: Scanned from within a PHR app\n**Use Case 2: Scanned from phone camera **\nSteps to create a QR code for your Health Facility:\nOnly ABDM compliant HFR registered facility/clinic and a doctor registered in HPR will be allowed to generate QR code in ABDM production. The health facility can generate a printable QR code for its facility using the QR code generator built into the HFR application (is this deployed?) For testing on the sandbox, Use QR code generator, put the HIP ID you linked with your client ID in the URL. Try this out The content of the QR code is a URL in the following format:\nhttps://phrsbx.abdm.gov.in/share-profile?hip-id=IN3410000260\u0026counter-id=12345\nHealth Facility-ID: Must be a valid Health Facility Registry ID issued by HFR. For Sandbox, this must be a HIP ID that is linked with your client ID Counter-ID: Can be any facility-decided alphanumeric string. This field is passed back to the facility as part of the share-profile API call and can be used to identify the physical location where the QR code is present. Given that the patient profile will be shared among all the counters and dynamic logic would be used for mapping the QR code to the counter, the counter number should be optional in payload for both QR code generation and scanning. Other points: While scanning the QR code from an android device, the experience may differ based on android version, brand of the mobile and skin of the android OS. The experience may also differ based on the PHR application used to scan the QR code. Steps to open ABHA Application QR code scanner:\nGo to Sandbox ABHA Mobile Application \u003e My Profile \u003e Scan option on the top right Scan the QR code, the app should fetch details of QR code along with User profile details. Click on share which will make Health Facility call the expected API on Health Facility side. The successful message would be shown on application once the on-share callback is given. Sample User Experience Here’s how the user journey looks on the Health Facility’s side. These screen shots are from Bahmni. You can used the hip-id=Bahmni in the above URL to generate a QR code and try it out.\nTest Cases: Applicable To Test Summary Test Scenario Mandatory EMR/HMIS verifying ABHA (SHARE_PATIENT_PROFILE_701) Share Patient Profile when the User scans the QR code which is placed the facility premises 1. Log into PHR app. 2. User will scan the QR code which is placed the facility premises. 3. Post scanning, patient profile details are displayed including ABHA number, ABHA address, Name, Gender, DoB, Mobile No and Address. Below this consent language is displayed - “You consent to the above information to be shared with (Health facility Name). They can use this information for your registration and linking your health records and both Cancel/Share buttons are provided. 4. Check that after clicking on “Share” button, user profile is successfully shared with the HIP and if user click on “Cancel” button then user profile is not shared with the HIP. 5. User clicks on share and gets a token number. 6. User clicks on ok and gets token number with validity of 30 minutes. API Versions V3 API The V3 APIs provide a linking token at the time of share that must be saved by the HRP and used for HIP initiated linking\nSequence Diagram for V3 API API Information Request Response for V3 V1.0 API The V1 APIs require the HRP to obtain a linking token via demographic auth as an additional step post profile share\nSequence Diagram for V1 API API Information Request Response for V1 Note: V1.0 APIs are currently in production. V3 APIs are currently only available in sandbox\nSequence Diagram for V3 API %%{init:{\"fontSize\": \"1.0rem\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram title Scan Health Facility QR Code to verify ABHA Address actor User with PHR App User with PHR App-\u003e\u003eHIE-CM:User scans the Health Facility QR code HIE-CM-\u003e\u003eHIP/HRP:POST/v3/hip/patient/profile/share HIP/HRP-\u003e\u003eHIE-CM:POST/v3/hip/patient/profile/on-share API Information Request Response for V3 1. Profile Sharing\nBASE URLs: The callback URL registered by the HRP\n2. Acknowledgement for shared profile\nBASE URLs:\nSandbox Server URL: https://dev.abdm.gov.in/hiecm/api\nProduction Server URL: https://live.abdm.gov.in/hiecm/api\nSequence Diagram for V1 API %%{init:{\"fontSize\": \"1.0rem\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram title Scan Health Facility QR Code to verify ABHA Address using V1 API actor User with PHR App User with PHR App-\u003e\u003eHIE-CM:User scans the Health Facility QR code HIE-CM-\u003e\u003eHIP/HRP:POST /v1.0/patients/profile/share HIP/HRP--\u003e\u003eHIE-CM:POST /v1.0/patients/profile/on-share note over HIE-CM,HIP: Use Demographics API to generate link token API Information Request Response for V1 1. Profile Sharing\nBASE URLs: The callback URL registered by the HRP\n2. Acknowledgement for shared profile\nBASE URLs: https://dev.abdm.gov.in/gateway\n3. Link Token Generation\nFor generating the link token use demographics api.\nTry it out for yourself Step 1: Install ABHA Sandbox application \u0026 Try it out Step 2: Register a callback URL Step 3: Link a fake Health Facility ID to your client ID, refer here Step 4: Create QR code for your fake Health Facility ID Step 5: Scan QR code using ABHA sandbox Application Step 6: Get a share profile call from Sandbox on your callback URL Step 7: Respond with an on-share call using Postman Step 8: See the Token ID on your Sandbox ABHA application ","description":"","tags":null,"title":"Scan Health Facility QR","uri":"/abdm-docs/2-milestone1/verify-abha-address/health-facility-qr-scan/index.html"},{"content":"Registration via Aadhaar OTP Applicable To HMIS / LMIS (PVT) Government Health App Using Aadhar OTP Mandatory Mandatory Functionality Overview ABHA Number can be created by authenticating with Aadhaar. Those who have their Aadhaar number linked with their mobile number can use this method to generate their ABHA number. Consent must be explained \u0026 collected from the user prior to performing Aadhaar OTP authentication. Once the user is successfully authenticated, the system will generate 14 digit ABHA number.\nFollowing are the steps to create a ABHA Number via Aadhaar OTP authentication:\nThe User should input their Aadhaar number. The system must check if this is a valid Aadhaar number using the verhoeff algorithm. The last digit of Aadhaar is the checksum digit. The ABHA number APIs will make a request to UIDAI to send an OTP to the Aadhaar linked mobile number. Once the OTP is verified, the system returns the complete profile data along with 14-digit ABHA Number. The User is asked to input their mobile number. System checks whether the user’s mobile number is matching with Aadhaar-linked mobile number. If it matches, then it will automatically link with ABHA number. If the mobile number does not match with Aadhaar-linked mobile, an OTP is triggered to verify the submitted the mobile number. The Aadhaar number provided by the user must not be stored by the HMIS / LMIS system to ensure it is compliant with Aadhaar related regulations. Sample User experience ABHA OTP Test Cases S.No Functionality Test Case Steps To Be Executed 1.1 Mandatory Create ABHA Option (CRT_ABHA_101) The system must provide an option to create ABHA through Aadhaar OTP 1.2 Mandatory Consent collection (CRT_ABHA_102) The system must display the consent language/ disclaimer language and collect user’s consent as per the ABDM published consent. 1. Read consent language. 2. Agree to the consent language (through ‘I agree’ checkbox or any other form of signature) Optional Consent collection should be multilingual (CRT_ABHA_103) The system should be able to provide the consent in languages other than English also 1. Read consent language. 2. Agree to the consent language (through ‘I agree’ checkbox or any other form of signature) 1.3 Mandatory Aadhaar collection and Error Message (CRT_ABHA_104) System must allow the user to enter Aadhaar Number and the system will display an error message for invalid Aadhaar Number Enter Aadhaar number 1.4 Mandatory Aadhaar OTP Collection (CRT_ABHA_105) User receives Aadhaar OTP and System must allow the user to enter Aadhaar OTP 1. Receive OTP on mobile number registered with Aadhaar. 2. Enter Aadhaar OTP 1.5 Mandatory Resend OTP (CRT_ABHA_106) System may activate the Resend OTP button atleast 2 times after 60 seconds 1. Click on Resend OTP Button. 2. Receive OTP on mobile 1.6 Mandatory OTP based Aadhaar Authentication (CRT_ABHA_107) System must verify the OTP Click on verify button(For Resend and Send). It is recommended that verify button be auto enabled 1.7 Optional Communication Mobile Number (CRT_ABHA_108) 1. If communication mobile number is same as Aadhaar linked mobile number then it should directly go to ABHA creation screen. 2. Alternatively, Integrators may also prompt for OTP again from the user and then post verification of OTP user can go to ABHA creation screen. System will check entered mobile is same as Aadhaar linked mobile number. If returns true then user will directed to ABHA creation screen. 1.8 Mandatory Mobile Number Verification (CRT_ABHA_109) If communication mobile number is not same as Aadhaar linked mobile number then system must ask for the OTP to verify comuncation mobile number. System must verify the mobile number. 1. System must send OTP on mobile number. 2. User enters the OTP and clicks on verify. 3. In case of incorrect OTP Mandatoryfor Private /Government(Suggested for integrators program using demo auth). Suggested ABHA Address (CRT_ABHA_112) The system should allow the user to select the ABHA address giving atleast 3 available suggestions 1. Governemnt integrator may use the default ABHA address. 2. System should have a provision for private integrators to proceed with the suggested ABHA and to create a new ABHA address. 1.9 Mandatory Display of ABHA Number (CRT_ABHA_113) System must display the created ABHA Number 1. System shows the 14-digit ABHA number and ABHA address generated 1.10 Mandatory for Private. View and Download ABHA details (If integrators is generating ABHA card) (CRT_ABHA_114) System must have a provision to View / Download ABHA card 1. System should show the user their ABHA Card. 2. ABHA Card should be generated by API and should contain: a. ABHA Number (Mandatory). b. User Photo-Optional. c. ABHA QR code. d. date of birth and gender. e. ABHA Address 1.11 Mandatory \u0026 Optional Either of the test cases CRT_ABHA_114 or CRT_ABHA_115 is mandatory for Governement Optional for Private. View and Download ABHA details. (If integrators is not generating ABHA card) (CRT_ABHA_115) If Integrator is not generating ABHA card. 1. If Integrator is not generating ABHA card then They print the mentioned information on their own card. a. ABHA Number (Mandatory). b. ABHA Address API Information Request Response Utilities\nUse the Postman Collection to try out the APIs To encrypt the mobileNumber/AadharNumber/otp To convert an image into Base64 string To obtain Gateway Session Token API Versions V1\u0026V2 API Sequence Diagram for V1\u0026V2 API API Information Request Response for V1\u0026V2 V3 API Sequence Diagram for V3 API API Information Request Response for V3 Sequence Diagram for V1\u0026V2 API Same mobile Number as linked With Aadhaar Flow %%{init:{\"fontSize\": \"1.0rem\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram title ABHA Creation using Aadhar OTP actor User participant HIU/HIP/PHR Note left of ABHA: Share RSA Encrypted Aadhaar number HIU/HIP/PHR-\u003e\u003eABHA: (POST: /v2/registration/aadhaar/generateOtp) ABHA-\u003e\u003eUIDAI: Aadhaar number UIDAI-\u003e\u003eUIDAI:Verify Aadhaar number UIDAI-\u003e\u003eABHA: Response 200 ABHA-\u003e\u003eHIU/HIP/PHR: Response 200 (transaction ID, last 4 digit mobile number) UIDAI-\u003e\u003eUser: OTP Note right of HIU/HIP/PHR:Receive OTP Note left of ABHA: Share OTP, transaction ID HIU/HIP/PHR-\u003e\u003eABHA: (POST: /v2/registration/aadhaar/verifyOTP) ABHA-\u003e\u003eUIDAI: UIDAI-\u003e\u003eUIDAI:Verify OTP UIDAI-\u003e\u003eABHA: ABHA-\u003e\u003eHIU/HIP/PHR: Response 200 (user details,transaction ID) Note left of ABHA: Share mobile number, transaction ID HIU/HIP/PHR-\u003e\u003eABHA: (POST: /v2/registration/aadhaar/checkAndGenerateMobileOTP) ABHA-\u003e\u003eHIU/HIP/PHR: Response 200 (mobileLinked,transaction ID) Note over HIU/HIP/PHR,UIDAI: mobileLinked : true (mobile number linked with Aadhaar) Note left of ABHA: transaction ID HIU/HIP/PHR-\u003e\u003eABHA: (POST: /v2/registration/aadhaar/createHealthIdByAdhaar) Note right of HIU/HIP/PHR: ABHA number created ABHA-\u003e\u003eHIU/HIP/PHR: Response 200 (user account details) Mobile Number different than one linked With Aadhaar Flow %%{init:{\"fontSize\": \"1.0rem\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram title ABHA Creation using Aadhar OTP actor User participant HIU/HIP/PHR Note left of ABHA: Share RSA Encrypted Aadhaar number HIU/HIP/PHR-\u003e\u003eABHA: (POST: /v2/registration/aadhaar/generateOtp) ABHA-\u003e\u003eUIDAI: Aadhaar number UIDAI-\u003e\u003eUIDAI:Verify Aadhaar number UIDAI-\u003e\u003eABHA: Response 200 ABHA-\u003e\u003eHIU/HIP/PHR: Response 200 (transaction ID, last 4 digit mobile number) UIDAI-\u003e\u003eUser: OTP Note right of HIU/HIP/PHR:Receive OTP Note left of ABHA: Share OTP, transaction ID HIU/HIP/PHR-\u003e\u003eABHA: (POST: /v2/registration/aadhaar/verifyOTP) ABHA-\u003e\u003eUIDAI: UIDAI-\u003e\u003eUIDAI:Verify OTP UIDAI-\u003e\u003eABHA: ABHA-\u003e\u003eHIU/HIP/PHR: Response 200 (user details,transaction ID) Note left of ABHA: Share mobile number, transaction ID HIU/HIP/PHR-\u003e\u003eABHA: (POST: /v2/registration/aadhaar/checkAndGenerateMobileOTP) ABHA-\u003e\u003eHIU/HIP/PHR: Response 200 (mobileLinked,transaction ID) Note over HIU/HIP/PHR,UIDAI: mobileLinked : false (mobile number not linked with Aadhaar) Note right of HIU/HIP/PHR: sends OTP ABHA-\u003e\u003eUser: OTP Note left of ABHA: Share OTP, transaction ID HIU/HIP/PHR-\u003e\u003eABHA: (POST: /v2/registration/aadhaar/verifyMobileOTP) ABHA-\u003e\u003eHIU/HIP/PHR: Response 200 (transaction ID) Note left of ABHA: Share transaction ID HIU/HIP/PHR-\u003e\u003eABHA: (POST: /v2/registration/aadhaar/createHealthIdByAdhaar) ABHA-\u003e\u003eHIU/HIP/PHR: ABHA number created API Information Request Response for V1\u0026V2 1. Generate OTP On Aadhaar Registered Mobile\nBASE URL: https://healthidsbx.abdm.gov.in\nBasePath : api\n2. Verify OTP\nBASE URL: https://healthidsbx.abdm.gov.in\nBasePath : api\n3. Check Aadhaar Linked Mobile\nBASE URL: https://healthidsbx.abdm.gov.in\nBasePath : api\n4. Verify OTP\nBASE URL: https://healthidsbx.abdm.gov.in\nBasePath : api\nNote: This step is required only if the mobile number is different from the Aadhaar linked mobile number\n5. Create ABHA Number\nBASE URL: https://healthidsbx.abdm.gov.in\nBasePath : api\nSequence Diagram for V3 API The sequence of APIs used via this method are shown in the diagram below:\n%%{init:{\"fontSize\": \"1.0rem\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram title ABHA Creation using Aadhar OTP actor User participant HIU/HIP/PHR Note left of ABHA: Share encrypted Aadhaar number HIU/HIP/PHR-\u003e\u003eABHA: (POST: /v3/enrollment/request/otp) ABHA-\u003e\u003eUIDAI: Aadhaar number UIDAI-\u003e\u003eUIDAI:Verify Aadhaar number UIDAI-\u003e\u003eABHA: Response 200 ABHA-\u003e\u003eHIU/HIP/PHR: Response 200 (transaction ID) UIDAI-\u003e\u003eUser:Receive OTP Note right of HIU/HIP/PHR: Forward OTP \u0026 transaction ID to verify HIU/HIP/PHR-\u003e\u003eABHA: (POST: /v3/enrollment/enrol/byAadhaar) ABHA-\u003e\u003eUIDAI: Forward OTP UIDAI-\u003e\u003eUIDAI: Verify OTP UIDAI-\u003e\u003eABHA: Share Aadhaar e-KYC details ABHA-\u003e\u003eABHA: ABHA Creation ABHA-\u003e\u003eHIU/HIP/PHR: ABHA Number \u0026 Profile Note over HIU/HIP/PHR,UIDAI: Mobile verification and Mobile Update Note left of ABHA: Share encrypted mobile number,transaction ID HIU/HIP/PHR-\u003e\u003eABHA: (POST: /v3/enrollment/request/otp) ABHA-\u003e\u003eHIU/HIP/PHR: Response 200 ABHA-\u003e\u003eUser:Receive OTP Note right of HIU/HIP/PHR: Forward Encrypted OTP \u0026 transaction ID to verify HIU/HIP/PHR-\u003e\u003eABHA: (POST: /v3/enrollment/auth/byAbdm) ABHA-\u003e\u003eABHA: OTP Verified \u0026 Mobile Number Linked ABHA-\u003e\u003eHIU/HIP/PHR: Response 200 API Information Request Response for V3 1. Generate Aadhaar OTP on registrered mobile number\nApi accepts Aadhaar Number and then sends OTP to Aadhaar linked mobile number\nBASE URL: https://abhasbx.abdm.gov.in/abha/api\nRefer to example “Request OTP Aadhaar based enrollment”\nNote System may activate the Resend OTP button atleast 2 times after 60 seconds. The above api is also used for Resend OTP\n2. Create ABHA Number using pre-verified Aadhaar \u0026 Mobile.\nAPI creates ABHA Number using Aadhaar \u0026 Mobile which are already Registered.\nBASE URL: https://abhasbx.abdm.gov.in/abha/api\nVerify \u0026 Update Mobile This step is required only if the mobile number is different from the Aadhaar linked mobile number\n3. Generate OTP on mobile number\nApi accepts Encrypted Mobile Number and then Generates OTP to that Mobile Number\nBASE URL: https://abhasbx.abdm.gov.in/abha/api\nRefer to example “Request OTP for mobile verification”\n4. Link mobile number\nApi accepts Encrypted OTP and then link that Mobile Number\nBASE URL: https://abhasbx.abdm.gov.in/abha/api\nRefer to example “Request Verify Mobile”\n","description":"","tags":null,"title":"Using Aadhaar OTP","uri":"/abdm-docs/2-milestone1/abha-number/aadhar-otp/index.html"},{"content":" This section provides a conceptual overview of the ABDM federated health record framework. Read this to understand how various building blocks of ABDM works and where your application fits in this ecosystem.\nElectronic Health Records Health Facility Registry (HFR) for facility identity What is a Health Information Provider (HIP)? What is a Health repository Provider (HRP)? Identifying patients via ABHA address Use ABHA number for patients without phones Health Information Exchange \u0026 Consent Manager Capturing ABHA address during patient registration Linking of records by HRP / HIP Discovery of records by patients Federated Health Records Architecture PHR applications \u0026 Health Lockers What are Health Information Users (HIUs) Sharing Health records with consent HIP / HIU Guidelines HDCM Policy ABDM uses a federated health record (FHR) framework that allows users (patients) to collect their health records across various healthcare providers, view their records from any Personal Health Record (PHR) application and share their records with their consent\nThe image below shows the various entities/roles involved in the FHR framework\nElectronic Health Records Electronic Health records are digital records that are created by Health service providers as part of their interactions with patients. Health Providers use specialized software called electroic medical record (EMR), health information management systems (HIMS) or Lab information management systems (LIMS) to create these health records.\nHealth records include Diagnostic reports, discharge summaries, prescriptions, OP consultation notes, etc. The ABDM FHR framework deals with the format of health records (to enable interoperability), the storage of health records (to ensure they are available) and the sharing of health records with consent. Every Health record contains information about who is the patient, which health professional provided the treatment and at which facility. ABDM requires each of these entities to obtain a digital identifier and use that identifer when creating / linking health records under ABDM.\nHealth Facility Registry (HFR) for facility identity Health Facilities are issued a HFR ID when their register their facility with ABDM. They can register via https://facility.abdm.gov.in. Digital Solution Companies can also help their customers register with HFR within their software by integrating with the HFR APIs.\nWhat is a Health Information Provider (HIP)? Any entity that agrees to share digital health records with their users using the ABDM APIs is called an HIP (Health Information Provider). HIPs can be hospitals, labs, health care centers, government health programs, teleconsultation players, clinics or pharmacies - basically any entity which creates medical data pertaining to a patient. The HFR ID is used to identify which facility has agreed to become a HIP and is sharing health information. (HFR ID == HIP ID)\nHIPs are required to maintain a digital copy of both the inpatient and outpatient records for each person in their care. They also need to adhere to the HIP HIU Guidelines\nHIPs are eligible for financial incentives under the ABDM Digital Health Incentive Scheme\nWhat is a Health Repository Provider (HRP)? Health repository providers are digital solution companies who offer ABDM compliant software to health facilities like hospitals, diagnostic centers etc. An instance of an ABDM certified software is a HRP. The HRP enables healthcare providers to become HIPs or HIUs and meet their obligations of sharing and securely maintaining health records of patients digitally. HRPs offer long term storage of health records on behalf of a HIP. For example, a hosted lab information management system provider (LIMS) may update their software to become a ABDM compatible Health Repository Provider. Any lab using this hosted LIMS software can rapidly become a HIP by adopting the software.\nThe ABDM sandbox hosts a reference HRP – You can play with it at https://emrsbx.abdm.gov.in\nIdentifying patients via ABHA address In order to manage their personal health records, users (patients) must first create an account on a HIE-CM – called their Ayushman Bharath Health Account (ABHA) address. This looks like sandeep321@abdm. The @abdm tells us which HIE-CM is responsibile for this address.\nThe term ABHA address is also reffered to as PHR address across the documentation\nHospitals \u0026 Labs are expected to link records with their patients ABHA Address. Creating an ABHA Address is super simple – You can start with just Name, Year of birth, Gender along with a Mobile number. ABHA address can be linked to a strongly validated \u0026 unique ABHA Number\nABDM is designed to work for people with smartphones, features phones and even those without phones. Users with smartphones can be encourgaed to get their ABHA address via a PHR app. They can create a easy to remember ABHA address that is alphanumeric like sandeep321@abdm. Users with only feature phones or without phones will require assitance in creating an ABHA address. It is recommended that they create an ABHA number (preferably with Aadhaar). Every ABHA number also automatically acts as a ABHA address on the NHA HIE-CM and looks like \u003c14digitabha\u003e@abdm\nUsers can create an ABHA address by downloading a PHR mobile application or on a portal provided by the HIE-CM. Use phr.abdm.gov.in to create a new ABHA address\nUsers can create an ABHA addresses in one of two ways:\nUsing self declared information - This requires Name, Year of Birth gender along with a mobile number or email Using an ABHA Number - This requires users to first create an ABHA number with strong KYC Users can start with a self declared ABHA address and later link it to an ABHA number\nNote : While users are allowed to create more than one ABHA address, ABDM encourages every user to have only ONE ABHA address. The process of obtaining an ABHA address is designed to ensure that users don’t accidentally create multiple addresses\nTry it out - Create an ABHA address that you can use on the ABDM sandbox at phrsbx.abdm.gov.in. This will create an ABHA address on the @sbx HIE-CM hosted within the sandbox\nUse ABHA number for patients without phones ABHA number is a 14 digit number that is unique (only one per person) issued only after a strong KYC. Every ABHA number is automatically available as an ABHA address on the NHA HIE-CM like \u003c14digitabhano\u003e@abdm. ABHA is a core building block of the ABDM ecosystem and integrates with several other systems to provide online KYC including Aadhaar, Driving licence and PAN\nYou can obtain an ABHA number by signing up at https://abha.abdm.gov.in\nABHA numbers are extremely important for helping those who use feature phones or do not use a phone to manage their personal health records. ABHA numbers are issued in assisted mode extensively by all Government health programs. Government programs are encouraged to link any health records they create to \u003c14digitabhano\u003e@abdm.\nYou can play around with the sandbox instance of the ABHA building block at https://abhasbx.abdm.gov.in\nHealth Information Exchange \u0026 Consent Manager (HIE-CM) This is the key ABDM building block that manages ABHA addresses, maintains links to health data for each ABHA address and manages consents provided by the user for sharing of their health data. It also supports exchange of interoperable health data between HIPs and HIUs.\nThe ABDM architecture is designed to support multiple HIE-CMs to operate in the network. Each HIE-CM is referred to by a domain. NHA operates 2 HIE-CMs currently. A Sandbox HIE-CM with the domain @sbx and a production HIE-CM with the domain @abdm.\nThe diagram below shows how the HIE-CM orchestrates the linking of health records in ABDM.\nCapturing ABHA address during patient registration Health Facilities are required to modify their processes during patient registration to include the capture of ABHA address from patients. This is the primary area where a change management is required. All the other ABDM FHR related processes are in the background and do not require significant operational changes by the health facility.\nABHA address can be captured by the facility by any of the following methods\nScanning Health Facility QR code - Every health facility can create a QR code that can be displayed at their registration counter. Patients can scan this QR code from any PHR application. This “scan and share” action ensures that patient demograhics (including the ABHA address) is instantly shared from the PHR app to the ABDM compliant EMR / HIMS software being used by the health facility\nScanning the QR on the users ABHA card - Users without phones / feature phones can be issued a ABHA no and a printed ABHA card. This contains a QR code that can be rapidly scanned by the health facility using a 2D barcode scanner. It provides all the demographic information about the patient and also the ABHA address of the user\nVerbally shared ABHA address - Users may share their ABHA address verbally during registration. Health facilities can verify the ABHA address and obtain the demographic details associated with the address by initiating an authentication request. This will result in an OTP being sent to the user which they can then share with the health facility\nLinking of records by Health facility If the patient has shared their ABHA address with the health facility, then the facility must link any new health record it creates to the ABHA address. Linking is done by adding a “Care Context” to the ABHA address. The care context only contains - a reference id to the actual health record and a display text that can be shown to the user. The display text should not contain any health information either. The FHR architecture is designed to ensure that the HIE-CM is “data blind”, ie does not have access to any health data of the patient.\nWhenever a new care context is linked to a ABHA address, the HIE-CM notifies all PHR apps being used by the patient that a new care context has been linked (or updated). The PHR app will request for a copy of the health record from the HRP and display it to the user.\nDiscovery \u0026 linking of records by patients Several patients may not have a ABHA address or share their ABHA address with the health facility at the time of registration. In such cases, the health facility will send an SMS the patient (via HIE-CM) that a new health record is available and can be accessed via any PHR app.\nAll PHR apps provide a “discovery” feature, where the user can search for a health facility and request for their health records. Users provide their name, year of birth, gender and mobile number as the parameters for this search. If there are records available at the health facility for this patient, the HRP will return a set of care contexts. All reocrds for the patient including historical records are expected to be provided via this method. The user can then link these discovered care contexts with their ABHA address using their PHR app.\nFederated Health Records Architecture ABDM is implemented as a Federated Architecture, where data is kept by the entity that generates the health data (HRP). The ABHA address only holds a set of care contexts which points to the health data across multiple HRPs. The HIE-CM is designed to be data blind, ie it does not know any details of the health records that are linked with the ABHA address.\nThe HIE-CM is also responsible for storing all consents provided by the user. ABDM uses a structured digital consent artifact that is based on the MietY consent framework. Each consent has a clear purpose of use, what type of records and from what period are being shared and how long the reciving entity (HIU) can keep / access these records. ABDM puts the user in control allowing them to easily grant, deny and revoke consents from their PHR app.\nThe HIE also allows health data to flow from HRPs to HIUs (with appropriate Consents). The health data is encrypted by the HRP so that only the requesting HIU entity can decrypt it. Also the design ensures the flow of data does not pass through the HIE-CM.\nUser generated health records like smart watches, home health monitors or even photos of health records can be linked to the ABHA address by PHR apps.\nThe FHR architecture is aligned with the upcoming Data Protection Bill. Any health facility using a ABDM compliant software would be able compliant to the provisions of the Data protection bill.\nSummary of the FHR Architecture\nNo central data repository Your ABHA Address only holds links to your health records Your Health record is held by Health Facility that generated the record You can get a copy of the record and save it long term using a PHR application You are in control of your health data and can decide what and whom you share it Even after your share, you can change your mind and revoke your consent at any time. You can also upload any health records by scanning them or even add data from your wearable devices to your health record via PHR apps Only verified health facilities that are part of the Health Facility Registry can link health records with your ABHA address PHR applications \u0026 Health Lockers Personal Health Record Applications are software service providers who offer web / mobile applications to individuals. ABDM is designed to have multiple PHR offerings as choice to user. Every PHR apps can\nHelp users create an ABHA address Discover and link health records Help user grant / revoke consents Allow users to view their records Offer long term storage of records, Support uploading of users health records Share records on the ABDM network. NHA has created the ABHA PHR application as a reference application. The Aarogasetu App has also been upgraded to become an ABDM compliant PHR App.\nABDM also rolled out a specification for a “Health Locker”. Lockers are entities that offer long term storage of health records to users. This functionality has been included in the requirements of a PHR application\nYou can play around with the sandbox instance of the ABHA PHR app at https://phrsbx.abdm.gov.in\nWhat is an HIU? An HIU (Health Information User) is an entity that wants access to the digital health information linked to a ABHA address. An HIU can be a hospital, clinic, PHR app, healthcare technology company, organizations working on health analytics, insurers, medical researchers, government entities etc. HIUs first need to collect a consent from the user and then can request for health records. HIUs get a copy of the patients records and use them only for the purpose specified in the consent and must delete them if the consent expires or is revoked by the user.\nSharing Health Records With Consent When any HIU wants to access records linked with a PHR address, it initiates a consent request with the HIE-CM The consent request consists of the purpose for which health records are being sought, why type of records are being sought, from what time period and how long will the HIU like to retain these records HIE-CM forwards the request to the user who can view the request on their PHR app and decide what he actually wants to share when he grants the consent User’s can also decide to revoke the consent anytime after it is granted If the user grants the consent, the HIE-CM shares a signed consent artificat with the the requesting HIU The HIU can now request for data for a ABHA address along with the signed consent artificat The HIE-CM forwards the request to all HRPs that are holding the linked data The HRPs verify the consent and push the data to the HIU Data has to be in the specified FHIR format to achieve interoperability Data is encrypted using a method that ensures only the requesting HIU can decrypt the data Health Data Management Policy \u0026 HIP / HIU Guidelines Any entity participating in ABDM will need to adhere to the Health Data Management Policy and the HIP/HIU Guidelines\nThis policy is a guidance document to set out the minimum standard for data privacy protection that should be followed by all the participants/stakeholders of the ABDM ecosystem. It is a first step in realizing ABDM’s guiding principle of “Security \u0026 Privacy by Design” for the protection of individual’s personal digital health data.\nThe Guidelines cover the responsibilities of Health Information Providers, Health Repository Providers, Health Information Users and Personal Health Records Apps\nDigital Solution Companies must familizarize themselves with the Policy \u0026 Guidelines and ensure they support health facilities, consumers and health data users to comply with the same.\nThe ABDM Gateway Gateway is the hub that mediates and connects HIE-CMs, Health Repository Providers and HIUs in the network. Its primary job is to allow for discovery, routing in the network. The gateway does the following:\nConnects and validates the HIE-CMs and health repositories (servicing HIUs and HIPs) to the network. Enables routing of information. Authenticates connected systems within the PHR network (provides a signed authentication token for further communication). The entire PHR framework including the gateway communicates via asynchronous APIs over HTTPs channel. The following figure provides a view of how the Gateway fits in with other components Experience PHR in action using the ABDM sandbox ABDM provides a sandbox environment with core essential services that enable integrators who want to become HIPs/HIUs/HRPs or PHR apps build and test their integration.\nTry out the following\nCreate a PHR address on the sandbox from https://phrsbx.abdm.gov.in/ Use EMRSBX to register your PHR address and link it with a new health record Download and login to the Sandbox PHR app with your new PHR address Download ABHA App Provide consent and view the health record you linked via EMRSBX Try adding your COVID vaccination record from CoWIN to your PHR address Other relevant documents National Digital Health Blueprint National Health Stack Electronic Consent Framework ","description":"","tags":null,"title":"The PHR Framework","uri":"/abdm-docs/1-basics/the_phr_framework/index.html"},{"content":"Creation of ABHA Number ABHA number is a 14 digit number that is unique (only one per person) issued only after a strong KYC. ABHA number is a core building block of the ABDM ecosystem that is designed to ensure that people can have a unique ID (identifier) for healthcare.\nABHA numbers are extremely important for helping those who use feature phones or do not use a phone to manage their personal health records. ABHA numbers are issued in assisted mode extensively by all Government health programs.\nHealthcare providers are encouraged to issue ABHA numbers to patients who dont carry phones and link records to the default ABHA address (\u003c14DigitABHAno\u003e@abdm)\nThis section covers:\nUsing Aadhaar OTP Using Aadhaar biometric Using Aadhaar demographic(offline mode) Using driving license Download ABHA Card Default ABHA Address Profile Update ","description":"","tags":null,"title":"Creation of ABHA Number","uri":"/abdm-docs/2-milestone1/abha-number/index.html"},{"content":"Getting Started with ABDM This section covers Understanding the ABDM Personal Health Records (PHR) Framework Learn the ABDM terminology - HIP / HIU / HPR / PHR / Locker Apply for access to the Sandbox \u0026 verify your credentials Understand what integration is required to make your application ABDM compliant Setup POSTMAN and get started using ABDM APIs Setup a Sandbox ABHA Address for use during testing Setup an end point URL for your health repository or consumer health application Link health facilities with your health repository Stakeholders in ABDM Patients ADBM will enable patients to be able to register rapidy during their health visit, collect their health records across any health facility, book appointments with doctors and share their health information with consent.\nPatients will need to get an ABHA address as their identifier in ABDM.\nHealth professionals Health Professionals (Doctors, Nurses, Lab Technincans, .. ) need to register themselves in the Health Professional Registry (HPR) and get themsevles a HPR ID to participate in ABDM. This will also enable them to be discovered as a verfied professional in the ecosystem\nHealth Facilities Health Facilities (Hospitals, Nursing Homes, Clinics, Labs, Pharmacies .. ) will need to register themselves in the Health Facility Registry (HFR) and get themselves a HFR ID. They will also need to use a ABDM compliant software for generating ABHA linked health records.\nDigital Solution Companies DSCs are organizations that provide software to patients or health facilities. DSCs are expected to integrate their software solution with the ABDM building blocks and get their solution certified to participate in the ecosystem.\nDSCs are the primary users of the ABDM sandbox. They sign up to the sandbox and validate their application before seeking certification.\n","description":"","tags":null,"title":"Getting Started","uri":"/abdm-docs/1-basics/index.html"},{"content":"Diagnostic Reports as FHIR DiagnosticReport You may send more structured information for a Diagnostic Report (advised), by using the FHIR DiagnosticReport resource. Typically the most important elements of DiagnosticReports are:\ncode: The examples given below show only textual element ’text’, but you may use ‘Coding’ along with ‘display’ element expressing a human readable name. issued: Date and time when the report was issued, usually after the report was reviewed and verified. It’s the date on which the pathologist or radiologists signs the document. results: When you want to express the result observation in greater detail. You may also use the ‘conclusion’ parameter. Note in the example below how the ‘results’ are references to ‘observations’ within the same bundle. conclusion: Clinical conclusion (interpretation) of test results. presentedForm: An [attachment](https://www.hl7.org/fhir/datatypes.html#Attachment, which contains the entire project. It can be a pdf, image, or even a dicom file. media: When you want to send over images associated with this report, such as imaging test results and radiological reports. imagingStudy: Reference to full details of imaging associated with the diagnostic report. Used for advanced radiology reporting with details of study, series and instances. In the reference stack, we do not support ImagingStudy yet; we use the ‘media’ tag in association with the specific ‘category’ to interpret as radiology results. category: A service category that classifies the discipline, department or diagnostic service that created the report (for example, cardiology, biochemistry, hematology, radiology). Reference stack utilizes this element to interpret radiology results, although you may very well adopt a strategy by detecting the ‘coding’ tag assigned to the ‘code’. This is probably quite impossible unless the affinity domain agrees on the clinical terminologies and coding standards to adopt. We think category is a decent start when such standardization is not possible to begin with. Important: You must send either of the ‘results’ tag, or ‘presentedForm’ or the ‘media’ tag in the DiagnosticReport.\nFHIR Bundle (Sample) View Prescription Document from here View Discharge summary Document from here View Immunization Document from here View Health Record Document from here View Wellness Record Document from here View Diagnostic Report Document from here View Consultation Document from here Simple pathology report In the following code snippet, we’re showing you a basic pathological test example. We will then get on with explaining other types of tests. The following snippet describes how you can convey the Hemoglobin level of an individual.\n{ \"resourceType\": \"Bundle\", \"id\": \"ff626758-73cc-4821-978a-2528bb65b918\", \"meta\": { \"lastUpdated\": \"2019-01-03T15:32:26.605+05:30\" }, \"timestamp\": \"2019-01-03T15:32:26.605+05:30\", \"identifier\": { \"system\": \"https://www.your-hospital.in/bundle\", \"value\": \"ff626758-73cc-4821-978a-2528bb65b918\" }, \"type\": \"document\", \"entry\": [ { \"fullUrl\": \"Composition/1007DR1\", \"resource\": { \"resourceType\": \"Composition\", \"id\": \"1007DR1\", \"date\": \"2019-01-03T15:32:26.605+05:30\", \"text\": { \"status\": \"generated\", \"div\": \"\u003cdiv xmlns=\"http://www.w3.org/1999/xhtml\"\u003eDiagnostic Report for Navjot Singh (RVH1002) \u003c/div\u003e\" }, \"identifier\": { \"system\": \"https://www.max.in/composition\", \"value\": \"1007DR1\" }, \"status\": \"final\", \"type\": { \"coding\": [ { \"system\": \"https://ndhm.gov.in/sct\", \"code\": \"721981007\", \"display\": \"Diagnostic Report\" } ], \"text\": \"Prescription record\" }, \"encounter\": { \"reference\": \"Encounter/7fce6ec8-5013-4a27-b0a6-c43232608cda\", \"display\": \"OPD Visit - patient walked in\" }, \"subject\": { \"reference\": \"Patient/RVH1002\" }, \"author\": [ { \"reference\": \"Organization/MaxSaket01\" }, { \"reference\": \"Practitioner/DHID1234\" } ], \"title\": \"Doc: Surgical Pathology Report\", \"section\": [ { \"title\": \"Section - Diagnostic report: Surgical Pathology\", \"code\": { \"coding\": [ { \"system\": \"https://ndhm.gov.in/sct\", \"code\": \"721981007\", \"display\": \"Diagnosti Report: Surgical Pathology\" } ] }, \"entry\": [ { \"reference\": \"DiagnosticReport/a45840dc-cf6b-4fcc-acec-d54a3bea40ff\" } ] } ] } }, { \"fullUrl\": \"DiagnosticReport/a45840dc-cf6b-4fcc-acec-d54a3bea40ff\", \"resource\": { \"resourceType\": \"DiagnosticReport\", \"id\": \"a45840dc-cf6b-4fcc-acec-d54a3bea40ff\", \"status\": \"final\", \"code\": { \"text\": \"Surgical Pathology Report\" }, \"subject\": { \"display\": \"Navjot Singh\", \"reference\": \"Patient/RVH1002\" }, \"performer\": [ { \"reference\": \"Organization/MaxSaket01\" } ], \"resultsInterpreter\": [ { \"reference\": \"Practitioner/DHID1234\" } ], \"result\": [ { \"reference\": \"Observation/fa357bd6-7107-4938-91fa-3da1815dea93\" } ], \"effectiveDateTime\": \"2019-01-03T17:32:26.605+05:30\", \"issued\": \"2019-01-03T18:32:26.605+05:30\", \"conclusion\": \"Refer to Doctor. To be correlated with further study.\" } }, { \"fullUrl\": \"Observation/fa357bd6-7107-4938-91fa-3da1815dea93\", \"resource\": { \"resourceType\": \"Observation\", \"id\": \"fa357bd6-7107-4938-91fa-3da1815dea93\", \"status\": \"final\", \"code\": { \"text\": \"Hemoglobin\" }, \"valueString\": \"14 g/dL\" } } ] } Explanation:\nResults : The DiagnosticReport resource has a ‘results’ tag that refers to another resource within the ‘bundle’. Also note the usage of reference (Observation/ id ), specifically the id to resolve the other resource’s reference in the same bundle. All such resource references must be resolvable within the same bundle and usage of Id is advised. FHIR references can even be an Http URL : Do not send over such URL reference. Conclusion : This tag is optional. Typically a lab would send over the ‘impression’ tag and not the conclusive result. Simple pathology report (Attachment) Here’s what you do if you want to send over a PDF report of a blood test:\n{ \"resourceType\": \"Bundle\", \"id\": \"9473cf69-9fb8-4551-908f-94d0e081b9cc\", \"type\": \"document\", \"entry\": [ { \"fullUrl\": \"Composition/1007DR1\", \"resource\": { \"resourceType\": \"Composition\", \"id\": \"1007DR1\", \"date\": \"2019-01-03T15:32:26.605+05:30\", \"text\": { \"status\": \"generated\", \"div\": \"\u003cdiv xmlns=\"http://www.w3.org/1999/xhtml\"\u003eDiagnostic Report for Navjot Singh (RVH1002) \u003c/div\u003e\" }, \"identifier\": { \"system\": \"https://www.max.in/composition\", \"value\": \"1007DR1\" }, \"status\": \"final\", \"type\": { \"coding\": [ { \"system\": \"https://ndhm.gov.in/sct\", \"code\": \"721981007\", \"display\": \"Diagnostic Report\" } ], \"text\": \"Prescription record\" }, \"encounter\": { \"reference\": \"Encounter/7fce6ec8-5013-4a27-b0a6-c43232608cda\", \"display\": \"OPD Visit - patient walked in\" }, \"subject\": { \"reference\": \"Patient/RVH1002\" }, \"author\": [ { \"reference\": \"Organization/MaxSaket01\" }, { \"reference\": \"Practitioner/DHID1234\" } ], \"title\": \"Doc: Surgical Pathology Report\", \"section\": [ { \"title\": \"Diagnostic report: CBC\", \"code\": { \"coding\": [ { \"system\": \"https://ndhm.gov.in/sct\", \"code\": \"721981007\", \"display\": \"Diagnosti Report: Complete Blood Count\" } ] }, \"entry\": [ { \"reference\": \"DiagnosticReport/a45840dc-cf6b-4fcc-acec-d54a3bea40ff\" } ] } ] } }, { \"fullUrl\": \"DiagnosticReport/a45840dc-cf6b-4fcc-acec-d54a3bea40ff\", \"resource\": { \"resourceType\": \"DiagnosticReport\", \"id\": \"a45840dc-cf6b-4fcc-acec-d54a3bea40ff\", \"status\": \"final\", \"code\": { \"text\": \"Complete Blood Count Panel\" }, \"effectiveDateTime\": \"2019-11-03T00:00:00+00:00\", \"issued\": \"2019-11-05T00:00:00+00:00\", \"presentedForm\": [ { \"contentType\": \"application/pdf\", \"data\": \"base64 encoded inline data\", \"title\": \"Complete Blood Count (CBC)\" } ] } } ] } Explanation:\npresentedForm: You can transfer any type of attachment using this tag. The ‘contentType’ tag describes the mime type of the content. Display of the mimetype depends on the HIU’s viewer device. However, try and stick to the following:\napplication/pdf image/jpeg image/png application/msword application/rtf audio/mpeg data: This is the base64 encoded inline data of the attachment. In many ways, it’s like the Media resource discussed earlier.\nNote : For simplicity sake, the example above does not illustrate the full document details like the Practitioner, Patient, Organization etc. They must be included in the document and should be resolvable by the references\n","description":"","tags":null,"title":"Diagnostic Reports","uri":"/abdm-docs/3-milestone2/packaging-health-data/diagnostic-reports/index.html"},{"content":"Login to PHR App Functionality Overview PHR App should allow the user to log in to the PHR application with any of the Auth methods.\nIt can also save the refresh token and extend the user session to reduce the number of times the user has to keep logging in.\nA single PHR app can manage multiple user profiles by offering a sign in-sign out\nMore information: Every PHR Applicationi user needs to have an ABHA Address (also reffered to as PHR Address). The address looks like “username@hie-cm”. Currently ABDM manages 2 HIE-CMs. The Sandbox HIE-CM @sbx and the production HIE-CM @abdm. PHR Apps use APIs provided by the HIE-CM to create a new ABHA address for users. The user chosen ABHA address has to be alphanumeric. The only numeric address allowed is 14 digits and that must be a valid ABHA number.\nTo Use Login APIs (PHR id is required under request body), the user need to setup his/her own PHR id Test Cases S.No Functionality Test Case Steps To Be Executed 1. Mandatory Login with mobile number flow Enter mobile number linked with ABHA address 2. Mandatory Login with mobile number flow Validate mobile number via mobile OTP Check if an individual receives mobile OTP and able to login with mobile number 3. Mandatory Login with mobile number flow Resend Mobile OTP after 60 seconds post clicking on “Resend OTP”. 4. Mandatory Login with mobile number flow Display ABHA addresses linked with entered validated mobile number. So that an individul can select an ABHA address in which one wishes to login. 5. Mandatory Login with e-mail ID flow Enter e-mail ID linked with ABHA address 6. Mandatory Login with e-mail ID flow Validate e-mail ID via e-mail OTP Check if an individual receive email OTP and login with e-mail OTP 7. Mandatory Login with e-mail ID flow Resend e-mail OTP after 60 seconds post clicking on “Resend OTP Check if an individual receive email OTP after 60 seconds and login with e-mail OTP 8. Mandatory Login with e-mail ID flow Display ABHA addresses linked with entered validated e-mail ID. So that an individul can select an ABHA address in which one wishes to login. Check if all ABHA addresses linked with entered email ID are displayed and an individual is able to login in selected ABHA address 9. Mandatory Login with easy to remember ABHA address (name@abdm) flow Enter easy to remember ABHA address - name@abdm 10. Mandatory Login with easy to remember ABHA address (name@abdm) flow Validate ABHA address via password / mobile OTP / e-mail OTP / aadhar OTP as per auth mode Check if an individual is able to login with easy to remember ABHA address via password 11. Mandatory Login with easy to remember ABHA address (name@abdm) flow Validate ABHA address via password / mobile OTP / e-mail OTP / aadhar OTP as per auth mode Check if an individual is able to login with easy to remember ABHA address via mobile OTP / e-mail OTP / aadhar OTP as per auth mode 12. Mandatory Login with easy to remember ABHA address (name@abdm) flow Resend aadhar OTP / mobile OTP / e-mail OTP after clicking on “Resend OTP Check if an individual receive aadhar OTP / mobile OTP/e-mail OTP after 60 seconds and an individual is able to login post validation of ABHA address 13. Mandatory Login with default ABHA address (14-digit@abdm) flow Enter default ABHA address such as 14-digit@abdm 14. Mandatory Login with default ABHA address (14-digit@abdm) flow Validate ABHA address via mobile OTP / aadhar OTP Check if aadhar OTP / mobile OTP is received and post validation of ABHA number, an individual is able to successfully login 15. Mandatory Login with default ABHA address (14-digit@abdm) flow Resend aadhar OTP / mobile OTP after clicking on “Resend OTP” Check if an individual receive aadhar OTP / mobile OTP after 60 seconds and an individual is able to login post validation of ABHA address 16. Mandatory Login with ABHA number flow Enter 14 digit ABHA number 17. Mandatory Login with ABHA number flow Validate ABHA number via aadhar OTP / mobile OTP Check if aadhar OTP / mobile OTP is received and post validation of ABHA number, an individual is able to successfully login 18. Mandatory Login with ABHA number flow Resend aadhar OTP / mobile OTP after clicking on “Resend OTP Check if an individual receive aadhar OTP / mobile OTP after 60 seconds and an individual is able to login post validation of ABHA number 19. Mandatory Reset Password Login with any mode - mobile number / email ID / default ABHA address / easy to remember ABHA address / ABHA number Check if password can be updated by an individual post login with any mode 20. Mandatory Reset Password Post successful login, click on reset password withing setting of the menu bar 21. Mandatory Reset Password Create password as per password policy. Password policy: 8 characters or longer, one A-Z, one a-z, one 0-9, atleast one symbol, no space and not more than 2 consecutive characters or keyboard keys. Check if password is created as per password policy 22. Mandatory Reset Password Confirm password Check new password is created only after same password is confirmed again 23. Mandatory Reset Password A message is displayed called “Your password is successfully changed” Check if an individual new password is created by login with new password API Sequence Diagram %%{init:{\"fontSize\": \"1.0rem\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram title Login to PHR App using ABHA Address PHR App-\u003e\u003eHIE-CM:GET /v1/apps/phrAddres/search/auth-mode note left of HIE-CM: Select any Auth Mode PHR App-\u003e\u003eHIE-CM:POST /v1/apps/phrAddres/auth-init PHR App-\u003e\u003eHIE-CM:POST /v1/apps/phrAddres/auth-confirm %%{init:{\"fontSize\": \"1.0rem\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram title Login to PHR App using Mobile number/Email PHR App-\u003e\u003eHIE-CM:POST /v1/apps/login/mobileEmail/auth-init PHR App-\u003e\u003eHIE-CM:Verify mobile number/email\u003cbr/\u003ePOST /v1/apps/login/mobileEmail/pre-Verify PHR App-\u003e\u003eHIE-CM:POST /v1/apps/login/mobileEmail/auth-confirm %%{init:{\"fontSize\": \"1.0rem\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram title Login to PHR App using ABHA number PHR App-\u003e\u003eHIE-CM:POST /v1/apps/login/hid/search/auth-mode PHR App-\u003e\u003eHIE-CM:POST /v1/apps/login/hid/auth-init PHR App-\u003e\u003eHIE-CM:POST /v1/apps/login/mobileEmail/pre-Verify PHR App-\u003e\u003eHIE-CM:POST /v1/apps/login/mobileEmail/auth-confirm API Information Request Response Different Methods Of Login Login Using ABHA Address Login Using Mobile Number/Email Login Using ABHA Number Utilities\nFor encrypting the mobileNumber/AadharNumber/otp refer the link\nTo get public key for encrypting refer the link For converting an image into Base64 string refer the link\nLogin Using ABHA Address 1. Initiate Login Transaction\nBASE URLs: https://dev.abdm.gov.in/cm\n2. Verify Login Transaction\nBASE URLs: https://dev.abdm.gov.in/cm\nLogin Using Mobile Number/Email 3. Generate Mobile/Email OTP\nGenerate Mobile/Email OTP to start Login transaction\nBASE URLs: https://dev.abdm.gov.in/cm\n4. Verify Mobile/Email OTP\nBASE URLs: https://dev.abdm.gov.in/cm\n5. Get User Token\nGet the User Token in the mobile/email login flow\nBASE URLs: https://dev.abdm.gov.in/cm\nLogin Using ABHA Number 6. Search User by Health ID Number\nBASE URLs: https://dev.abdm.gov.in/cm\n7. Initiate Login Transaction Using HealthId Number\nBASE URLs: https://dev.abdm.gov.in/cm\n8. Verify Mobile OTP\nBASE URLs: https://dev.abdm.gov.in/cm\n9. Get the User Token\nBASE URLs: https://dev.abdm.gov.in/cm\n","description":"","tags":null,"title":"Login to PHR App","uri":"/abdm-docs/5-building-a-phr-app/login-user/index.html"},{"content":"Fidelius CLI Fidelius CLI is a specialized command-line interface (CLI) tool designed for ECDH cryptography. It is based on Curve25519 and incorporates a custom HMAC-based Key Derivation Function, enabling the generation of AES-GCM keys for data encryption and decryption.\nWhile Fidelius CLI can be used for various end-to-end encryption needs, its primary purpose is to secure health data within the ABDM ecosystem. ABDM stands for Ayushman Bharat Digital Mission, an initiative by the Indian Government to establish a nationwide digital infrastructure supporting integrated digital health services.\nThe diagram below provides a visual representation of the health data flow between a Health Information User and a Health Information Provider, who play vital roles in the ABDM system. The encryption and decryption steps in the flowchart are appropriately labeled as “HANDLED BY FIDELIUS CLI” to indicate the involvement of Fidelius CLI in these processes.\nFor more detailed information on the technical foundations and protocols involved in encrypting and decrypting FHIR data within the ABDM ecosystem, you can refer to this comprehensive guide.\nUsage A pre-built release can be downloaded from here. Please ensure that JRE 1.8+ is installed, to run the binaries in the release.\nFidelius CLI works with the following commands\ngenerate-key-material (or gkm) · The generate-key-material command generates an ECDH key pair, and a random nonce. $ ./fidelius-cli gkm encrypt (or e) · The encrypt command takes the following additional arguments. $ ./fidelius-cli e\\ \u003cstring-to-encrypt\u003e\\ \u003csender-nonce\u003e\\ \u003crequester-nonce\u003e\\ \u003csender-private-key\u003e\\ \u003crequester-public-key\u003e\\; sane-encrypt (or se) · The sane-encrypt command behaves identically to the encrypt command, with the only difference being that it accepts base64 encoded version of the input string. Fidelius would decode this base64 value to the original string, before encrypting it. This is available to circumvent the need to escape special characters in strings (e.g. JSON values). $ ./fidelius-cli se\\ \u003cstring-to-encrypt-base64-encoded\u003e\\ \u003csender-nonce\u003e\\ \u003crequester-nonce\u003e\\ \u003csender-private-key\u003e\\ \u003crequester-public-key\u003e\\; decrypt (or d) · The decrypt command takes the following additional arguments. $ ./fidelius-cli d\\ \u003cencrypted-data\u003e\\ \u003crequester-nonce\u003e\\ \u003csender-nonce\u003e\\ \u003crequester-private-key\u003e\\ \u003csender-public-key\u003e\\; --filepath (or -f) · The --filepath flag can be used to provide the CLI its parameters (command and the subsequent arguments) from a text file. This can be used as a workaround to the Windows’ terminals’ “This command is too long” (\u003e8192 characters) limitation in case of long input strings. $ ./fidelius-cli -f /path/to/params/file.txt The following set of commands demonstrate an example for the usage of the above commands.\nKey Material Generation\n$ cd fidelius-cli-1.x.x/bin $ ./fidelius-cli gkm { \"privateKey\": \"DMxHPri8d7IT23KgLk281zZenMfVHSdeamq0RhwlIBk=\", \"publicKey\": \"BAheD5rUqTy4V5xR4/6HWmYpopu5CO+KO8BECS0udNqUTSNo91TIqIIy1A4Vh+F94c+n9vAcwXU2bGcfsI5f69Y=\", \"x509PublicKey\": \"MIIBMTCB6gYHKoZIzj0CATCB3gIBATArBgcqhkjOPQEBAiB/////////////////////////////////////////7TBEBCAqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqYSRShRAQge0Je0Je0Je0Je0Je0Je0Je0Je0Je0Je0JgtenHcQyGQEQQQqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq0kWiCuGaG4oIa04B7dLHdI0UySPU1+bXxhsinpxaJ+ztPZAiAQAAAAAAAAAAAAAAAAAAAAFN753qL3nNZYEmMaXPXT7QIBCANCAAQIXg+a1Kk8uFecUeP+h1pmKaKbuQjvijvARAktLnTalE0jaPdUyKiCMtQOFYfhfeHPp/bwHMF1NmxnH7COX+vW\", \"nonce\": \"6uj1RdDUbcpI3lVMZvijkMC8Te20O4Bcyz0SyivX8Eg=\" } Let’s suppose the above output represents the generated key material of the requester.\n$ ./fidelius-cli gkm { \"privateKey\": \"AYhVZpbVeX4KS5Qm/W0+9Ye2q3rnVVGmqRICmseWni4=\", \"publicKey\": \"BABVt+mpRLMXiQpIfEq6bj8hlXsdtXIxLsspmMgLNI1SR5mHgDVbjHO2A+U4QlMddGzqyEidzm1AkhtSxSO2Ahg=\", \"x509PublicKey\": \"MIIBMTCB6gYHKoZIzj0CATCB3gIBATArBgcqhkjOPQEBAiB/////////////////////////////////////////7TBEBCAqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqYSRShRAQge0Je0Je0Je0Je0Je0Je0Je0Je0Je0Je0JgtenHcQyGQEQQQqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq0kWiCuGaG4oIa04B7dLHdI0UySPU1+bXxhsinpxaJ+ztPZAiAQAAAAAAAAAAAAAAAAAAAAFN753qL3nNZYEmMaXPXT7QIBCANCAAQAVbfpqUSzF4kKSHxKum4/IZV7HbVyMS7LKZjICzSNUkeZh4A1W4xztgPlOEJTHXRs6shInc5tQJIbUsUjtgIY\", \"nonce\": \"lmXgblZwotx+DfBgKJF0lZXtAXgBEYr5khh79Zytr2Y=\" } Let’s suppose the above output represents the generated key material of the sender.\nNote It is generally recommended to use the publicKey field, which represents the base64 encoding of the uncompressed EC public key, for all encryption and decryption operations. However, it is important to note that certain HIUs only accept the public key in the base64-encoded X.509 format, specifically within the key material sent by the HIP, before decryption.\nTo obtain the X.509 public key, you can utilize the x509PublicKey field available in the output of the gkm command provided by Fidelius CLI. Both the base64-encoded X.509 and the base64-encoded uncompressed public key formats can be used interchangeably with the encrypt and decrypt commands of Fidelius CLI, accommodating the requirements of different HIUs.\nEncryption\nNote that the e (encrypt) command also accepts the \u003crequester-public-key\u003e (the last argument) in X.509 standard.\n$ ./fidelius-cli e\\ \"Wormtail should never have been the Potter cottage's secret keeper.\"\\ lmXgblZwotx+DfBgKJF0lZXtAXgBEYr5khh79Zytr2Y=\\ 6uj1RdDUbcpI3lVMZvijkMC8Te20O4Bcyz0SyivX8Eg=\\ AYhVZpbVeX4KS5Qm/W0+9Ye2q3rnVVGmqRICmseWni4=\\ BAheD5rUqTy4V5xR4/6HWmYpopu5CO+KO8BECS0udNqUTSNo91TIqIIy1A4Vh+F94c+n9vAcwXU2bGcfsI5f69Y=\\; { \"encryptedData\": \"pzMvVZNNVtJzqPkkxcCbBUWgDEBy/mBXIeT2dJWI16ZAQnnXUb9lI+S4k8XK6mgZSKKSRIHkcNvJpllnBg548wUgavBa0vCRRwdL6kY6Yw==\" } Decryption\nNote that the d (decrypt) command also accepts the \u003csender-public-key\u003e (the last argument) in X.509 standard.\n$ ./fidelius-cli d\\ pzMvVZNNVtJzqPkkxcCbBUWgDEBy/mBXIeT2dJWI16ZAQnnXUb9lI+S4k8XK6mgZSKKSRIHkcNvJpllnBg548wUgavBa0vCRRwdL6kY6Yw==\\ 6uj1RdDUbcpI3lVMZvijkMC8Te20O4Bcyz0SyivX8Eg=\\ lmXgblZwotx+DfBgKJF0lZXtAXgBEYr5khh79Zytr2Y=\\ DMxHPri8d7IT23KgLk281zZenMfVHSdeamq0RhwlIBk=\\ BABVt+mpRLMXiQpIfEq6bj8hlXsdtXIxLsspmMgLNI1SR5mHgDVbjHO2A+U4QlMddGzqyEidzm1AkhtSxSO2Ahg=\\; { \"decryptedData\": \"Wormtail should never have been the Potter cottage's secret keeper.\" } The --filepath flag\nWith the --filepath flag, the arguments to the CLI can be specified in a file, one argument per line. The CLI will read the file and parse the arguments in order.\n$ cat /path/to/example-params.txt d pzMvVZNNVtJzqPkkxcCbBUWgDEBy/mBXIeT2dJWI16ZAQnnXUb9lI+S4k8XK6mgZSKKSRIHkcNvJpllnBg548wUgavBa0vCRRwdL6kY6Yw== 6uj1RdDUbcpI3lVMZvijkMC8Te20O4Bcyz0SyivX8Eg= lmXgblZwotx+DfBgKJF0lZXtAXgBEYr5khh79Zytr2Y= DMxHPri8d7IT23KgLk281zZenMfVHSdeamq0RhwlIBk= BABVt+mpRLMXiQpIfEq6bj8hlXsdtXIxLsspmMgLNI1SR5mHgDVbjHO2A+U4QlMddGzqyEidzm1AkhtSxSO2Ahg= The above example can be executed as follows:\n$ ./fidelius-cli --filepath /path/to/example-parms.txt { \"decryptedData\": \"Wormtail should never have been the Potter cottage's secret keeper.\" } Using Fidelius CLI with other Programming Languages\nWhile Fidelius CLI is a Java implementation, the ./examples folder in the corresponding repository can be perused for guidance on integrating Fidelius CLI (achieved by invoking the binary as a subprocess) in Node JS, Python, Ruby, and PHP codebases.\nNodeJS Python Ruby PHP The above examples can be run using the following commands:\n$ node examples/node/index.js $ python3 examples/python/main.py $ ruby examples/ruby/main.rb $ php examples/php/index.php ","description":"","tags":null,"title":"Fidelius CLI","uri":"/abdm-docs/3-milestone2/encryption-decryption/fidelius-cli/index.html"},{"content":"Notification to Mobile Applicable when: User does not share ABHA address during registration but shares mobile, name, age, gender.\nHealth Information Provider (HIP) must call an ABDM API when a new health record is ready to be shared with an user. ABDM sends the SMS to notify the user that they can access and link the new health record using any PHR app. The SMS contains a deep link the triggers the PHR app. The PHR app will help the user create an ABHA address, discover and link the health record. Sample User Experience Test Cases Function: HIP Initiated Health Record Linking Using Mobile OTP\nFunctionality Test Case Steps To Be Executed Mandatory Sending notification to the patient on their mobile with deep link (HIP_INIT_NOTIFY_HIECM) HIP should notify HIE-CM when a new health record is generated \u0026 ABHA address is not available. This test case is applicable when patient has shared mobile number and has NOT shared ABHA address with HIP during patient registration. 1. New health record like Diagnostic report, Prescription, etc is created on EMR/HMIS system for a patient. 2. Mobile number of patient is available in EMR/HMIS system and ABHA address of the patient is NOT available in EMR/HMIS system. 3. EMR/HMIS system will call the SMS/notify2 API on the gateway to inform of available of new health record (only the mobile number and the HIP ID is to be shared). 4. ABDM should be sending notification to the patient on their mobile with deep link. 5. Patient should be able to download/launch PHR app of their choice. 6. PHR app will make a discovery request to the HIP. 7. Care context for New patient record must be correctly discoverable in the PHR app. API Sequence Diagram The following flow diagram details the flows that take place during “Sending SMS to Patient” from the HIP perspective\n%%{init:{\"fontSize\": \"1.0rem\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram title Notification to Mobile HIP/HRP-\u003e\u003eHIE-CM:POST/v0.5/patients/sms/notify activate HIE-CM actor User HIE-CM-\u003e\u003eUser:Send SMS with deep link HIE-CM-\u003e\u003eHIP/HRP:v0.5/patients/sms/on-notify API Information Request Response 1. Send SMS Notifications\nAPI to send SMS notifications to patient with custom deeplink. “name” is the health facility name as in HFR and “id” is the HFR (HIP) ID.\nBASE URL: https://dev.abdm.gov.in/gateway\n2. Acknowledgement Response For SMS Notification\nAcknowledgement response for SMS notification sent to patient by HIP\nBASE URL: Callback URL registered for HRP\n","description":"","tags":null,"title":"Notification to Mobile","uri":"/abdm-docs/3-milestone2/link-care-context/notification-mobile/index.html"},{"content":"Understanding Care Contexts A Care Context is a logical bundle of the health records. Each HMIS/LMIS system must decide how to organise data for a user into one or more care contexts. A care context is the element that is linked by the HMIS/LMIS with the ABHA address of the user. The HIE-CM is to be “data blind” by design, i.e. the HIE-CM should not have any visibility on the content of health records. The care context therefore has only 2 peices of information\nA reference ID, this is an internal value that should be used by the HRP (HMIS/LMIS) to identify the health record that is part of this care context A display name, this can contain info that helps the user identify which records are included but must not contain any confidential information or test results. For Example: “OPD records (XRay, Prescription) from 3rd March 2023” We recommend that you can organize a users data into care contexts by creating\nOne care context for every outpatient visit One care context for each inpatient visit. JSON Structure of Care Contexts { \"patient\": { \"referenceNumber\": \"TMH-PUID-001\", \"display\": \"TMH records for Kiran Kumar\", \"careContexts\": [ { \"referenceNumber\": \"2375639\", \"display\": \"OPD records for O3 Oct 2022\" }, { \"referenceNumber\": \"2375640\", \"display\": \"IPD records for admission betweenn O4 Oct 2022 to 06 Oct 2022\" }, ] } } ","description":"","tags":null,"title":"Understanding Care Contexts","uri":"/abdm-docs/3-milestone2/understand-care-context/index.html"},{"content":"By Demographics Applicable To HMIS / LMIS (PVT) Government Health App Scan User ABHA QR/Demographics Mandatory Mandatory Functionality Overview ABDM requires HMIS/LMIS to generate a link token that can be used for linking of health records. A demographic authentication where the ABHA address, name, year of birth and gender (as in the ABHA address) is required to generate this linking token.\nThe Health Facility can scan the User’s ABHA QR code using a 2D Barcode scanner. HMIS/LMIS systems are expected to support this ability.\nThe User ABHA QR code contains all the demographic information. This is very useful esp when dealing with people without smartphones who have been issued an ABHA card.\nSample QR Codes\nQR Code JSON output Sample QR Code in User’s ABHA Application Sample QR Code in User’s ABHA Card Note the differences in the feild names between both the QR codes. Your software must be able to handle either QR code.\nIn Milestone 2, Any Health record generated for this user will need to be linked to the ABHA address. Linking happens in two steps:\nLink token generation Linking care context with ABHA address using valid link token A link token can be generated using Demographic authentication APIs described below. The link token must be saved by the HRP can can be used for linking multiple number of care contexts till it expires.\nPre-requisites:\nPatient must have a ABHA app with a valid ABHA address or physical card like a ABHA card Hospital must have a 2D Barcode scanner available at the registration counter. The HRP software registration page must have text box to load data scanned from ABHA QR Code. Steps to scan User’s ABHA QR Code\nHospital operator scans the QR code on patient ABHA card or as displayed in ABHA mobile App The Patient details like ABHA address, Name, DOB, Gender, State Id, District Id, etc are embedded in the QR code as a JSON HRP software must validate the scanned data and collect a Linking Token from ABDM Gateway The software must use the information scanned to register the patient and save the ABHA Address Sample User Experience Here’s how the user journey looks on the Health Facility’s side:\nTest Cases: S.no. Applicable To Test Summary Test Scenario 1. Optional Applicable to All (VRFY_ABHA_501) System must allow scanning of ABHA QR code to read the user’s ABHA information EMR/HMIS scans the user’s ABHA QR code API Versions V0.5 API Sequence Diagram for V0.5 API API Information Request Response for V0.5 V3 API Sequence Diagram for V3 API API Information Request Response for V3 Note: V0.5 APIs are currently in production. V3 APIs are currently only available in sandbox\nV0.5 API Sequence Diagram %%{init:{\"fontSize\": \"1.0rem\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram title V0.5 APIs - Scan User's ABHA QR Code to verify ABHA Address actor User HRP/HIP-\u003e\u003eUser: Health Facility scans User's ABHA QR code HRP/HIP-\u003e\u003eHIE-CM: POST /v0.5/users/auth/init HIE-CM--\u003e\u003eHRP/HIP: Response 200 HIE-CM-\u003e\u003eHRP/HIP: POST /v0.5/users/auth/on-init HRP/HIP--\u003e\u003eHIE-CM: Response 200 HRP/HIP-\u003e\u003eHIE-CM: /v0.5/users/auth/confirm HIE-CM--\u003e\u003eHRP/HIP: Response 200 HRP/HIP-\u003e\u003eHIE-CM: /v0.5/users/auth/on-confirm HIE-CM--\u003e\u003eHRP/HIP: Response 200 V0.5 API Information Request Response 1. Initiate Authentication of users\nThis API is called by HIPs to initiate authentication of users. A transactionId is retuned by the corresponding callback API for confirmation of user auth.\nBASE URLs: https://dev.abdm.gov.in/gateway\nNote: purpose should be KYC_AND_LINK and authmode should be DEMOGRAPHICS\n2. Call Back API For Init\nResponse to user authentication initialization from HIP. If the patient’s id is valid, CM will return a transactionId as initialization of user auth. If the request is valid, then ‘auth.mode’ will convey how the authentication should be done.\nBASE URLs: https://your-hrp-server.com\n3. Confirm Authentication Of Users\nThis API is called by HIP/HIUs to confirm authentication of users. The transactionId returned by the previous callback API /users/auth/on-init must be sent. If Authentication is successful the callback API will send an “access token” for subsequent purpose specific API calls.\nBASE URLs: https://dev.abdm.gov.in/gateway\n4. Call Back API For Confirm\nThis API is called by CM to confirm authentication of users.\nBASE URLs: https://your-hrp-server.com\nV3 API Sequence Diagram %%{init:{\"fontSize\": \"1.0rem\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram title V3 API- Scan User's ABHA QR Code to verify ABHA Address actor User HRP/HIP-\u003e\u003eUser:Health Facility scans User's ABHA QR code HRP/HIP-\u003e\u003eABDM Sandbox Gateway:POST /v3/token/generate-token ABDM Sandbox Gateway--\u003e\u003eHRP/HIP:Response 200 ABDM Sandbox Gateway-\u003e\u003eHRP/HIP:POST /v3/token/on-generate-token HRP/HIP--\u003e\u003eABDM Sandbox Gateway:Response 200 V3 API Information Request Response 1. Generate link token\nBASE URLs:\nSandbox Server URL: https://dev.abdm.gov.in/hiecm/api/\nProduction Server URL: https://live.abdm.gov.in/hiecm/api\n2. Call back API\nBASE URLs: Callback URL registered by HRP\nIf you get unauthorised (400) for V3 APIS, kindly contact Integration.support@nha.gov.in with your clientID.\nVerify ABHA Address by demographic If Linking token has expired (more than 6 months old or it has been already used once), the HMIS/LMIS is expected to generate a new token using the demographic authentication APIs.\n","description":"","tags":null,"title":"By Demographics","uri":"/abdm-docs/2-milestone1/verify-abha-address/demographics/index.html"},{"content":" Coming Soon.. Note To be documented after V3 APIs are released.\nApplicable To HMIS / LMIS (PVT) Government Health App Using Aadhar Biometric Optional Mandatory Overview To enable beneficiary registration using Aadhaar Biometric, a client needs to have a Aadhaar Registered Device (RD Device) that allows capture and processing of Biometrics of the beneficiary. This RD Service returns an encrypted PID block containing signed biometrics (using device private key within the registered devices secure zone) back to the calling application. To enable beneficiary registration using biometrics, this PID is passed in the request along with Aadhaar and other required details. Post verification, the client is returned complete profile data along with ABHA (Health ID). ","description":"","tags":null,"title":"Using Aadhar Biometric","uri":"/abdm-docs/2-milestone1/abha-number/aadhar-biometric/index.html"},{"content":"Milestone 1 (M1) Functionalities to be implemented as part of Milestone 1 are:\nCreate ABHA number - using Aadhaar / Mobile / Demographic / Driving License Collect and Verify ABHA address during patient registration M1 Test Cases mapping by Role Applicable To HMIS / LMIS (PVT) Govt. Health App Creation of ABHA Number Using Aadhar OTP Mandatory Mandatory Using Aadhar Biometrics Optional Mandatory Using Aadhar Demographics (Offline) NA Mandatory Using Driving License Optional Optional Download ABHA Card Mandatory Mandatory Default ABHA Address NA NA Profile Update Optional Optional Verification of ABHA Address Scan Health Facility QR Mandatory Mandatory Scan User ABHA QR Mandatory Mandatory By OTP Mandatory Mandatory New vs Returning Patients Mandatory Mandatory This section covers: Creation of ABHA number Using Aadhaar OTP Using Aadhaar biometric Using Aadhaar demographics (offline) Using driving license Download ABHA Card Default ABHA Address Profile Update Verification of ABHA address By scan \u0026 share By OTP By demographics New vs Returning Patients ","description":"","tags":null,"title":"Milestone 1","uri":"/abdm-docs/2-milestone1/index.html"},{"content":"The Ayushman Bharat Digital Mission (ABDM) has developed building blocks and APIs to offer a seamless digital healthcare experience for all stakeholders – health facilities, patients and healthcare workers. The digital infrastructure developed is now accessible to health facilities and health tech players for integration.\nHere’s a picture to help you understand how ABDM can improve the experience you deliver to your patients :\nABDM Sandbox Journey ABDM aims at bringing out inoperability and sharing of health information among all the participants in India. For this to happen, we expect organizations that build software for hospitals, labs, insurers, consumers to implement certain functionalities by integrating with ABDM building blocks. The ABDM sandbox provides tools and support to test the integration. Once integrated, the software developers (companies) can get independent functional validation and apply for ABDM certification (by applying for Sandbox Exit). The certified version of the software can then be deployed for the various health service providers.\nHere’s how your journey through the sandbox looks like:\nRegister for access to the Sandbox Receive a Sandbox client ID \u0026 secret (key) from National Health Authority (NHA) Understand the various functionalities (test cases) to be implemented for each integration milestone Get comfortable with the APIs for each functionality using Postman Implement the functionality in your application Get functional validation report from one of the 3 empanelled companies Get security test report from any CERT-in empanelled organization Apply for Sandbox Exit Demo your app to NHA team Obtain a Production client ID \u0026 secret (key) from NHA Deploy your ABDM certified application with your customers ABDM Integration Milestones The integration steps have been broken into milestones to make it easier for integrators. Each Milestone has a set of functional test cases that must be supported by your application as part of certification\nMilestone 1: ABHA Number creation. Capture \u0026 verification of ABHA Address during patient registration. Milestone 2: Building Health Information Provider (HIP) services to share digital records with any Personal Health Records (PHR) app. Milestone 3: Developing Health Information User (HIU) services to obtain patient’s medical history with consent PHR \u0026 Locker Apps: Subscriptions for notifications, helping users manage consents, upload of user scanned records and more Before you start integration Check which milestones are applicable for your type of application here Understand the concepts \u0026 functionality required for each milestone Review the test cases for each milestone Download the Postman collection and validate each API that is part of a test case in the sandbox Integrate the APIs with your application once you are confident on how it works using Postman ","description":"","tags":null,"title":"About ABDM Sandbox","uri":"/abdm-docs/1-basics/about_abdm_sandbox/index.html"},{"content":"Verify ABHA Address What is ABHA Address?\nABHA Address is an account on a HIE-CM that enables an user to get this health records linked and share these linked records with consent.\nUsers can create an ABHA address via a PHR application, the NHA HIE-CM Website or by creating a ABHA Number which provides a default ABHA address (14DigitABHANo@abdm). An ABHA address looks like ‘name@abdm’ (production) or ’name@sbx’ (Sandbox).\nUsers looking to collect their health records digtally are expected to share their ABHA address when they visit a healthcare facility.\nThis section covers the methods that must be supported for collecting \u0026 verifying the ABHA Address from the user: Scan Health Facility QR Scan User ABHA QR By OTP New vs Returning Patients ","description":"","tags":null,"title":"Verification of ABHA Address","uri":"/abdm-docs/2-milestone1/verify-abha-address/index.html"},{"content":"Swagger for ABHA Number APIs This section covers:\nComplete Swagger for ABHA Number APIs V1/V2 APIs V3 APIs ","description":"","tags":null,"title":"ABHA Number APIs","uri":"/abdm-docs/12-swagger/abha_number_apis/index.html"},{"content":"Swagger for HIP/HRP APIs This section covers:\nComplete Swagger for HIP/HRP APIs V0.5 APIs V3 Share profile V3 Link Token ","description":"","tags":null,"title":"HIP/HRP APIs","uri":"/abdm-docs/12-swagger/hip_hrp/index.html"},{"content":"ABHA Address yaml Swagger for ABHA Address APIs ","description":"","tags":null,"title":"ABHA Address APIs","uri":"/abdm-docs/12-swagger/phr-address-apis/abha_address_apis/index.html"},{"content":"ABHA Numbers V1/V2 yaml Swagger for ABHA Service ","description":"","tags":null,"title":"V1/V2","uri":"/abdm-docs/12-swagger/abha_number_apis/v1_v2/index.html"},{"content":"Data Encryption and Decryption The following abbreviations are used in this section:\nECDH: Elliptic-curve Diffie–Hellman Key Exchange AES-GCM: Advanced Encryption Standard-Galois/Counter Mode DHPK: Elliptic-curve Diffie–Hellman public key DHSK: Elliptic-curve Diffie–Hellman secret/private key P and U is annotation for system DHK(U,P): Elliptic-curve Diffie–Hellman Key Rand: Random String Information shared as part of the data flow will be secured using an encryption mechanism that ensures perfect forward secrecy. This means that even if any of the key materials stored at HIPs, HIUs or HDCM clients (either long-term private keys or session keys) are compromised, it would not be possible to decipher data that was previously exchanged. The encryption mechanism uses Elliptic-curve Diffie–Hellman Key Exchange (ECDH), which is used in many Internet protocols such as SSH and TLS for establishing shared secret keys between remote parties.\nData encryption for HDCM client The following points detail the process behind data encryption for HDCM client:\nWhen creating a data request, the HIU does the following: Creates a set of Elliptic-curve Diffie–Hellman (ECDH) parameters Generates a ECDH key pair (dhsk(U) , dhpk(U)) (which is a short-term public-private key pair) Generates a 32-byte random value, rand(U) which is also called nonce. The HIU sends these values to HDCM, along with the data request via a digitally-signed API call. HDCM forwards the request to the HIP, again via a digitally-signed API call. HIP checks whether the consent artefact is valid, and whether the data being requested is in keeping with the terms of the artefact. If the artefact is valid, the HIP does the following: Generates a fresh ECDH public-private key pair in the same group as specified by the HIU ((dhsk(P), dhpk(P)) Generates a 32-byte random value rand(P) aka nonce. Computes a ECDH shared key dhk(U,P) using dhpk(U) and dhsk(P) Computes a 256-bit session key sk(U,P) using dhpk(U) and dhsk(P), which is used to encrypt the data sent from HIP to HIU. HIP sends the public key dhpk(P), the nonce rand(P) and the encrypted data to the HIU. Data decryption for HIU The following process is applied to decrypt the data that the HIU receives:\nHIU receives the encrypted data along with keymaterial containing dhpk(p), nonce. HIU queries through stored data and gets the keymaterial which it created when initiating the data flow request, as follows: It computes a ECDH shared key dhk(U,P) using dhpk(P) and dhsk(U). It then computes a 256-bit session key sk(U,P) using dhpk(P) and dhsk(U), which is used to decrypt the data sent from HIP to HIU. Note:\nIn order to generate the shared secret key, dhpk(P) should be used, minus headers. Following the big endian (network byte order) keeps the used to derive the shared secret consistent. Also as the cryptography deals with large numbers, it’s recommended that no data is converted to binary format until its first converted to big integer. Here is a sample set of libraries that you can use:\nOpenssl Bouncy castle (ensure the X dhpk is a big integer) NaCl Libgcrypt PyNaCl TweetNaCl While most libraries allow exporting of public keys, these keys are compressed and encoded for the most part. It is best to use the libraries to extract the uncompressed form of the public key, that will start with a hex 04. The 32 bytes after the 04 is the X.\nThe ECDH mechanism ensures that the shared key dh(U,P) can also be computed at the other end by the HIU using the values dhpk(P) (HIP’s ECDH public key) and dhsk(U) (HIU’s ECDH private key). For this reason, the HIP must ensure that the encrypted data is sent along with dhpk(P) and rand(P). The following data flow diagram represents the information encryption and decryption process between the HIU and the HIP:\nSteps to encrypt data\nThe following steps are involved in data encryption, on both sides:\nThe session key is derived from the shared secret key dh(U, P) as follows:\nXOR the nonce (HIP and HIU) Take the first 20 bytes as the salt for HKDF Derive the key using HKDF(shared key, salt) Now encrypt the data using AES GCM as follows:\nXOR the nonce Take the last 12 bytes as the IV for GCM Encrypt the data Data encryption summary: Choice of Elliptic-curve Diffie–Hellman parameters\nThe key exchange will be performed over Elliptic Curve Cryptography (ECC) groups. We will adhere to a single ECC curve, namely Curve25519, in all encryption operations. Curve25519 is used in ECDH implementations in various protocols like SSH and WhatsApp.\nExamples of encryption and decryption using ECDH key exchange:\nFor Java (compatible with Java 11) example, see here. For C# example, see here. For NodeJS, Python, Ruby and PHP example see here.\n","description":"","tags":null,"title":"Encryption and Decryption","uri":"/abdm-docs/3-milestone2/packaging-health-data/encryption-decryption/index.html"},{"content":"Manage PHR App User’s Profile Functionality Overview PHR applications need to have a (this) section, where users can view their demographic details and update (edit) their information.\nThe section should also display ABHA QR code as part of the Profile information\nThey should also be able to set/change password from this section.\nSimilarly, they should also have an option to set/change consent pin.\nThe user should also be able to upload a profile photo from this section.\nTest Cases Display Profile Details with status as KYC Verified / Self-Declared\nS.No Functionality Test Case Steps To Be Executed 1 Mandatory Showing individual’s profile details in the PHR app Individual’s profile is displayed in the PHR app with their status such as KYC verified and Self-Declared. Display all profile details filled by the individual, when individual click on Profile after Login. Also display KYC Verified with green tick mark for those profiles where ABHA address is linked with ABHA number. Display Self Delared with exclaimation mark for those profiles where ABHA address is not linked with ABHA number. ABHA number is visible in KYC verified profile and ABHA number is not visible in Self-Declared profile. Download ABHA address card in the PDF format\nS.No Functionality Test Case Steps To Be Executed 1 Mandatory Download ABHA address card Post clicking on “QR Code” icon, an individual can scan QR Code, share ABHA address card and download ABHA address card Following fields will be displayed in the ABHA address card: Profile Photo, Full Name, ABHA number - It will be displayed if, 14-digit Health ID number is linked to the ABHA address. ABHA number is displayed as XX-XXXX-XXXX-3421 (Hide starting 12 digits of ABHA number), ABHA address - It will be displayed as XXXXam@abdm (Hide starting alphabets of ABHA address), QR Code, Date of Birth, Gender, Mobile Number - It will be displayed as XXXXXX2278 (Hide starting 6 digits of ABHA number) Consent Pin\nS.No Functionality Test Case Steps To Be Executed 1 Mandatory Set Consent Pin Validate OTP received on registered mobile number Check that OTP is received on registered mobile number. 2 Mandatory Set Consent Pin Validate OTP received on registered mobile number Resend OTP option is provided,if OTP is not received on mobile in 60 seconds 3 Mandatory Set Consent Pin Enter 4 digit consent pin Check that only 4 digit consent pin is accepted 4 Mandatory Set Consent Pin Confirm Consent Pin Re-enter the consent pin to confirm the consent pin. Check that confirmation of consent pin is taken by re-entering it. 5 Mandatory Set Consent Pin Display message, so that an individual knows that consent pin is set successfully Display message “Congratulations! Your consent pin is successfully updated”. Below this message “Go Back To Home Screen” tab is provided to navigate the individual to home screen. 6 Mandatory Reset Consent Pin Enter 4 digit old consent pin Check if old consent pin entered is correct 7 Mandatory Reset Consent Pin Enter 4 digit new consent pin Check that only 4 digit consent pin are accepted 8 Mandatory Reset Consent Pin Confirm new consent pin Re-enter the consent pin to confirm the consent pin. Check that confirmation of consent pin is taken by re-entering it. 9 Mandatory Reset Consent Pin Display message, so that an individual knows that consent pin is updated Display message Congratulations! Your new consent pin is successfully updated. Below this message “Go Back To Home Screen tab is provided to navigate the individual to home screen. 10 Mandatory Forgot Consent Pin Enter OTP Check that OTP is received on registered mobile number. 11 Mandatory Forgot Consent Pin Resend OTP, if OTP is not received in 60 seconds Check that resend OTP option is provided, if OTP is not received on mobile device 12 Mandatory Forgot Consent Pin Enter 4 digit new consent pin 4 digit consent pin is only accepted 13 Mandatory Forgot Consent Pin Confirm new consent pin Re-enter the consent pin to confirm the consent pin. Check that confirmation of consent pin is taken by re-entering it. 14 Mandatory Forgot Consent Pin Display message, so that an individual knows that consent pin is updated Display message “Congratulations! Your new consent pin is successfully updated”. Below this message “Go Back To Home Screen” tab is provided to navigate the individual to home screen. Edit Profile\nS.No Functionality Test Case Steps To Be Executed 1 Mandatory Edit profile for KYC verified profiles Update mobile number Mobile OTP is received on updated mobile number. Post mobile OTP validation, mobile no is updated. 2 Mandatory Edit profile for KYC verified profiles Update email ID E-mail OTP is received on updated e-mail ID. Post e-mail OTP validation, e-mail ID is updated. 3 Mandatory Edit profile for KYC verified profiles Update address All fields of address such as address line 1, district, state and pin-code can be updated. 4 Mandatory Edit profile for Self-Declared profile Update Photo Photo can be edited by an individul taking the picture from mobile camera / upload photo from gallery of the device 5 Mandatory Edit profile for Self-Declared profile Update Full Name Update First Name, Middle name and Last Name 6 Mandatory Edit profile for Self-Declared profile Update Gender Update Gender 7 Mandatory Edit profile for Self-Declared profile Update DoB Update Day, Month and Year 8 Mandatory Edit profile for Self-Declared profile Update Mobile No Mobile OTP is received on updated mobile number. Post mobile OTP validation, mobile number is updated. 9 Mandatory Edit profile for Self-Declared profile Update Email ID E-mail OTP is received on updated e-mail ID. Post e-mail OTP validation, e-mail ID is updated. 10 Mandatory Edit profile for Self-Declared profile Update Address All fields of address such as address line 1, district, state and pin-code can be updated. API Sequence Diagram %%{init:{\"fontSize\": \"1.0rem\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram title Manager User Profiles with PHR App note over PHR App,HIE-CM: Get User Profile PHR App-\u003e\u003eHIE-CM:GET /v1/apps/profile/me note over PHR App,HIE-CM: Update Profile PHR App-\u003e\u003eHIE-CM:POST v1/apps/profile/update note over PHR App,HIE-CM: Reset Password PHR App-\u003e\u003eHIE-CM:/v1/apps/patients/profile/reset-password note over PHR App,HIE-CM: Get patient QR Code PHR App-\u003e\u003eHIE-CM:GET /v1/apps/patients/qr-code note over PHR App,HIE-CM: Create Consent Pin PHR App-\u003e\u003eHIE-CM:POST /patients/pin note over PHR App,HIE-CM: Reset Consent Pin PHR App-\u003e\u003eHIE-CM:POST /patients/verify-pin PHR App-\u003e\u003eHIE-CM:POST /patients/change-pin note over PHR App,HIE-CM: Forgot Consent Pin PHR App-\u003e\u003eHIE-CM:POST /patients/forgot-pin/generate-otp PHR App-\u003e\u003eHIE-CM:POST /patients/forgot-pin/validate-otp PHR App-\u003e\u003eHIE-CM:POST /patients/reset-pin API Information Request Response Manage User Profiles Profile Collection API Manage Consent Pin Utilities\nFor encrypting the mobileNumber/AadharNumber/otp refer the link\nTo get public key for encrypting refer the link For converting an image into Base64 string refer the link\nProfile Collection API 1. Get User Details\nBASE URLs: https://dev.abdm.gov.in/cm\n2. Update User Profile Details\nBASE URLs: https://dev.abdm.gov.in/cm\n3. Reset Password\nBASE URLs: https://dev.abdm.gov.in/cm\n4. Get Patient’s QR Code\nBASE URLs: https://dev.abdm.gov.in/cm\nManage Consent Pin 5. Create Transaction Pin\nBASE URLs: https://dev.abdm.gov.in/cm\n6. Verify Pin\nBASE URLs: https://dev.abdm.gov.in/cm\nNote:\nscope (in request body):\nconsentrequest.approve for Grant Consent consent.revoke for Revoke Consent profile.changepin for Change PIN consent.autoapprove for Autoapprove all consents for HIU 7. Change Pin\nBASE URLs: https://dev.abdm.gov.in/cm\n8. Generate OTP For Forgot Pin\nBASE URLs: https://dev.abdm.gov.in/cm\n9. Validate OTP For Forgot Pin\nBASE URLs: https://dev.abdm.gov.in/cm\n10. Reset Pin\nBASE URLs: https://dev.abdm.gov.in/cm\n","description":"","tags":null,"title":"Manage User Profile","uri":"/abdm-docs/5-building-a-phr-app/manage-user/index.html"},{"content":"Discovery and Linking of patient records ABDM allows a user to find their health records from any health facility they have visited via the discovery process. Users can use an PHR app to select the health facility they visited and initiate a “Discovery” request The HIE-CM forwards the discovery request to the the HRP linked to the health facility All HRPs / HIPs must correctly implement the discovery API The HRP is expected to return all the care contexts for the user if records are found The user can then link them to their ABHA address. Sample User Experience Img a\nImg b\nImg c\nImg d\nImg e\nImplementing the discovery algorithm When a discovery request is initiated by the user, the HIP will receive a list of verified identifiers along with name and demographic information. Verified information includes the ABHA address, the mobile number name, gender, year of birth. Unverified / user declared information can include a medical registration number issued by the health facility and shared by the user.\nThe HRP must search for records that match this patient by implementing the matching logic depicted in the flowchart below\n%%{init:{\"fontSize\": \"1.0rem\", sequence\":{\"showSequenceNumbers\":true}}}%% flowchart LR id1 --\u003e|Yes| id5((Return\u003cbr/\u003ematching Records)) id1{Do any records match ABHA Address?} --\u003e|No| id2{Doany records match Mobile number?} id2 --\u003e |No| id9{Do any records match \u003cbr/\u003eMedical Record Registration number?} id9 --\u003e |Yes|id3 id9 --\u003e |No|id4((No\u003cbr/\u003ematching records\u003cbr/\u003efound)) id2 --\u003e|Yes| id3{Does the gender match?} id3 --\u003e |No| id4 id3 --\u003e|Yes| id6{Is the age within +/- 5 years?} id6 --\u003e |No| id4 id6 --\u003e |Yes| id7{Is the name phonetically similar?} id7 --\u003e |No| id4 id7 --\u003e |Yes| id8((Return\u003cbr/\u003ematching Records)) As response to the discovery request, the HRP/HIP must organize the patient data into care contexts and respond with a list of care contexts found. Ensure no clinical information is shared in the response. %%{init:{\"fontSize\": \"1.0rem\", sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram title Discovery of patient's information at the HIP PHR App-\u003e\u003eHIE-CM:Discover records at Health Facility HIE-CM-\u003e\u003eHIP/HRP:POST/care-contexts/discover activate HIP/HRP HIP/HRP--\u003e\u003eHIE-CM:Response HIP/HRP-\u003e\u003eHIP/HRP:Check if they have any matching records HIP/HRP-\u003e\u003eHIE-CM:POST/care-contexts/on-discover HIE-CM-\u003e\u003ePHR App: List of discovered care contexts API Information Request Response DISCOVERY 1. Discover patient’s accounts\nRequest for patient care context discover, made by Gateway intended for a specific HIP.\nBASE URL: Callback URL registered by HRP\n2. Response To Patient’s Account Discovery Request\nBASE URL: https://dev.abdm.gov.in/gateway\nLinking of discovered care contexts Verify the patient and link the carecontext as requested by the patient This flow begins once a user initiates a link request after discovering care comtexts.\nThe User shares the reference number and care contexts to be linked via the PHR app\nOn getting the link/init request The HIP system sends an OTP to the patient’s phone number. Note, the phone number for OTP communication from HIP may be the same as verified by the HIE-CM or maybe a different number that the patient has chosen as preferred mode of communication with HIP - meaning it’s up to the HIP to choose the phone number it sends OTP to.\nThe patient, via patient app, submits the OTP received from the HIP system within the stipulated time. If the patient is successfully authenticated by the HIP, the linking is now complete.\nAPI Sequence Diagram The following flow diagram details the flows that take place while linking to a health repository representing an HIP:\n%%{init:{\"fontSize\": \"1.0rem\", sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram title Linking (HIP side) PHR App-\u003e\u003eGateway:Link Care Context Gateway-\u003e\u003eRepository:POST/v0.5/links/link/init activate Repository Repository--\u003e\u003eHIP System:Link init Request HIP System--\u003e\u003eRepository: Response Repository-\u003e\u003eGateway:POST/v0.5/links/link/on-init HIP System--\u003e\u003eUser: Send token out-of-band Gateway-\u003e\u003eRepository: POST/v0.5/links/link/confirm Repository--\u003e\u003eHIP System:Link Confirm Request HIP System--\u003e\u003eRepository: Response Repository-\u003e\u003eGateway:POST/v0.5/links/link/on-confirm deactivate Repository LINKING 1. Link Patient’s Care Contexts\nBASE URL: https://your-hrp-server.com\n2. Response To Patient’s Care Context Link Request\nBASE URL: https://dev.abdm.gov.in/gateway\n3. Token Submission For Link Confirmation\nAPI to submit the token that was sent by HIP during the link request.\nBASE URL: https://your-hrp-server.com\n4. Care Context Linkage Completion\nToken authenticated by HIP, indicating completion of linkage of care-contexts\nBASE URL: https://dev.abdm.gov.in/gateway\n","description":"","tags":null,"title":"Discovery \u0026 link","uri":"/abdm-docs/3-milestone2/link-care-context/discovery-link/index.html"},{"content":"Link Care Context Linking of a care context can happen in 2 scenarios\nScenario 1:\nUser has shared ABHA Address during Registration HRP is expectated to initiate HIP initiated linking whenever a new health record is created for this user. It uses the linking token obtained and saved during registration to link a care context) Scenario 2:\nUser has not shared ABHA Address during Registration. HRP is expected to call a SMS notification API whenever a new health record is created for this user. This triggers a SMS with a deep link. The user will be able to initiate a discovery process, find their records and link them with their ABHA address The discovery process can also be used by the user at anytime to find their health records at the facilities they have visited.\nThis section covers: HIP Initiated linking Notification to Mobile Discovery \u0026 Link ","description":"","tags":null,"title":"Link Care Context","uri":"/abdm-docs/3-milestone2/link-care-context/index.html"},{"content":"Functionalities to be supported as part of Milestone 2:\nLink health records with ABHA address\nAllow users to discover their health records Save user consents\nShare health records after verifying consent M2 Test Cases mapping by Role Applicable To HMIS / LMIS (PVT) Govt. Health App Health Record Formats Mandatory Mandatory Understand Care Context Mandatory Mandatory Link Care Context HIP Initiated Linking Mandatory Mandatory Notification to Mobile Mandatory Mandatory Discovery \u0026 Linking Mandatory Mandatory Understanding Consents Mandatory Mandatory Store Consent Artefacts Mandatory Mandatory Request Health Records Mandatory Mandatory Packaging Health Data Mandatory Mandatory Encryption \u0026 Decryption Mandatory Mandatory Transferring Health Data Mandatory Mandatory This section covers: Health Record formats Understanding care context Linking care context HIP initiated linking Notification to mobile Discovery \u0026 Link Understanding Consents Storing consent notifications Request for Health Records Packaging Health Data Transferring Health Data ","description":"","tags":null,"title":"Milestone 2","uri":"/abdm-docs/3-milestone2/index.html"},{"content":"By OTP Applicable To HMIS / LMIS (PVT) Government Health App By OTP Mandatory Mandatory Functionality Overview When user visits the hospital, and shares ABHA address with Hospital staff. The staff verifies it with OTP on the mobile number attached to that ABHA address.\nSteps to initiate verification of ABHA Address by OTP:\nPatient must have a valid ABHA address. Patient verbally shares the ABHA address to the health facility during registration. Facility initiates a mobile OTP authentication for this ABHA address. Then patient will receive an OTP on their mobile, which they must share with the operator. The facility sends the OTP to the HIE-CM. On successful validations it gets the demographic details of the user and a new linking token. The HRP software must store this access (linking) token in their system for the purpose of linking care contexts to the patient. Test Cases Functionality Test Case Steps to execute Mandatory ABHA Verification Using Mobile Number and Mobile OTP (VRFY_ABHA_401) System must allow ABHA retrieval and verification using communication mobile number and OTP 1. Share Mobile Number. 2. Receive OTP on Mobile Number. 3. Enter OTP. 4. Get list of ABHA Numbers linked to the Mobile Number. 5. Select one ABHA Number API Sequence Diagram %%{init:{\"fontSize\": \"1.0rem\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram title Verify User's ABHA Address by User shared OTP actor User User--\u003e\u003eHIP/HRP:Shares the ABHA Address and preferred auth Mode HIP/HRP-\u003e\u003eHIE-CM:/v0.5/users/auth/init Auth mode MOBILE_OTP activate HIE-CM HIE-CM--\u003e\u003eUser:Sends OTP HIE-CM-\u003e\u003eHIP/HRP:/v0.5/users/auth/on-init activate User User--\u003e\u003eHIP/HRP:Shares the received OTP activate HIP/HRP HIP/HRP-\u003e\u003eHIE-CM: /v0.5/users/auth/confirm with OTP HIE-CM-\u003e\u003eHIP/HRP:/v0.5/users/auth/on-confirm note left of HIE-CM:Shares a new auth.accessToken for Linking API Information Request Response 1. Get a patient’s authentication modes\nURL: https://dev.abdm.gov.in/gateway/\n2. Accept callback with supported authentication modes for this PHR Address\nURL: Callback URL registered by HRP\n3. Initialize authentication from HIP\nURL: https://dev.abdm.gov.in/gateway/\n4. Response to user authentication initialization\nURL: Callback URL registered by HRP\nUser will get a SMS on their mobile phone with a OTP from the HIE-CM. Collect this OTP from the user and send it via the next API\n5. Confirmation request by sending token, otp\nURL: https://dev.abdm.gov.in/gateway/\nEnsure the transaction ID is the same as obtained in the on-init callback\n6. Callback from HIE-CM with KYC and Token information\nURL: Callback URL registered by HRP\n","description":"","tags":null,"title":"By OTP","uri":"/abdm-docs/2-milestone1/verify-abha-address/by-otp/index.html"},{"content":"Using Aadhar Demographic Applicable To HMIS / LMIS (PVT) Government Health App Using Aadhar Demographic Not Applicable Mandatory Functional Overview Aadhaar Demographic authentication allows creation of a new ABHA number or retrieval of an existing ABHA number, given the Aadhaar number and Demographic details as per Aadhaar. This API is also useful for offline scenarios as the healthcare worker can capture the Aadhaar details when there is no connectivity and generate the ABHA number once connectivity is available.\nApplications used by health workers (like ASHA, ANM, CHO) must support this API.\nHealth worker is expected to capture the Aadhaar number, name, year of birth and gender as in Aadhaar card. These details can be physically captured on paper or in mobile application which works in offline mode as well. Consent of the user must always be obtained (in paper or offline apps) in the recommended language. When connectivity is available, the application calls the ABHA demographic API with the Aadhaar number, name, year of birth and gender information. The ABHA system checks with UIDAI if the information provided is correct. The ABHA system also checks if an ABHA number has already been created in the past. The system returns the ABHA number (New or Existing). When calling this API, care must be taken to ensure:\nThe correct state and district (LGD codes) of the beneficiary are passed. The mobile number that is passed is assumed to be verified by the application and is not re-verified by ABHA. Any ID being issed by the public health program (eg: PMJAY id, CoWin id, RCH Id) can be linked to the ABHA number The ABDM client id used to call this API must have the HidIntegratedProgram role assigned. (This is required in both Sandbox \u0026 Production) Note, the Aadhaar number can be stored locally in the device only when the device is in offline mode. The Aadhaar number must be discarded once the ABHA api has been called to ensure compliance with Aadhaar regulations. Test Cases Note: ABHA creation through Demographic Auth/ Offline mode is currently available only for Government entities\nFunctionality Test Case Steps to Execute Mandatory Create ABHA Option (CRT_ABHA_301) The system must provide an option to create ABHA through Aadhaar Demographic/ Offline Mode Mandatory Consent collection (CRT_ABHA_302) The system must display the consent language/ disclaimer language and collect user’s consent as per the ABDM published consent. 1. Read consent language. 2. Agree to the consent language (through ‘I agree’ checkbox or any other form of signature) Optional Consent collection should be multilingual (CRT_ABHA_303) The system should be able to provide the consent in languages other than English also 1. Read consent language. 2. Agree to the consent language (through ‘I agree’ checkbox or any other form of signature) Optional Aadhaar collection and Error Message (CRT_ABHA_304) System must allow the user to enter Aadhaar Number and the system will display an error message for invalid Aadhaar Number Enter Aadhaar number Optional Demographic Information based authentication (CRT_ABHA_305) System must verify the demographic information of the user against their Aadhaar Enter name, date of birth and gender as per Aadhaar Optional Profile Completion (CRT_ABHA_306) System should accepts user’s profile information - state, district, photo and mobile number 1. System auto-populates State,district information. 2. Verifies State and District information and enters Photo and mobile number Optional Display of ABHA Number (CRT_ABHA_307) System must display the created ABHA Number System shows the 14-digit ABHA number and ABHA address generated Optional View and Download ABHA details. (If integrators is generating ABHA card) (CRT_ABHA_308) System must have a provision to View / Download ABHA card 1. System should show the user their ABHA Card. 2. ABHA Card should be generated by API and should contain: ABHA Number (Mandatory), User Photo(Optional), ABHA QR code, date of birth and gender, ABHA Address Optional View and Download ABHA details. (If integrators is not generating ABHA card) (CRT_ABHA_309) If Integrator is not generating ABHA card. If Integrator is not generating ABHA card then They print the mentioned information on their own card: ABHA Number (Mandatory), ABHA Address API Sequence Diagram The sequence of APIs used via this method are shown in the diagram below:\n%%{init:{\"fontSize\": \"1.0rem\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram title Create ABHA Address using Demographic details (Offline) Government Health Application (HIP)-\u003e\u003eABHA:/v1/hid/benefit/createHealthId/demo/auth ABHA-\u003e\u003eUIDAI:Requests for verification of details UIDAI-\u003e\u003eUIDAI:Details verified UIDAI-\u003e\u003eABHA:Verifies user Note over ABHA:Checks if there’s an existing ABHA ABHA-\u003e\u003eGovernment Health Application (HIP): 200 Returns ABHA Address Note right of Government Health Application (HIP):Returns already created ABHA or creates new ABHA See the roles assigned to your Client ID If you dont see the HidIntegratedProgram role write to integration.support@nha.gov.in via your state ABDM nodal officer Request for addition of the HidIntegratedProgram role to your client id Request NHA to configure a benefit name specific to your government program API Information Request Response Note Kindly check the schema tab for the list of mandatory \u0026 optional fields in request body.\n1. Create or Get ABHA Number using Aadhaar Demo Auth.\nBASE URL: https://healthidsbx.abdm.gov.in/api\n2. Update ABHA Number Information\nBASE URL: https://healthidsbx.abdm.gov.in/api\n","description":"","tags":null,"title":"Using Aadhar Demographic","uri":"/abdm-docs/2-milestone1/abha-number/aadhar-demographic/index.html"},{"content":"Using Mobile Number Applicable To HMIS / LMIS (PVT) Government Health App Using Mobile Number Optional Optional Functionality Overview Description: Individual enters mobile number/email ID, and it is validated via the added mode of validation\nCreate an ABHA address of the format abc@abdm via mobile number / email ID using self-declared profile information filled in by an individual, such as photo, name, date of birth, gender, address. Mobile number is entered in profile info, in case a user is registering through mobile number and email ID is entered in profile info, in case a user is registering through email ID. Individual creates an easy to remember ABHA Address along with its password to login Profile is completed with an ABHA Address and a QR Code (with self-declared information filled in) This is a way of ABHA Address Registration with self-declared information ABHA Address Policy\nABHA Address Policy:\nMinimum length is 4 including the allowed alphabet, number \u0026 dot(.) Cannot begin with the Number Cannot begin or end with dot(.) As a policy we allow creation of all numeric Abha addresses for Abha Number only: 14digit@abdm. 10-digit Mobile number as ABHA Address:\nFor now, we have restricted the creation of (10 digit) MobileNumber@abdm Creation of (14 digit@abdm):\nABHA Address is not allowed however we have the provision for the user to login with same 14digit@abdm both in web PHR and mobile PHR. Password validation :\nThis has been made optional. You may kindly check the below APIs at your end and reach out to us in case of any issues: Registration via ABHA: /api/v1/phr/registration/hid/create-phr-address Registration via Mobile and Email: /api/v1/phr/registration/create/phr Test Cases Using Mobile Number - Registration Flow : ABHA address creation with mobile number flow (Self Declared Flow - without KYC)\nS.No Functionality Test Scenario Steps To Be Executed 1 Mandatory Click on “Register” to create a new ABHA address 2 Mandatory Select the Mobile Number option to create ABHA address via mobile number and click on “Continue” button 3 Mandatory Enter the mobile number and click on “Continue” button 4 Mandatory Validate mobile OTP received on entered mobile number Check if an individual receives mobile OTP to validate mobile number 5 Mandatory Resend mobile OTP after 60 seconds post clicking on “Resend OTP Check if an individual receive mobile OTP after 60 seconds and an individual is able to validate mobile number 6 Mandatory Display ABHA addresses linked with entered validated mobile number. So that an individual can select an ABHA address in which one wishes to login. Check if all ABHA addresses linked to mobile number are displayed to select any one and login in PHR application 7 Mandatory Click on “Still want to create a new ABHA address” for creation of a new ABHA address 8 Mandatory Fill following profile details such as: • First Name • Middle Name • Last Name • Date of Birth - Day, Month and Year • Gender • Email ID • Address • State • District • Pin Code Mandatory fields: • First Name • Year (within Date of Birth) • Gender • Address • State • District • Pin Code. And Optional fields: • Middle Name • Last Name • Day (within Date of Birth) • Month (within Date of Birth) • Email ID 9 Mandatory Click on checkbox beside “User Information Agreement” to voluntarily share profile details with NHA for creating ABHA address and click on “Continue” button Check if check box is selected beside user information agreement before clicking on “continue” button . 10 Mandatory Create ABHA address as per ABHA address policy. ABHA address policy: Minimum length 4 including alphabet, number \u0026 dot (.) are allowed. Number cannot be in beginning and dot (.) cannot be in beginning \u0026 end. Check that adherence to ABHA address policy is must to create ABHA address. 11 Optional Suggestions to create ABHA address as per an individual’s name \u0026 username of e-mail ID needs to be displayed while creating it. Check if suggestions of ABHA address are displayed while creating it. Display “already taken” if entered ABHA address is already created by some other individual. Because no two ABHA address can be same. 12 Mandatory Create password, confirm password and click on “Submit” button. Password needs to be created as per password policy. Password policy: 8 characters or longer, one A-Z, one a-z, one 0-9, atleast one symbol, no space and not more than 2 consecutive characters or keyboard keys. Check that adherence to password policy is must to create ABHA address. 13 Mandatory Congratulation Screen is displayed stating “Congratulations! ABHA address is created successfully \" and click on “Login” button Check that congratulations message is displayed after creating ABHA address \u0026 password. Also, an individual should able to login with updated ABHA address and password. 14 Mandatory Provide Consent after clicking on login button. Click on “I Agree” against “Personal Data Processing Consent Form”. Post this user is able to successfully Login Check that when an individual login for first time, post agreeing to the “Personal Data Processing Consent Form” an individual is able to login. API Sequnce Diagram %%{init:{\"fontSize\": \"1.0rem\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram autonumber actor User participant HIE-CM note right of User : RSA Encrypted mobile number/Email User-\u003e\u003e+HIE-CM: /api/v1/phr/registration/generate/otp HIE-CM--\u003e\u003e-User: Response: 200 OK note right of User : Generate OTP on given mobile number/email note right of User : Returns transactionId note over User,HIE-CM : Resend OTP note left of HIE-CM : transactionId User-\u003e\u003e+HIE-CM: /api/v1/phr/registration/resend/otp HIE-CM--\u003e\u003e-User: Response: 200 OK note right of User : Resends OTP note right of User : Returns transactionId note left of HIE-CM : transactionId,RSA Encrypted OTP User-\u003e\u003e+HIE-CM: /api/v1/phr/registration/verify/otp HIE-CM--\u003e\u003e-User: Response: 200 OK note right of User : Returns transactionId,mapped PHR Address note left of HIE-CM: Beneficiary data User-\u003e\u003e+HIE-CM: /api/v1/phr/registration/details HIE-CM--\u003e\u003e-User: Response: 200 OK note right of User : Returns transactionId note left of HIE-CM : transactionId User-\u003e\u003e+HIE-CM: /api/v1/phr/registration/phr/suggestion HIE-CM--\u003e\u003e-User: Response: 200 OK note right of User :Returns suggested phrAddresses note left of HIE-CM : PHRAddress User-\u003e\u003e+HIE-CM: /api/v1/phr/search/isExist HIE-CM--\u003e\u003e-User: Response: 200 OK note right of User :Return PHR ADDRESS exist or not note left of HIE-CM : transactionId,PHRAddress,RSA Encrypted password User-\u003e\u003e+HIE-CM: /api/v1/phr/registration/create/phr HIE-CM--\u003e\u003e-User: Response: 200 OK note right of User :Returns user token id API Information Request Response Utilities\nFor encrypting the mobileNumber/AadharNumber/otp refer the link\nTo get public key for encryption refer the link For converting an image into Base64 string refer the link\n1. Generate OTP\nApi accepts Mobile Number/Email and then generates OTP for it.\nBASE URL: https://phrsbx.abdm.gov.in\n2. Resend OTP\nApi accepts Transaction Number and then resends OTP for it.\nBASE URL: https://phrsbx.abdm.gov.in\n3. Validate OTP\nAPI to verify the Mobile OTP\nBASE URL: https://phrsbx.abdm.gov.in\n4. Pass the Beneficiary Details\nAPI to pass the beneficiary details, so based on the details, suggestions of PHR Addresses can be obtained\nBASE URL: https://phrsbx.abdm.gov.in\n5. Generate Suggestions\nAPI to generate list phrAddresses as suggestions\nBASE URL: https://phrsbx.abdm.gov.in\n6. Check PHR Address Already Exists\nAPI to check the PHR Address exist or not\nBASE URL: https://phrsbx.abdm.gov.in\n7. Register the Beneficiary\nRegister the beneficiary to the PHR using the Mobile/Email Address\nBASE URL: https://phrsbx.abdm.gov.in\n","description":"","tags":null,"title":"Using Mobile Number","uri":"/abdm-docs/5-building-a-phr-app/create-abha-address/mobile-no/index.html"},{"content":"The ABDM sandbox is open to everyone including individuals. You use the sandbox environment to integrate your application and make sure it is compliant to the ABDM requirements. Access to ABDM production APIs requires you to exit the sandbox post integration.\nUser Manual for Sandbox Sign Up Step 1:\nStart by registering yourself on ABDM Sandbox at the below URL . Refer here for signup details. https://sandbox.abdm.gov.in/applications/Home/signup_form\nStep 2:\nYour application will be reviewed by the Sandbox Committee. The Committee will approve or reject with remarks.\nNote: The committee currently meets only once a week. Hence, please expect minimum of 7 days turnaround time for approval.\nhttps://sandbox.ndhm.gov.in/applications/Home/admin\nUser Activity with new application: Step 1: Signup using the below URL as Company or Individuals per requirement. https://sandbox.ndhm.gov.in/applications/Home/signup_form\nSelect appropriate Entity, Type of Application, Category value.\nRegistered/License to operate in India: Select Yes if a license is from India otherwise select No then the committee will decide on a case-to-case basis.\nIf your application creates health records that need to be shared with a user, select HIP \u0026 HRP. if your application would like to access health records linked with a user select HRP \u0026 HIU. If your application will act as consumer application that will help users to view records, manage consents, etc select HIU, HRP, Health Locker \u0026 PHR App. Try to select the appropriate Intent For Request as per your understanding. In case, you are unsure, Don’t worry this can changed later.\nStep 2: Click on Submit Button\nURL: https://sandbox.abdm.gov.in/applications/Home/signup_form\n","description":"","tags":null,"title":"ABDM Sandbox Signup","uri":"/abdm-docs/1-basics/abdm_sandbox_signup/index.html"},{"content":"HIE-CM yaml Swagger for HIE-CM APIs ","description":"","tags":null,"title":"HIE-CM APIs","uri":"/abdm-docs/12-swagger/phr-address-apis/hie-cm_apis/index.html"},{"content":"HIP yaml Complete Swagger for HIP APIs ","description":"","tags":null,"title":"V0.5 APIs","uri":"/abdm-docs/12-swagger/hip_hrp/v0_5_apis/index.html"},{"content":"ABHA Numbers V3 yaml Swagger for ABHA Enrollment ","description":"","tags":null,"title":"V3","uri":"/abdm-docs/12-swagger/abha_number_apis/v3/index.html"},{"content":"How to test the Health Repositories Please note: UI mockups in section are for illustrative purposes only and meant to provide general guidelines. Actual UI on application might be different or more refined.\nHIU doctors can view patient’s health data only when your system is integrated with the health repository. To check if your HIP bridge is built properly and can be linked by a user, perform the following tasks:\nStep 1: Download the consent manager app (Action by test patient)\nDownload the APK from the following link and install it on your phone. Download .apk file. If you don’t have an android phone, then use an emulator to run the consent manager app. Step 2: Create a consent manager account (Action by test patient)\nOpen the downloaded application and click on the Register button. Enter the mobile number of the test patient, as assigned to one of the test patients in your system. Ensure you have access to this number, in order to receive and share the OTP for further steps. Enter the OTP received on the mobile number, and proceed with the next step upon successful validation. Enter details such as the test patient’s name, gender and year of birth. Create a Consent Manager ID (CM ID) and set a password to the account to register into the system. After successful registration, make a note of the CM ID; you will need it for creating a consent request. Step 3: Discover and link (Action by test patient)\nAfter registering as a consent manager, click on the + sign to begin looking for your patient records and to link to the facilities available. Search for the HIP that you represent, for example, the name of the hospital to which you belong. If you do not find it in the system, then the integration is not done. Search for the test patient’s records in the system. You will see the care context information provided by your HIP against the test patient’s mobile number, viz., name, year of birth and gender. Link to the care context; your HIP will send out an OTP to the test patient’s mobile number. Enter the OTP; after successful validation, you’ll be able to successfully link the patient’s record and care context to the CM ID. Step 4: Create a consent request (Action as HIU)\nOpen the HIU application on your mobile phone. Login with your credentials. You will find the credentials in the email sent to you by the ABDM support team. If you don’t have login credentials, Send a Request to Integrate Your Test Environment. NHA will revert along with your login credentials. Click on the consent request and provide the patient’s CM ID. Search for the CM ID within the system. Select a purpose for creating a consent request from the options displayed. Select a HI (Health Information) date range for which the test patient has records in the system. Select the HI types from the list displayed, for all the data present in your test environment for the test patient. Set an expiry date for the consent request; you will be able to access test patient data only until the date of expiry. Step 5: Grant the consent request (Action by test patient)\nOpen the Consent Manager app again and navigate to the consent requests tab. You will see the consent request which you created in the previous step. To grant the consent request, create a consent PIN. Confirm it; after successful PIN validation, the consent will be granted. Step 6: View the data in the HIU after user grants the consent request (Action as HIU)\nLogin into the HIU application again. Search for the consent request you created previously and click on it. You should be able to see the data sent by HIP for the test patient. ","description":"","tags":null,"title":"Testing Health Repositories","uri":"/abdm-docs/3-milestone2/packaging-health-data/testing/index.html"},{"content":"Scan and Share Functionality Overview Every PHR Application needs to provide the ability for their users to scan a Health Facility QR code; and share their ABHA address, profile information with health facilities.\nThe App must be able to integrate with the phone camera and read the content of QR Code. The App must also support an intent where it must directly go to the sharing page, if the QR code was scanned with a different camera. The content of the QR code is a URL (sample for reference: https://phrsbx.abdm.gov.in/share-profile?hip-id=IN3410000260\u0026counter-id=12345) that contains 2 parameters: The HIP ID Facility defined context (for example: counter code) Once the QR code has been scanned, the PHR App must present to the user all the information that will be shared and obtain a consent with the ABDM specified language. The consent says “You agree to share your ABHA Address and profile information with this facility for the purpose of registration and the facility can link any health records generated by….” (take reference from the screenshot attached) Once the user consents, the PHR App can call the HIE-CM API to share the details with the health facility. The Health facility is currently expected to respond within 30 seconds. The facility can optionally share a token number. The PHR app must display a token number and not allow the user to generate a second token number for the next 30 minutes. Test Cases Scan and Share - Scan the QR code to share information.\nScan QR Code at the ABDM compliant health facility to get token number for better queue management and completing faster patient registration.\nThere are 2 use-cases here: 1. Use-case 1: Patients can scan the Health Facility QR Code using any PHR application\nS.No Functionality Test Scenario Steps To Be Executed 1. Mandatory Scan Health QR Code using PHR App Use-case 1 - Patient can scan the QR Code using any PHR app such as ABHA mobile app Check that, patient is able to login to any PHR app such as ABHA mobile app. 2. Mandatory Scan Health QR Code using PHR App Use-case 1 - Patient can scan the QR Code using any PHR app such as ABHA mobile app Check that patient is able to click on “QR Code icon” and scan the QR Code at ABDM compliant health facility. 3. Mandatory Scan Health QR Code using PHR App Use-case 1 - Patient can scan the QR Code using any PHR app such as ABHA mobile app Check that, post clicking on share button, patient profile details are successfully shared to the HMIS side with consent of the patient. 4. Mandatory Scan Health QR Code using PHR App Use-case 1 - Patient can scan the QR Code using any PHR app such as ABHA mobile app Check thatnotification is displayed for patient to know that profile details are successfully shared with the hospital and token number is also displayed. 5. Mandatory Scan Health QR Code using PHR App Use-case 1 - Patient can scan the QR Code using any PHR app such as ABHA mobile app Check that post click on “OK” button, token number is displayed and it is valid for next 30 minutes. This time duration is configurable. 2. Use-Case 2: Scan the QR Code through third party scanner / phone camera\nS.No Functionality Test Scenario Steps To Be Executed 1. Mandatory Scan Health QR Code using 3rd party camera ABDM compliant PHR application is already installed in patient’s mobile and patient is already logged on in the PHR app Check that, QR Code is scanned using phone camera or any 3rd party QR scanner 2. Mandatory Scan Health QR Code using 3rd party camera ABDM compliant PHR application is already installed in patient’s mobile and patient is already logged on in the PHR app Check that installed ABDM Compliant PHR apps and browser is displayed. Patient can click on chrome browser to open the user initiated deep link web page to see the complete listing of ABDM compliant PHR apps. 3. Mandatory Scan Health QR Code using 3rd party camera ABDM compliant PHR application is already installed in patient’s mobile and patient is already logged on in the PHR app Check that post clicking on any one of the PHR apps, patient is redirected to share profile page of PHR app as patient is logged-in to the PHR app 4. Mandatory Scan Health QR Code using 3rd party camera ABDM compliant PHR application is already installed in patient’s mobile and patient is already logged on in the PHR app Check that post clicking on share button, patient profile details are successfully shared to the HMIS side with consent of the patient. 5. Mandatory Scan Health QR Code using 3rd party camera ABDM compliant PHR application is already installed in patient’s mobile and patient is already logged on in the PHR app Check that notification is displayed, that the profile details are shared with the hospital and token number is also displayed. 6. Mandatory Scan Health QR Code using 3rd party camera ABDM compliant PHR application is already installed in patient’s mobile and patient is already logged on in the PHR app Check that post click on “OK” button, token number is displayed and it is valid for next 30 minutes. This time duration is configurable. 7. Mandatory Scan Health QR Code using 3rd party camera ABDM compliant PHR application is already installed in patient’s mobile but patient is not logged on in the PHR app Check QR Code can be scanned using phone camera or any 3rd party QR scanner. 8. Mandatory Scan Health QR Code using 3rd party camera ABDM compliant PHR application is already installed in patient’s mobile but patient is not logged on in the PHR app Check that installed ABDM Compliant PHR apps and browser is displayed. Patient can click on chrome browser to open the user initiated deep link web page to see the complete listing of ABDM compliant PHR apps. 9. Mandatory Scan Health QR Code using 3rd party camera ABDM compliant PHR application is already installed in patient’s mobile but patient is not logged on in the PHR app Post clicking on any one of the PHR apps, patient is redirected to login page of PHR app as patient is not logged-in to the PHR app 10. Mandatory Scan Health QR Code using 3rd party camera ABDM compliant PHR application is already installed in patient’s mobile but patient is not logged on in the PHR app Check that post successful login, patient is redirected to share profile page of PHR app. 11. Mandatory Scan Health QR Code using 3rd party camera ABDM compliant PHR application is already installed in patient’s mobile but patient is not logged on in the PHR app Check that post clicking on share button, patient profile details are successfully shared to the HMIS side with consent of the patient. 12. Mandatory Scan Health QR Code using 3rd party camera ABDM compliant PHR application is already installed in patient’s mobile but patient is not logged on in the PHR app Check that notification is displayed, that the profile details are shared with the hospital and token number is also displayed. 13. Mandatory Scan Health QR Code using 3rd party camera ABDM compliant PHR application is already installed in patient’s mobile but patient is not logged on in the PHR app Check that post click on “OK” button, token number is displayed and it is valid for next 30 minutes. This time duration is configurable. 14. Mandatory Scan Health QR Code using 3rd party camera No ABDM compliant PHR application is installed in patient’s mobile device. Check that QR Code can be scanned using phone camera or any 3rd party QR scanner 15. Mandatory Scan Health QR Code using 3rd party camera No ABDM compliant PHR application is installed in patient’s mobile device. Check that User Initiated Deep Link Web Page opens, and patient can see the complete listing of ABDM compliant PHR apps. 16. Mandatory Scan Health QR Code using 3rd party camera No ABDM compliant PHR application is installed in patient’s mobile device. Check that once patient selects any one of the PHR app, he/she is redirected to Google Play Store / app store to download / install the selected mobile PHR app 17. Mandatory Scan Health QR Code using 3rd party camera No ABDM compliant PHR application is installed in patient’s mobile device. Check that, selected PHR app is launched after installation and patient will create ABHA address and password Sample User Experience Img1\nImg2\nImg3\nImg4\nAPI Sequence Diagram v1 APIs %%{init:{\"fontSize\": \"1.0rem\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram title Scan and Share with v1 APIs PHR App-\u003e\u003eHIE-CM: Shares profile \u003cbr/\u003e POST/v1/patients/profile/share v3 APIs %%{init:{\"fontSize\": \"1.0rem\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram title Scan and Share with v3 APIs PHR App-\u003e\u003eHIE-CM: Shares profile request \u003cbr/\u003e POST/v3/patient/profile/share HIE-CM-\u003e\u003ePHR App: POST/v3/patient/profile/on-share API Information Request Response V1 APIs 1. Share Details\nBASE URLs: https://dev.abdm.gov.in/cm\nV3 APIs 2. Share Patient/User Profile\nBASE URLs: https://dev.abdm.gov.in/hiecm/api\n2. Share the Response\nBASE URLs: https://your-hrp-server.com\n","description":"","tags":null,"title":"Scan \u0026 Share","uri":"/abdm-docs/5-building-a-phr-app/scan-share/index.html"},{"content":"Understanding Consents ABDM design is aligned with India’s Personal Data Protection Bill, that is the exchange of health data can only happen with the consent of the User.\nThe entity requesting access to the data (HIU), needs to provide the following information:\nThe purpose for which they want access to data The historical time period of health data The type of health records How long they wish to keep the copy of the data ABDM uses an electronic consent artefact based on MEITY’s electronic consent framework to allow HIUs to specify their consent request.\nUsers can modify any of the request consent parameters, and provide a consent approval that suits them.\nUsers have the option to revoke the consent they have provided to the HIU, at any time. The HIU must remove any copy of the user’s data when the consent is revoked.\nAll HIPs who are holding any data associated with this consent are notified. They must save a copy of the consent artefact in their system. Data can be shared against this consent any number of times till the consent expires / is revoked by the user. Making a consent request (as HIU) HIU can create a request to obtain a patient’s consent to access his/her health information, as follows:\nAs a HIU, you will need to log in to sandbox’s reference doctor’s interface with login credentials (this will be sent to you via email). If you don’t have your login credentials, send a request to integrate your test environment to NHA. NHA will respond along with your login credentials. After logging in, you can create the consent request by providing the following details: User’s consent manager ID Purpose of your consent request Details of who is requesting the health information The time period for which you require the patient’s health documents. This information will enable your HIP to share the patient’s health documents relevant to the required time period. Provide a list of the health information types for which you’re requesting, such as clinical notes, examination data and so forth. Your consent request as HIU comes with a consent expiry time, after which you will not be able to access the patient’s data. Receiving a consent artefact (as HIP) The HIP receives the consent artefact after patients grants a request. The consent artefact lets the HIP know what data needs to be shared, as detailed below:\nPatient’s consent manager ID Purpose of data access consent Details of who is requesting the health information and of whom Health information types. The HIP needs to maintain details of what has been requested and what has been sent, as detailed in the following table:\nWhat is requested? What needs to be sent? Prescription Medication that the doctor advised Diagnostic Report Diagnostic Report that was created following a test/procedure OP Consultation Out Patient Consultation Document which may include complaints, prescription, observations, follow ups, appointments, test reports etc Discharge Summary Discharge Summary document which may include conditions, medications, observations, procedure done, discharge note, treatment plan etc Immunization Record Immunization records with any additional documents such as vaccine certificate, the next immunization recommendations, etc. Record artifact Unstructured historical health records as a single or multiple Health Record Documents generally uploaded by the patients through the Health Locker and can be shared across the health ecosystem. Wellness Record Regular wellness information of patients typically through the Patient Health Record (ABHA) application covering clinical information such as vitals, physical examination, general wellness, women wellness, etc. Note: For detailed information on what information can be sent for a requested HI Type, please refer to the Data Format Specifications\nThe consent request is time-bound, after time is elapsed the HIU cannot view the data once the user has granted and HIP should check this date before sending any data. Meta Codes While requesting and exchanging health information, there are few meta codes that are relevant to you if you are a HIU or HIP.\nPurpose of Use - defines what is the purpose of use of the health information that a HIU is requesting for. The following are subset from http://terminology.hl7.org/ValueSet/v3-PurposeOfUse\nCode Display Description CAREMGT Care Management BTG Break the Glass Only applicable in extreme circumstances as override or provision of immediately needed health care for an emergent condition PUBHLTH Public Health HPAYMT Healthcare Payment Typically for payers conducting financial or contractual activities related to payment for provision of health care DSRCH Disease Specific Healthcare Research PATRQT Self Requested Only applicable if patient himself/herself is requesting information JSON Structure of Consents Request data with signed consent { \"requestId\": \"5f7a535d-a3fd-416b-b069-c97d021fbacd\", \"timestamp\": \"1970-01-01T00:00:00.000Z\", \"notification\": { \"status\": \"GRANTED\", \"consentId\": \"1876f69b-c9c0-4000-88a4-01933ae7df01\", \"consentDetail\": { \"schemaVersion\": \"\", \"consentId\": \"1876f69b-c9c0-4000-85e5-f8d1a5f1a701\", \"createdAt\": \"1970-01-01T00:00:00.000Z\", \"patient\": { \"id\": \"hinapatel79@ndhm\" }, \"careContexts\": [ { \"patientReference\": \"hinapatel79@hospital\", \"careContextReference\": \"Episode1\" } ], \"purpose\": { \"text\": \"string\", \"code\": \"string\", \"refUri\": \"http://example.com\" }, \"hip\": { \"id\": \"string\", \"name\": \"TESI-HIP\" }, \"consentManager\": { \"id\": \"string\" }, \"hiTypes\": [ \"OPConsultation\" ], \"permission\": { \"accessMode\": \"VIEW\", \"dateRange\": { \"from\": \"1970-01-01T00:00:00.000Z\", \"to\": \"1970-01-01T00:00:00.000Z\" }, \"dataEraseAt\": \"1970-01-01T00:00:00.000Z\", \"frequency\": { \"unit\": \"HOUR\", \"value\": 0, \"repeats\": 0 } } }, \"signature\": \"Signature of CM as defined in W3C standards; Base64 encoded\", \"grantAcknowledgement\": false } } Sends consent request { \"requestId\": \"499a5a4a-7dda-4f20-9b67-e24589627061\", \"timestamp\": \"1970-01-01T00:00:00.000Z\", \"consent\": { \"purpose\": { \"text\": \"string\", \"code\": \"string\", \"refUri\": \"http://example.com\" }, \"patient\": { \"id\": \"hinapatel@ndhm\" }, \"hip\": { \"id\": \"string\" }, \"careContexts\": [ { \"patientReference\": \"batman@tmh\", \"careContextReference\": \"Episode1\" } ], \"hiu\": { \"id\": \"string\" }, \"requester\": { \"name\": \"Dr. Manju\", \"identifier\": { \"type\": \"REGNO\", \"value\": \"MH1001\", \"system\": \"https://www.mciindia.org\" } }, \"hiTypes\": [ \"OPConsultation\" ], \"permission\": { \"accessMode\": \"VIEW\", \"dateRange\": { \"from\": \"1970-01-01T00:00:00.000Z\", \"to\": \"1970-01-01T00:00:00.000Z\" }, \"dataEraseAt\": \"1970-01-01T00:00:00.000Z\", \"frequency\": { \"unit\": \"HOUR\", \"value\": 0, \"repeats\": 0 } } } } Notification of consent grant { \"requestId\": \"5f7a535d-a3fd-416b-b069-c97d021fbacd\", \"timestamp\": \"1970-01-01T00:00:00.000Z\", \"notification\": { \"status\": \"GRANTED\", \"consentId\": \"1876f659-bb20-4000-88dc-b45f97252901\", \"consentDetail\": { \"schemaVersion\": \"\", \"consentId\": \"1876f659-bb20-4000-83ff-489361a4bd01\", \"createdAt\": \"1970-01-01T00:00:00.000Z\", \"patient\": { \"id\": \"hinapatel79@ndhm\" }, \"careContexts\": [ { \"patientReference\": \"hinapatel79@hospital\", \"careContextReference\": \"Episode1\" } ], \"purpose\": { \"text\": \"string\", \"code\": \"string\", \"refUri\": \"http://example.com\" }, \"hip\": { \"id\": \"string\", \"name\": \"TESI-HIP\" }, \"consentManager\": { \"id\": \"string\" }, \"hiTypes\": [ \"OPConsultation\" ], \"permission\": { \"accessMode\": \"VIEW\", \"dateRange\": { \"from\": \"1970-01-01T00:00:00.000Z\", \"to\": \"1970-01-01T00:00:00.000Z\" }, \"dataEraseAt\": \"1970-01-01T00:00:00.000Z\", \"frequency\": { \"unit\": \"HOUR\", \"value\": 0, \"repeats\": 0 } } }, \"signature\": \"Signature of CM as defined in W3C standards; Base64 encoded\", \"grantAcknowledgement\": false } } ","description":"","tags":null,"title":"Understanding Consents","uri":"/abdm-docs/3-milestone2/understanding-consents/index.html"},{"content":"Get Milestone 3 Certified Functionalities of Milestone 3: Developing Health Information User (HIU) services to provide view of patient’s medical history to authorized healthcare workers with complete consent.\nMilestone 3 revolves around HIUs, here’s a quick snapshot to understand what functionalities will be covered in this section:\nM3 Test Cases mapping by Role Applicable To HMIS / LMIS (PVT) Govt. Health App Requesting Consent Mandatory Mandatory Storing Consent Artefacts Mandatory Mandatory Getting Health Records Mandatory Mandatory Display Health Records Mandatory Mandatory This section covers: Requesting Consent Storing Consent Artefacts Getting Health Records Display Health Records ","description":"","tags":null,"title":"Milestone 3","uri":"/abdm-docs/4-milestone3/index.html"},{"content":"New vs Returning Patients Applicable To HMIS / LMIS (PVT) Government Health App New vs Returning Patients Mandatory Mandatory Every Health Facility has to deal with both new and returning patients. The process implemented by the HRP should ensure that ABHA address can be verified and linked for both new and returning patients.\nNew Patients For New users, All demographic information saved by the HRP should be exactly the same as in the ABHA Address profile shared by the user.\nReturning Patients Capture the user’s ABHA address and demographic details. Search the HRP system to see if there is an existing patient registration with the same mobile number / name. If an existing patient is found - save the ABHA address against existing patients only if the following condition is met: Mobile number is an exact match Gender is an exact match Age is an exact match or is +/- 2 years Name is a close phonetic match The HRP may also first find a returning patient using a Hosptital MRD Number. In such a case, it is important that the demographic information in the ABHA Address and the information in the HRP is matched to ensure that a incorrect ABHA Address is not linked to any patient.\nIt is recommended that the demographic information in the hospital be updated to the demographic information from the ABHA address for returning patients.\nPatients not sharing ABHA Address Patients may not share their ABHA address at the time of registration because of reasons like:\nThey do not have a ABHA Address or are not aware of ABDM They have an ABHA address but decide not to share it with the health facility This is prefectly valid scenario and ABDM principles are designed such that the users can decide when to join ABDM and collect their records.\nThe HRP software must continue to register patients that do not share their ABHA Address.\n","description":"","tags":null,"title":"New vs Returning Patients","uri":"/abdm-docs/2-milestone1/verify-abha-address/new-vs-returning-patients/index.html"},{"content":"Using ABHA Number Applicable To HMIS / LMIS (PVT) Government Health App Using ABHA Number Optional Optional Functionality Overview Description: Individual enters ABHA address (xyz@abdm), and it is validated depending on auth mode of validation such as mobile OTP/aadhar OTP/email OTP or password to login.\nIn this flow, individual is given an option of creating ABHA address through ABHA (Number) via KYC document. Please note, the list of KYC documents may be revised from time to time. Create an ABHA address of the format abc@abdm via 14-digit ABHA (Number). In this case, profile details like photo, name, date of birth, gender, mobile number, email ID, and address are fetched from the ABHA system. Individual creates an easy to remember ABHA Address along with its password to login Individuals may link/unlink ABHA (Number) with ABHA address as per their choice. ABHA Address Policy\nABHA Address Policy:\nMinimum length is 4 including the allowed alphabet, number \u0026 dot(.) Cannot begin with Number Cannot begin or end with dot(.) As a policy, we allow creation of all numeric ABHA addresses for ABHA Number only: 14digit@abdm. 10-digit Mobile number as ABHA Address:\nFor now, we have restricted the creation of (10 digit) MobileNumber@abdm Creation of (14 digit@abdm):\nABHA Address is not allowed however, we have the provision for the user to login with the same 14digit@abdm both in web PHR and mobile PHR. Password validation :\nThis has been made optional. You may kindly check the below APIs at your end and reach out to us in case of any issues: Registration via ABHA: /api/v1/phr/registration/hid/create-phr-address Registration via Mobile and Email: /api/v1/phr/registration/create/phr Test Cases Using ABHA Number - Registration Flow : ABHA address creation with ABHA number flow (KYC verified flow)\nS.No Functionality Test Scenario Steps To Be Executed 1. Mandatory Click on “Register” to create a new ABHA address 2. Mandatory Select the “ABHA number” option to create ABHA address via ABHA number and click on “Continue” button 3. Mandatory Enter the 14 - digit ABHA number and click on “Continue” button 4. Mandatory Validate ABHA number by entering aadhar OTP/mobile OTP received on mobile number linked with entered ABHA number. Check if an individual receives aadhar OTP/mobile OTP and able to validate the ABHA number. 5. Mandatory Resend aadhar OTP / mobile OTP after 60 seconds. Check if an individual receive aadhar OTP / mobile OTP after 60 seconds and an individual is able to validate the ABHA number by entering the OTP. 6. Mandatory Display ABHA addresses linked with entered validated ABHA number. So that an individul can select an ABHA address in which one wishes to login. Check if all ABHA addresses linked to ABHA number are displayed to select any one and login in PHR app 7. Mandatory Click on “Still want to create a new ABHA address” for creation of a new ABHA address 8. Mandatory Following profile details are auto-populated from ABHA portal: • First Name • Middle Name • Last Name • Date of Birth - Day, Month and Year • Gender • Mobile number • Email ID • Address • State • District • Pin Code Check that all profile details are populated from ABHA side to PHR app. 9. Mandatory Click on checkbox beside “User Information Agreement” to voluntarily share profile details with NHA for creating ABHA address and click on “Continue” button. Check if check box is selected beside user information agreement before clicking on “continue” button . 10. Mandatory Create ABHA address. ABHA address needs to be created as per ABHA address policy. ABHA address policy: Minimum length 4 including alphabet, number \u0026 dot (.) are allowed. Number cannot be in beginning and dot (.) cannot be in beginning \u0026 end. Check that adherence to ABHA address policy is must to create ABHA address. 11. Optional Suggestions to create ABHA address as per an individual’s name \u0026 username of e-mail ID needs to be displayed while creating it. Check if suggestions of ABHA address are displayed while creating it. Display “already taken” if entered ABHA address is already created by some other individual. Because no two ABHA address can be same. 12. Mandatory Create password, confirm password and click on “Submit” button. Password needs to be created as per password policy. Password policy: 8 characters or longer, one A-Z, one a-z, one 0-9, atleast one symbol, no space and not more than 2 consecutive characters or keyboard keys. Check that adherence to password policy is must to create ABHA address. 13. Mandatory Congratulation Screen is displayed stating “Congratulations! ABHA address name@abdm is created successfully \" and click on “Login” button Check that congratulations message is displayed after creating ABHA address \u0026 password. Also, an individual should be able to login with updated ABHA address and password. 14. Mandatory Click on “I Agree” against “Personal Data Processing Consent Form”. Post this user is able to successfully login Check that when an individual login for first time, post agreeing to the “Personal Data Processing Consent Form” an individual is able to login. API Sequnce Diagram %%{init:{\"fontSize\": \"1.0rem\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram autonumber actor User participant HIE-CM note left of HIE-CM : ABHA number User-\u003e\u003e+HIE-CM: /api/v1/phr/registration/hid/search/auth-methods HIE-CM--\u003e\u003e-User: Response: 200 OK note left of HIE-CM : authmethod, ABHA number User-\u003e\u003e+HIE-CM: /api/v1/phr/registration/hid/init/transaction HIE-CM--\u003e\u003e-User: Response: 200 OK note right of User : Returns transactionId note over User,HIE-CM : Resend OTP note left of HIE-CM : transactionId User-\u003e\u003e+HIE-CM: /api/v1/phr/registration/hid/init/resendOtp HIE-CM--\u003e\u003e-User: Response: 200 OK note right of User : Resends OTP note right of User : Returns transactionId note left of HIE-CM : transactionId,RSA Encrypted OTP User-\u003e\u003e+HIE-CM: /api/v1/phr/registration/hid/confirm/credential HIE-CM--\u003e\u003e-User: Response: 200 OK note right of User : Returns transactionId,details of ABHA number note left of HIE-CM : transactionId User-\u003e\u003e+HIE-CM: /api/v1/phr/registration/phr/suggestion HIE-CM--\u003e\u003e-User: Response: 200 OK note right of User :Returns suggested phrAddresses note left of HIE-CM : PHRAddress User-\u003e\u003e+HIE-CM: /api/v1/phr/search/isExist HIE-CM--\u003e\u003e-User: Response: 200 OK note right of User :Return PHR ADDRESS exist or not note left of HIE-CM : transactionId,PHRAddress,RSA Encrypted password User-\u003e\u003e+HIE-CM: /api/v1/phr/registration/hid/create-phr-address HIE-CM--\u003e\u003e-User: Response: 200 OK note right of User :Return user token id API Information Request Response Utilities\nFor encrypting the mobileNumber/AadharNumber/otp refer the link\nTo get public key for encryption refer the link For converting an image into Base64 string refer the link\n1. Search a user by Health ID Number\nApi Checks Health ID Number to find user.\nBASE URL: https://phrsbx.abdm.gov.in\n2. Send OTP\nApi to create the transaction and send the otp on mobile number.\nBASE URL: https://phrsbx.abdm.gov.in\n3. Resend OTP\nAPI to resend the Mobile OTP\nBASE URL: https://phrsbx.abdm.gov.in\n4. Verify OTP\nAPI to verify OTP\nBASE URL: https://phrsbx.abdm.gov.in\n5. Generate Suggestions\nAPI to Generate List phrAddresses as suggestions\nBASE URL: https://phrsbx.abdm.gov.in\n6. Check PHR Address Already Exists\nAPI to check the PHR Address exist or not\nBASE URL: https://phrsbx.abdm.gov.in\n7. Create PHR Address\nBASE URL: https://phrsbx.abdm.gov.in\n","description":"","tags":null,"title":"Using ABHA Number","uri":"/abdm-docs/5-building-a-phr-app/create-abha-address/abha-no/index.html"},{"content":"ABHA Number Creation via Driving Licence Applicable To HMIS / LMIS (PVT) Government Health App Using Driving License Optional Optional Functionality Overview Currently ABDM supports Driving License (DL) for ABHA number generation, apart from Aadhaar.\nThe user is requested for their mobile number.\nAn OTP is sent to the mobile number. Once the OTP is verified, demographic information of the user is captured along with the driving license number.\nFollowing demographic details are expected from the end user\nName as on driving licence Date of birth (DOB) Gender The Driving License (DL) Number and Demographic details provided are matched against the DL database (Sarathi).\nThe Demographic infiormation is also checked against the existing ABHA number database to prevent duplication.\nUsers are requested to upload scanned front and back images of their DL.\nPost submission, an enrollment number is generated. The user has to go to any participating healthcare facility and request for the same to be verified.\nThe Health care workers/Facility Managers are expected to cross check that the submitted DL is of the end user requesting creation of ABHA number\nThey can ensure the same by matching the picture in the uploaded document with the requesting person.\nABHA number creation via Aadhaar is a one step process wherein, ABHA number is created instantaneously based on Aadhaar authentication. However, in case of other ID documents, an enrollment number is generated and requires manual verification from participating healthcare facilities only post which the ABHA no is issued.\nDocuments Required – Since this process is online, the ABHA number registration will not require you to submit any documents physically. However, since the user will have to enter the details and some important information for proper verification, the user will need:\nHis/Her active mobile number\nDriving license number (only for the generation of the enrollment number)\nSample User Experience Site: https://abha.abdm.gov.in/ Test Cases: The following test cases are applicable to All the stakeholders.\nS.No. Functionality Test Case Steps To Be Executed 1 Optional Create ABHA Option (CRT_ABHA_401) The system must provide an option to create ABHA through Driving License / PAN 2 Optional Consent collection (CRT_ABHA_402) The system must display the consent language/ disclaimer language and collect user’s consent as per the ABDM published consent. 1. Read consent language. 2. Agree to the consent language (through ‘I agree’ checkbox or any other form of signature) 3 Optional Consent collection should be multilingual (CRT_ABHA_403) The system should be able to provide the consent in languages other than English also 1. Read consent language. 2. Agree to the consent language (through ‘I agree’ checkbox or any other form of signature) 4 Optional Communication Mobile Number (CRT_ABHA_404) 1. If communication mobile number is same as Aadhaar linked mobile number then it should directly go to ABHA creation screen. 2. Alternatively, Integrators may also prompt for OTP again from the user and then post verification of OTP user can go to ABHA creation screen. System will check entered mobile is same as Aadhaar linked mobile number. If returns true then user will directed to ABHA creation screen. 5 Optional Mobile Number Verification (CRT_ABHA_405) If communication mobile number is not same as Aadhaar linked mobile number then system must ask for the OTP to verify comuncation mobile number. System must verify the mobile number. 1. System must send OTP on mobile number. 2. User enters the OTP and clicks on verify. 3. In case of incorrect OTP 6 Optional Document Verification (CRT_ABHA_406) System must verify the provided document - Driving License / PAN Enter the Driving License / PAN number. 2. Enter name, date of birth and gender as per the document 7 Optional Document Upload (CRT_ABHA_407) System must allow upload of front and back page of the Driving licence/ PAN Upload the front and back page of the document i.e Driving License / PAN. 8 Optional Manual Verification and ABHA Creation (CRT_ABHA_408) System Operator / healthcare worker must manually check the documents - Driving License / PAN A healthcare worker/ system operator manually verifies the Driving License / PAN 9 Optional Display of ABHA Number (CRT_ABHA_409) System must display the created ABHA Number 1. System shows the 14-digit ABHA number and ABHA address generated. 2. The Label should read ABHA Number and not Health ID 10 Optional View and Download ABHA details. (If integrators is generating ABHA card) (CRT_ABHA_410) System must have a provision to View / Download ABHA card 1. System should show the user their ABHA Card. 2. ABHA Card should be generated by API and should contain - ABHA Number (Mandatory), User Photo-Optional, ABHA QR code, date of birth and gender, ABHA Address 11 Optional View and Download ABHA details.(If integrators is not generating ABHA card) (CRT_ABHA_411)\" If Integrator is not generating ABHA card. If Integrator is not generating ABHA card then They print the mentioned information on their own card: ABHA Number (Mandatory), ABHA Address API Sequence The sequence of APIs used via this method are shown in the diagram below:\n%%{init:{\"fontSize\": \"1.0rem\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram participant HIP/HIU/PHR Note right of HIP/HIU/PHR: Generate OTP on given Mobile Number HIP/HIU/PHR-\u003e\u003eABHA:/v3/enrollment/request/otp activate ABHA ABHA--\u003e\u003e HIP/HIU/PHR: Response 200 OK deactivate ABHA Note right of HIP/HIU/PHR: Txn Id HIP/HIU/PHR-\u003e\u003eABHA:/v3/enrollment/auth/byAbdm activate ABHA Note left of ABHA : OTP, Txn Id ABHA--\u003e\u003e HIP/HIU/PHR: Response 200 OK Note right of HIP/HIU/PHR: Returns verified Token deactivate ABHA HIP/HIU/PHR-\u003e\u003eABHA:/v3/enrollment/enrol/byDocument activate ABHA ABHA-\u003e\u003e DL Database: Match Document ID with Name, Gender \u0026 DOB deactivate ABHA DL Database-\u003e\u003eABHA:Information matches Note right of HIP/HIU/PHR: Return Enrollment number to Client API Information Request Response For encrypting the mobileNumber/AadharNumber/otp For converting an image into Base64 string To create Gateway Session Token 1. Request Otp To Mobile\nRefer to example “Request OTP For DL based enrollment”\nBASE URL: https://abhasbx.abdm.gov.in/abha/api\n2. Verify The Mobile\nBASE URL: https://abhasbx.abdm.gov.in/abha/api\n3. Enroll By DrivingLicense\nBASE URL: https://abhasbx.abdm.gov.in/abha/api\nVerification and ABHA number creation: After receiving the enrollment number, the user need to approach any health care facility for verifying the DL and creating the ABHA number . Health centers would verify the provided demographic details (Name, DOB, Gender) against the document. They also check for already created ABHA Number or Enrollment number against the document\n","description":"","tags":null,"title":"Using Driving Licence","uri":"/abdm-docs/2-milestone1/abha-number/driving-license/index.html"},{"content":"Sign in to check application status Step 1: Once the Sandbox request form is submitted, the user can see the application submitted status by login in with Email id and Password.\nhttps://sandbox.ndhm.gov.in/applications/Home/login\nStep 2: On login, Application Submitted status (the current application status) is displayed in green.\nFor additional information on the various application status\nStep 3: Once the application is Approved by the committee, the user will receive an email containing your Client id \u0026 Client Secret. On Frontend, the user will see the status changed to Sandbox Application Status.\nIf the status is approved and you havent received the client secret via email, kindly drop a mail to Integration.support@nha.gov.in. Please note that the committee currently meets once a week and it can take 7 - 10 days for you to get your application approved.\nStep 4: Once Client id \u0026 Client Secret are received via an email, please verify it works by creating a gateway session token.\nCreate Gateway Session Token Server : https://dev.abdm.gov.in/gateway\nVerify using Postman We recommened you get comfortable using POSTMAN to check various ABDM APIs like the sessions API above. Setup Postman , download the ABDM API collection and use POSTMAN to verify your client id and secret is able to generate a session token.\nCheck your JWT token You can use jwt.io to see the contents of your gateway session token (accessToken). Paste the accessToken and see what roles have been assigned to your client id. Some ABDM APIs requires your clientID to have specific roles to assigned. You can mail to Integration.support@nha.gov.in to get specific roles added.\n","description":"","tags":null,"title":"Verify Sandbox Access","uri":"/abdm-docs/1-basics/verify_sandbox_access/index.html"},{"content":"HIU yaml Complete Swagger for HIU APIs ","description":"","tags":null,"title":"HIU APIs","uri":"/abdm-docs/12-swagger/hiu_apis/index.html"},{"content":"PHR app2 yaml Swagger for PHR app2 ","description":"","tags":null,"title":"PHR app2","uri":"/abdm-docs/12-swagger/phr-address-apis/phr-app2/index.html"},{"content":"Link Token yaml Complete Swagger for V3 Link Token APIs ","description":"","tags":null,"title":"V3 Link Token APIs","uri":"/abdm-docs/12-swagger/hip_hrp/v3_linktoken/index.html"},{"content":"Setting up \u0026 Managing Subscriptions Functionality Overview In ABDM, any HIU or PHR Application can subscribe (that will help to watch for changes to PHR address) for notifications to be received on its callback URL whenever there is a change in the care context linked to a ABHA Address.\nEvery PHR App must set up a subscription for the ABHA address:\nWhen it creates ABHA address User logs in with a new ABHA address PHR applications are expected to provide a UI layer where the user can:\nView the list of subscriptions Approve subscriptions Deny subscriptions The PHR app is responsible for showing up notifications on the Mobile application (for example using Firebase in Android).\nNote: Users must be explicitly asked to provide a consent to setup the subscription.\nWhen the user approves the subscription, HIU/PHR App is notified whenever a new care context is linked or updated to the PHR address.\nOnce subscribed, the PHR app will receive notifications in the following events:\nNew care context Modified care context New consent request New subscription request User Experience Img a\nImg b\nImg c\nImg d\nImg e\nImg f\nImg g\nImg h\nTest Cases Tabs in PHR app (My Records/Linked Facility/Subscriptions)\nS.No Functionality Test Case Steps To Be Executed 1 Mandatory “Requests” section in the “Subscriptions” tab of PHR app 1) Requested - Not yet any action is taken by individual on consent request received from HIU to PHR app. All request (consent / subscription / locker) sent by HIU to patiet are seen in “Requested” dropdown within “Requests” section of PHR app 2 Mandatory “Requests” section in the “Subscriptions” tab of PHR app 2) Denied - Individual have “Denied” consent request received from HIU to PHR app. All denied request (consent / subscription / locker) by patient are seen in “Denied” dropdown within “Requests” section of PHR app. 3 Mandatory “Requests” section in the “Subscriptions” tab of PHR app 3) Expired - Requests is expired because patient have not acted on consent request received in PHR app within the time duration set by HIU All expired request (consent / subscription / locker) by patient are seen in “Expired” dropdown within “Requests” section of PHR app. 4 Mandatory “Approved” section in the “Subscriptions” tab of PHR app 1) Granted - Patient had granted the consent request received from HIU to PHR app All granted request (consent / subscription / locker) by patient are seen in “Granted” dropdown within “Approved” section of PHR app. 5 Mandatory “Approved” section in the “Subscriptions” tab of PHR app 2) Revoked - Patient had revoked consent requests after granting it in PHR app. All revoked request (consent / subscription / locker) by patient are seen in “Revoked” dropdown within “Approved” section of PHR app. Edit Subscription Request/Disable auto approval request\nS.No Functionality Test Case Steps To Be Executed 1 Mandatory Edit active subscription request Already granted subscription request can be edited Check if HI types, types of visit and time period can be edited and saved by clicking on “Save Changes” button\" 2 Mandatory Disable auto approval requests Already granted auto approval policy can be disabled Check if already granted auto approval policy for health locker can be disabled by clickicking on “Disable” button. Post disble of auto - approval policy locker request is received from health locker for each record. API Sequence Diagram %%{init:{\"fontSize\": \"1.0rem\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram title Setup Subscriptions HIU (PHR App)-\u003e\u003eHIE-CM:POST /v0.5/subscription-requests/cm/init HIE-CM--\u003e\u003eHIU (PHR App):POST /v0.5/subscription-requests/hiu/on-init HIU (PHR App)-\u003e\u003eHIE-CM:List Subscription Requests \u003cbr/\u003eGET /subscription-requests HIE-CM--\u003e\u003eHIU (PHR App): Shows the list of Subscriptions Requests HIU (PHR App)-\u003e\u003eHIE-CM: Get subscription details for a subscription ID \u003cbr/\u003e GET /subscription-requests/{subscription-id} HIU (PHR App)-\u003e\u003eHIE-CM:Approve Request \u003cbr/\u003e POST /subscription-requests/{request-id}/approve HIU (PHR App)-\u003e\u003eHIE-CM:Deny Request \u003cbr/\u003e POST /subscription-requests/{request-id}/deny HIU (PHR App)-\u003e\u003eHIE-CM:Notification of request \u003cbr/\u003ePOST /v0.5/subscription-requests/hiu/notify HIE-CM--\u003e\u003eHIU (PHR App):POST /v0.5/subscription-requests/hiu/on-notify API Information Request Response Setup Subscription 1. Request For Subscription\nBASE URLs: https://dev.abdm.gov.in/gateway\n2.Callback For Request For Subscription\nBASE URLs: https://your-hrp-server.com\nUser Confirms / Denies The Subscription 3. Lists Subscription Requests\nBASE URLs: https://dev.abdm.gov.in/cm\n4. Get Subscription Details Of A Subscription ID\nBASE URLs: https://dev.abdm.gov.in/cm\n5. Approve Subscription Request\nBASE URLs: https://dev.abdm.gov.in/cm\n6. Denies Subscription Request\nBASE URLs: https://dev.abdm.gov.in/cm\nNotification of subscription to User on PHR app 7. Notification For Subscription\nBASE URLs: https://your-hrp-server.com\n8. Acknowledge Receipt Of Notification\nBASE URLs: https://dev.abdm.gov.in/gateway\n","description":"","tags":null,"title":"Setup \u0026 Manage Subscriptions","uri":"/abdm-docs/5-building-a-phr-app/setup-subscriptions/index.html"},{"content":"Building a PHR Application Important to understand:\nAll the APIs here are synchronous The interaction is between PHR Application \u0026 HIE-CM The PHR Application has 2 components:\nPHR App UI PHR App Cloud Here’s a diagram to understand the functionalities of the 2 components:\nThis section covers:\nCreate ABHA Address Using Mobile number Using ABHA number Ling / De-link of ABHA address \u0026 ABHA number Login \u0026 Manage User Profile Setting up subscription Setting up Auto-Approval Handling notifications Discovery \u0026 Linking of records Supporting UHI: intent Fetching \u0026 Display of Records Managing Consents / Subscription Requests: Listing Consents / Subscription requests Granting Consents / Subscription requests Revoking Consents / Subscription requests Uploading User Record Sharing your PHR address at a Health facility Link/Unlink PHR Address to an ABHA number ","description":"","tags":null,"title":"Building a PHR App","uri":"/abdm-docs/5-building-a-phr-app/index.html"},{"content":"Requesting Consent Whoever wants to access health data, they have to request for user consent. They do this by sending a consent request with the user’s ABHA address to the HIE-CM.\nFrom an HIU perspective, the flow begins when the HIU (e.g. a Doctor at a Hospital) requests consent to view patient’s data.\nUpon receipt of such a request from Gateway, HIE-CM acknowledges and sends back a consent request ID to the HIU via the gateway.\nThe HIE-CM then notifies the patient that an HIU has made a consent request. The patient can view the request details, and choose to either grant it or deny it.\nSubsequently, the HIE-CM notifies the HIU requester of the patient’s consent or denial status via the gateway.\nIf the request is granted, the HIE-CM sends across the Ids of the consent artefacts that were created against the request, to the HIU. If the request is denied, the HIE-CM simply notifies the HIU of the denial of the request. At the time when the patient registers with the hospital (for accessing medical history), this is (can be) initiated when the user scans the Heath facility QR code \u0026 registers Health Facility now has user’s ABHA address and can initiate a consent request.\nMeta Codes :\nWhile requesting and exchanging health information, there are meta codes that are relevant to you if you are a HIU.\nPurpose of Use - defines what is the purpose of use of the health information that a HIU is requesting for. The following are subset from http://terminology.hl7.org/ValueSet/v3-PurposeOfUse\nCode Display CAREMGT Care Management BTG Break the Glass PUBHLTH Public Health HPAYMT Healthcare Payment DSRCH Disease Specific Healthcare Research PATRQT Self Requested Health Information (HI) Types - defines what types of information a requester is asking for. As of now, the following types are supported.\nCode Display Prescription Prescription DiagnosticReport Diagnostic Report OPConsultation OP Consultation DischargeSummary Discharge Summary ImmunizationRecord Immunization Record HealthDocumentRecord Record artifact WellnessRecord Wellness Record Test Cases S.No Function Functionality Test Case Steps To Be Executed 1.1 Create Consent Request Mandatory Patient Discovery HIU_FLOW_101 The System should have a provision to find the patient using ABHA Number or ABHA Address. 1. Enter ABHA Address/ ABHA Number 2. Select Find Patient 1.2 Create Consent Request Mandatory Consent Request Initiation HIU_FLOW_102\" HIU creates consent request for health records 1. Enter purpose for consent request. 2. Enter duration and expiry of consent request. 3. Enter Health Info type (out of 7 Health Info types). 4. Initiate Request 1.3 Create Consent Request Mandatory Listing of Consent Requests HIU_FLOW_104 The system should be able to view the list of consent requests inititated 1. List of Consent Requests should include - ABHA 1.4 Create Consent Request Mandatory Consent Request is Denied HIU_FLOW_105 The HIU system should not fetch health data for a denied consent request 1. Deny Consent Request on PHR App. 2. Check if data is accessible on the HIU application. 1.5 Create Consent Request Mandatory Consent Request is Approved HIU_FLOW_106 The HIU system would fetch health data for the approved consent request 1.6 Create Consent Request Mandatory HIU_FLOW_107 Fetch health data for (HI Type = DiagnostocReport Structured/Un-Structured) 1. Approve Consent Request on PHR App. 2. Check if data is accessible on the HIU application 1.7 Create Consent Request Mandatory HIU_FLOW_108 Fetch health data for (HI Type = Prescription-Structured) 1. Approve Consent Request on PHR App. 2. Check if data is accessible on the HIU application 1.8 Create Consent Request Mandatory HIU_FLOW_109 Fetch health data for (HI Type = DischargeSummary-Structured) 1. Approve Consent Request on PHR App. 2. Check if data is accessible on the HIU application 1.9 Create Consent Request Mandatory HIU_FLOW_110 Fetch health data for (HI Type = CosultingNote-Structured) 1. Approve Consent Request on PHR App. 2. Check if data is accessible on the HIU application 1.10 Create Consent Request Mandatory HIU_FLOW_111 Fetch health data for (HI Type = Immunization record-Structured) 1. Approve Consent Request on PHR App. 2. Check if data is accessible on the HIU application 1.11 Create Consent Request Mandatory HIU_FLOW_112 Fetch health data for (HI Type = Health Record-Structured) 1. Approve Consent Request on PHR App 2. Check if data is accessible on the HIU application 1.12 Create Consent Request Mandatory HIU_FLOW_113 Fetch health data for (HI Type = Wellness Record-Un-Structured) 1. Approve Consent Request on PHR App. 2. Check if data is accessible on the HIU application Sample User Experience Img 1\nImg 2\nImg 3\nImg 4\nImg 5\nImg 6\nLink a HIU Raise a consent request init using that HIU Will receive the response on-init api triggered in the callback url User can also check the status of the consent request status(like REQUESTED,GRANTED) by passing the consentid in the consent-requests/status api API Sequence Diagram The following diagram explains the consent request creation flow of forwarding the request to the gateway so that gateway can forward it to respective CM:\n%%{init:{\"fontSize\": \"1.0rem\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram title Consent Request by HIU HIU System--\u003e\u003eRepository: Consent Request activate Repository Repository-\u003e\u003eGateway: (1) POST/consent-requests/init Gateway-\u003e\u003eRepository: (2) POST/consent-requests/on-init deactivate Repository Repository--\u003e\u003eHIU System: Response Repository-\u003e\u003eGateway: (3) Get Consent Request Status \u003cbr/\u003e POST/consent-requests/status Gateway-\u003e\u003eRepository: (4) POST/consent-requests/on-status API Information Request Response 1. Create Consent Request\nCreates a consent request to get data about a patient by HIU user.\nBASE URLs: https://dev.abdm.gov.in/gateway\n2. Response To Consent Request\nResult of consent request creation for a patient.\nBASE URLs: https://dev.abdm.gov.in/hiu\n3. Get Consent Request Status\nGet status of consent request done previously\nBASE URLs: https://dev.abdm.gov.in/gateway\n4. Callback to Consent Request Status\nResult of consent request done previously. Status of request can be GRANTED, DENIED, EXPIRED\nBASE URLs: https://dev.abdm.gov.in/hiu\n","description":"","tags":null,"title":"Requesting Consent","uri":"/abdm-docs/4-milestone3/requesting-consent/index.html"},{"content":"Store Consent Artefacts Users have the option to revoke the consent they have provided to the Health Information User (HIU), at any time. The HIUs must remove any copy of the users’ data when the consent is revoked.\nAll Health Information Providers (HIPs) who are holding any data associated with this consent are notified. They must save a copy of the consent artefact in their system. Data can be shared against this consent any number of times till the consent expires (or is revoked by the user).\nTo summarise, if the consent is revoked/expired, they have to get rid of the consent artefacts.\nTest Cases Function Functionality Steps To Be Executed Grant Consent Request Mandatory HIP must save consent (s)granted for a ABHA address in their system (HIP_INIT_GRANT_CONSENT_) 1. Initiate a new consent request for HIP on HIU web interface on sandbox. 2. Grant the request for this consent on PHR app. 3. HIP will be notified of granted consent request. 4. Verify the HIP has saved the granted consent request as part of EMR/HMIS system Revoke Consent Request Mandatory HIP must delete consents for a ABHA address in their system when it is revoked (HIP_INIT_REVOKE_CONSENT) 1. Select a granted consent request for this HIP in the PHR app. 2. Revoke consent on PHR app. 3. HIP will be notified of revoked consent. 4. Verify the HIP has deleted the consent as part of EMR/HMIS system upon revoke by patient Expire Consent Request Mandatory HIP must delete consents for a ABHA address in their system when it is expired (HIP_INIT_EXPIRE_CONSENT) 1. Initiate a new consent request for HIP on HIU web interface on sandbox. 2. Grant the consent on PHR app; Set the expiry to a short expiry time. 3. HIP will be notified of granted consent request. 4. HIP will be notified of the expired consent post expiry time. 5. Verify the HIP has deleted the expired request as part of EMR/HMIS system ABHA Deactivation Mandatory HIP must delete ABHA address \u0026 all associated consents in their system when patient opts out of ABDM (HIP_INIT_ABHA_OPTOUT_DEACTIVATE ) HIP must delete ABHA address \u0026 all associated consents in their system when patient opts out of ABDM. Sample User Experience Img a\nImg b\nImg c\nImg d\nImg e\nImg f\nImg g\nImg h\nImg i\nImg j\nImg k\nImg l\nImg m\nAPI Sequence Diagram %%{init:{\"fontSize\": \"1.0rem\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram title Notification on Consent Grant HIE-CM-\u003e\u003eHRP/HIP: POST/v0.5/consents/hip/notify HRP/HIP-\u003e\u003eHIE-CM: POST/v0.5/consents/hip/on-notify API Information Request Response 1. Consent Notification\nBASE URL: https://your-hrp-server.com\n2. Acknowledgement To Notification Of Consents\nBASE URL: https://dev.abdm.gov.in/gateway\nTo request HIU (https://dev.ndhm.gov.in/hiu#/hiu/login) login access, kindly drop a mail to integration.support@nha.gov.in.\n","description":"","tags":null,"title":"Store Consent Artefacts","uri":"/abdm-docs/3-milestone2/store-consent-artefacts/index.html"},{"content":"Link and De-Link ABHA Address Functionality Overview ABDM has now segregated the identity layer from the consent layer, which will ensure that the ABHA Number (earlier known as Health ID) provides a strong identity to an individual whereas an ABHA Address (earlier known as PHR Address) enables an individual to share their health records with different healthcare providers and payers. API links the given ABHA Address to the ABHA number and defines whether it is the preferred ABHA Address An ABHA address can be created without KYC, using just the mobile number, name, YearOfBirth, gender. Users can have more than one ABHA address. ABDM encourages users to have just one ABHA address. Users can have only a unique KYC-verified ABHA number. There are several scenarios where a strong KYC may be required (example: Insurance) for your ABHA address. This is achieved by linking your ABHA address with your ABHA number. Alternatively, several people who use public health facilities may be issued an ABHA number as part of the process. They can create an ABHA address and link it to their ABHA number. Remember that the ABHA number acts as an ABHA Address like “14digit@abdm” Step 1: User must create an ABHA number, using Aadhar or driving license.\nStep 2: Users can link an existing ABHA address to this ABHA number, OR you can create and link a new ABHA address\nStep 3: Users can unlink an ABHA number from an ABHA address\nTest Cases S.No. Functionality Test Case Steps To Be Executed 1 Mandatory Linking of ABHA Number and ABHA Address (LINK_ABHA_701) System should have provision to link the created ABHA number with existing ABHA address 1. User will create ABHA number as defined in the above scenerios. 2. user should be able to link ABHA number with existing ABHA address Link/Unlink ABHA number to the ABHA address\nS.No Functionality Test Case Steps To Be Executed 1 Mandatory Link ABHA number to the ABHA address Click on “Link ABHA Number” option provided beside “Self Declared” in home screen 2 Mandatory Link ABHA number to the ABHA address Enter 14-digit ABHA number 3 Mandatory Link ABHA number to the ABHA address Validate ABHA number via aadhar OTP / mobile OTP Check that an individual is able to validate ABHA number via both aadhar OTP / mobile OTP 4 Mandatory Link ABHA number to the ABHA address Resend OTP if OTP is not received in 60 seconds,check that resend OTP option is provided after 60 seconds for both aadhar OTP / mobile OTP 5 Mandatory Link ABHA number to the ABHA address Displaye message: “Congratulations! Your ABHA number is now linked to your existing ABHA address. ABHA number is visible on your profile. Check that post OTP validation of ABHA number, message is displayed that ABHA number is successfully linked with the ABHA address and ABHA number is visible in profile. Also ABHA number policy will supersede ABHA address. Hence profile details will change as per ABHA number. In addition to this “Self-Declared” status is changed to “KYC Verified” in home screen. 6 Mandatory Link ABHA number to the ABHA address Click on “Go back to home screen” tab to go back to profile Check that after clicking on “Go back to home screen” tab an individual is able to go back to home screen 7 Mandatory Unlink ABHA number to the ABHA address Click on “Unlink ABHA Number” option provided beside 14-digit ABHA number in home screen. 8 Mandatory Unlink ABHA number to the ABHA address Display confirmation message: “Even after unlinking ABHA number you will still be able to share your health records with healthcare providers through ABHA address. Do you still want to unlink ABHA number XX-XXXX-XXXX-XXXX with your existing ABHA address?” (Yes/No) Check that confirmation message is displayed before unlinking ABHA number with ABHA address 9 Mandatory Unlink ABHA number to the ABHA address Validate ABHA number by selecting any one of the option - “OTP is sent on mobile number linked with your aadhar” / “OTP on mobile number linked with your ABHA number” Check that an individual is able to validate ABHA number via OTP received on mobile number linked with aadhar / ABHA number 10 Mandatory Unlink ABHA number to the ABHA address Resend OTP if OTP is not received in 60 seconds, Check that resend OTP option is provided after 60 seconds for both mobile no linked with aadhar / ABHA number 11 Mandatory Unlink ABHA number to the ABHA address Display message: “ABHA number is unlinked to existing ABHA address” ABHA number is not visible in your profile. Now check that post OTP validation of ABHA number message is displayed that ABHA number is successfully unlinked with the ABHA address and ABHA number is not visible in profile. 12 Mandatory Unlink ABHA number to the ABHA address Click on “Go back to home screen” tab to go back to profile Check that after clicking on “Go back to home screen” tab an individual is able to go back to home screen API Sequence Diagram %%{init:{\"fontSize\": \"1.0rem\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram title Link/Delink ABHA Address \u0026 ABHA number actor User User-\u003e\u003eHIE-CM: POST /v1/phr/registration/hid/search/auth-methods User-\u003e\u003eHIE-CM: POST /v1/phr/login/init/transaction User-\u003e\u003eHIE-CM: POST /v1/phr/registration/hid/init/resendOtp User-\u003e\u003eHIE-CM: POST /v1/phr/login/mobileEmail/preVerification note over HIE-CM,User: Link ABHA Address \u0026 ABHA Number User-\u003e\u003eHIE-CM: POST /v1/phr/profile/link/hid note over HIE-CM,User: Delink ABHA Address \u0026 ABHA Number User-\u003e\u003eHIE-CM: POST /v1/phr/profile/link/hid API Information Request Response Utilities\nFor encrypting the mobileNumber/AadharNumber/otp refer the link\nTo get public key for encryption refer the link For converting an image into Base64 string refer the link\nLinks the given ABHA Address to the ABHA number\nAPI Information Request Response 1. Search a user by Health ID Number\nApi checks Health ID number to find user.\nBASE URL: https://phrsbx.abdm.gov.in\n2. Generate OTP\nApi to create the transaction and send the otp on mobile number.\nBASE URL: https://phrsbx.abdm.gov.in\n3. Resend OTP\nAPI to resend the Mobile OTP\nBASE URL: https://phrsbx.abdm.gov.in\n4. Verify OTP\nAPI to verify OTP\nBASE URL: https://phrsbx.abdm.gov.in\n5. Link the ABHA Address with ABHA Number\nAPI links the given ABHA Address with the ABHA number.\nRefer to example “Link”\nBASE URL: https://phrsbx.abdm.gov.in\nDe-Link the ABHA address with ABHA Number API de-links the given ABHA address from the ABHA number.\nRefer to example “Delink”\n","description":"","tags":null,"title":"Link/De-link ABHA Address","uri":"/abdm-docs/5-building-a-phr-app/create-abha-address/link-delink/index.html"},{"content":"Download ABHA Card Applicable To HMIS / LMIS (PVT) Government Health App Download ABHA Card Mandatory Mandatory Functionality Overview PHR Applications must display the ABHA QR code inside their apps. Users can show this QR Code at Health Facilities and have it scanned during registration.\nDuring assisted enrolment for ABHA number, the user should be provided with a printed ABHA card that can be shown by the user for subsequent visits for rapid registration.\nTest Cases: The following test cases are applicable to All the stakeholders.\nS.No. Functionality Test Case Steps To Be Executed 1 Mandatory for Private View and Download ABHA details (If integrators is generating ABHA card) (CRT_ABHA_114) System must have a provision to View / Download ABHA card 1. System should show the user their ABHA Card 2. ABHA Card should be generated by API and should contain: ABHA Number (Mandatory), User Photo(Optional), ABHA QR code, date of birth and gender, ABHA Address 2 Optional for Pivate View and Download ABHA details.(If integrators is not generating ABHA card) (CRT_ABHA_115) Note: Either of the test cases CRT_ABHA_114 or CRT_ABHA_115 is mandatory for Governement If Integrator is not generating ABHA card. If Integrator is not generating ABHA card then they print the mentioned information on their own card: ABHA Number (Mandatory), ABHA Address API Information Get Quick Response code in PNG format\nAPI Accepts Auth Token and then returns Account Info for QR Code.\nBASE URL: https://healthidsbx.abdm.gov.in/api\nGenerate ABHA Card in PDF Format\nAPI Accepts Auth Token and then Returns Account Details for PDF format.\nBASE URL: https://healthidsbx.abdm.gov.in/api\nGenerate ABHA card SVG\nAPI Accepts Auth Token and then Returns Account Details for SVG format.\nBASE URL: https://healthidsbx.abdm.gov.in/api\nGenerate ABHA card PNG\nAPI Accepts Auth Token and then Returns Account Details for PNG format.\nBASE URL: https://healthidsbx.abdm.gov.in/api\n","description":"","tags":null,"title":"Download ABHA Card","uri":"/abdm-docs/2-milestone1/abha-number/download-abha-card/index.html"},{"content":"Postman is one of the most popular software testing tools which is used for API testing. With the help of this tool, developers can easily create, test, share, and document APIs.\nOverview Download And Install Postman Download Collections and Environment Variables Import Collections Import Environments Variables Verify Your Access To Sandbox Download And Install Postman App Steps to download and install the native Postman application\nStep-1: Visit the https://www.postman.com/ website using any web browser and choose your desired platform among Mac, Windows or Linux.\nStep-2: Click Download.\nStep-3: Now check for the executable file in downloads in your system and run it.\nStep-4: Postman Installation Starts. Wait for some time to Complete the Installation of Postman.\nStep-5: Startup screen will have “Create an account or sign in”\nStep-6: Create Account for Postman (If you already don’t have an account).\nNOTE: There are two ways to sign up for a Postman account. One is to create the Postman account, and the other is to use a Google account. Though Postman allows users to use the tool without logging in, signing up ensures that your collection is saved and can be accessed for later use.\nStep-7: After signing in,in the Postman interface click on Workspaces dropdown on the top left. Click on Create Workspace button. Enter the name and select the visibility of the workspace and click Create Workspace.\nStep-8: Now you have the workspace created to enable you to organize your Postman work.\nDownload ABDM API Collection And Environment Variables Download ABDM API Collection and extract the files from zip. .\nImport Collections Using Postman Collections, you can group related API requests or share sets of API requests.\nWe can import Collections in Postman. To perform this task, follow the below steps −\nStep-1: Select the Collections in the left and then click on Import button in the Postman application. Step-2: Import pop-up shall open with the options to import from a File, Folder, Link, Raw text and Code Repository. Step-3: click on choose files and select the Postman collection (ABDM_API_postman_collection.json - which was downloaded earlier) to import. Step-4: Click on Import button. The collection would have been imported. Sample List of collections Collection Variables The collections has a set of collection variables pre-defined. These allow developers to store and reuse parameter values in API requests and scripts. If you need to update a variable value, you can do it in one place and the value will be automatically changed throughout your collection. The collection variables in Postman can be used in the URLs, in the POST parameters, in the JavaScript code, etc. To specify the variable, use the brackets as a variable name placeholder({{ }}. For example, {{access_token}}).\nVerify variables being displayed have been resolved. Verify Your Access To Sandbox Using Postman Step-1: Enter the client Id and client secret in the body of Gateway Token api which has the v0.5/sessions endpoint Step-2: Now click the Send button to see the access Token as part of the response below ","description":"","tags":null,"title":"Postman Setup","uri":"/abdm-docs/1-basics/postman_setup/index.html"},{"content":"Milestone 1 Description of Milestone 1: ABHA creation and capture \u0026 verification for seamless patient registration\nTest Cases The Milestone 1 test cases are applicable to All the stakeholders.\nS.No Function Functionality Test Case Steps To Be Executed 1.1 ABHA Creation Through Aadhaar OTP Mandatory Create ABHA Option (CRT_ABHA_101) The system must provide an option to create ABHA through Aadhaar OTP 1.2 ABHA Creation Through Aadhaar OTP Mandatory Consent collection (CRT_ABHA_102) The system must display the consent language/ disclaimer language and collect user’s consent as per the ABDM published consent. 1. Read consent language. 2. Agree to the consent language (through ‘I agree’ checkbox or any other form of signature) ABHA Creation Through Aadhaar OTP Optional Consent collection should be multilingual (CRT_ABHA_103) The system should be able to provide the consent in languages other than English also 1. Read consent language. 2. Agree to the consent language (through ‘I agree’ checkbox or any other form of signature) 1.3 ABHA Creation Through Aadhaar OTP Mandatory Aadhaar collection and Error Message (CRT_ABHA_104) System must allow the user to enter Aadhaar Number and the system will display an error message for invalid Aadhaar Number Enter Aadhaar number 1.4 ABHA Creation Through Aadhaar OTP Mandatory Aadhaar OTP Collection (CRT_ABHA_105) User receives Aadhaar OTP and System must allow the user to enter Aadhaar OTP 1. Receive OTP on mobile number registered with Aadhaar. 2. Enter Aadhaar OTP 1.5 ABHA Creation Through Aadhaar OTP Mandatory Resend OTP (CRT_ABHA_106) System may activate the Resend OTP button atleast 2 times after 60 seconds 1. Click on Resend OTP Button. 2. Receive OTP on mobile 1.6 ABHA Creation Through Aadhaar OTP Mandatory OTP based Aadhaar Authentication (CRT_ABHA_107) System must verify the OTP Click on verify button(For Resend and Send). It is recommended that verify button be auto enabled 1.7 ABHA Creation Through Aadhaar OTP Optional Communication Mobile Number (CRT_ABHA_108) 1. If communication mobile number is same as Aadhaar linked mobile number then it should directly go to ABHA creation screen. 2. Alternatively, Integrators may also prompt for OTP again from the user and then post verification of OTP user can go to ABHA creation screen. System will check entered mobile is same as Aadhaar linked mobile number. If returns true then user will directed to ABHA creation screen. 1.8 ABHA Creation Through Aadhaar OTP Mandatory Mobile Number Verification (CRT_ABHA_109) If communication mobile number is not same as Aadhaar linked mobile number then system must ask for the OTP to verify comuncation mobile number. System must verify the mobile number. 1. System must send OTP on mobile number. 2. User enters the OTP and clicks on verify. 3. In case of incorrect OTP ABHA Creation Through Aadhaar OTP Mandatoryfor Private /Government(Suggested for integrators program using demo auth). Suggested ABHA Address (CRT_ABHA_112) The system should allow the user to select the ABHA address giving atleast 3 available suggestions 1. Governemnt integrator may use the default ABHA address. 2. System should have a provision for private integrators to proceed with the suggested ABHA and to create a new ABHA address. 1.9 ABHA Creation Through Aadhaar OTP Mandatory Display of ABHA Number (CRT_ABHA_113) System must display the created ABHA Number 1. System shows the 14-digit ABHA number and ABHA address generated 1.10 ABHA Creation Through Aadhaar OTP Mandatory for Private. View and Download ABHA details (If integrators is generating ABHA card) (CRT_ABHA_114) System must have a provision to View / Download ABHA card 1. System should show the user their ABHA Card. 2. ABHA Card should be generated by API and should contain: a. ABHA Number (Mandatory). b. User Photo-Optional. c. ABHA QR code. d. date of birth and gender. e. ABHA Address ABHA Creation Through Aadhaar OTP Mandatory \u0026 Optional Either of the test cases CRT_ABHA_114 or CRT_ABHA_115 is mandatory for Governement Optional for Private. View and Download ABHA details. (If integrators is not generating ABHA card) (CRT_ABHA_115) If Integrator is not generating ABHA card. 1. If Integrator is not generating ABHA card then They print the mentioned information on their own card. a. ABHA Number (Mandatory). b. ABHA Address 2.1 ABHA Creation Through Aadhaar Biometric OptionalCreate ABHA Option (CRT_ABHA_201) The system must provide an option to create ABHA through Aadhaar Biometric 2.2 ABHA Creation Through Aadhaar Biometric Optional Consent collection (CRT_ABHA_202) The system must display the consent language/ disclaimer language and collect user’s consent as per the ABDM published consent. 1. Read consent language. 2. Agree to the consent language (through ‘I agree’ checkbox or any other form of signature) ABHA Creation Through Aadhaar Biometric Optional Consent collection should be multilingual (CRT_ABHA_203) The system should be able to provide the consent in languages other than English also 1. Read consent language. 2. Agree to the consent language (through ‘I agree’ checkbox or any other form of signature) 2.3 ABHA Creation Through Aadhaar Biometric Optional Aadhaar collection and Error Message (CRT_ABHA_204) System must allow the user to enter Aadhaar Number and the system will display an error message for invalid Aadhaar Number 1. Enter Aadhaar number 2.4 ABHA Creation Through Aadhaar Biometric Optional Biometric based Aadhaar Authentication (CRT_ABHA_205) System must verify the biometrics (fingerprint or face) of the user 1. Scan biometrics (Fingerprint). 2. Click on verify button 2.5 ABHA Creation Through Aadhaar Biometric Optional Communication Mobile Number (CRT_ABHA_206) 1. If communication mobile number is same as Aadhaar linked mobile number then it should directly go to ABHA creation screen. 2. Alternatively, Integrators may also prompt for OTP again from the user and then post verification of OTP user can go to ABHA creation screen. System will check entered mobile is same as Aadhaar linked mobile number. If returns true then user will directed to ABHA creation screen. 2.6 ABHA Creation Through Aadhaar Biometric Optional Mobile Number Verification (CRT_ABHA_207) If communication mobile number is not same as Aadhaar linked mobile number then system must ask for the OTP to verify comuncation mobile number. System must verify the mobile number. 1. System must send OTP on mobile number. 2. User enters the OTP and clicks on verify. 3. In case of incorrect OTP 2.7 ABHA Creation Through Aadhaar Biometric Optional Display of ABHA Number (CRT_ABHA_208) System must display the created ABHA Number 1. System shows the 14-digit ABHA number and ABHA address generated. 2. The Label should read ABHA Number and not Health ID 2.8 ABHA Creation Through Aadhaar Biometric Optional View and Download ABHA details. (If integrators is generating ABHA card) (CRT_ABHA_209) System must have a provision to View / Download ABHA card 1. System should show the user their ABHA Card. 2. ABHA Card should be generated by API and should contain: a. ABHA Number (Mandatory). b. User Photo-Optional. c. ABHA QR code.md. date of birth and gender. e. ABHA Address ABHA Creation Through Aadhaar Biometric Optional View and Download ABHA details. (If integrators is not generating ABHA card) (CRT_ABHA_210)\" If Integrator is not generating ABHA card. If Integrator is not generating ABHA card then They print the mentioned information on their own card: a. ABHA Number (Mandatory). b. ABHA Address 3.1 ABHA Creation Through Demo Auth/ Offline Mode (Avaibale Only for trusted entities. All government Entities are elligible Mandatory Create ABHA Option (CRT_ABHA_301) The system must provide an option to create ABHA through Aadhaar Demographic/ Offline Mode ABHA Creation Through Demo Auth/ Offline Mode (Avaibale Only for trusted entities. All government Entities are elligible Mandatory Consent collection (CRT_ABHA_302) The system must display the consent language/ disclaimer language and collect user’s consent as per the ABDM published consent. 1. Read consent language. 2. Agree to the consent language (through ‘I agree’ checkbox or any other form of signature) 3.2 ABHA Creation Through Demo Auth/ Offline Mode (Avaibale Only for trusted entities. All government Entities are elligible Optional Consent collection should be multilingual (CRT_ABHA_303) The system should be able to provide the consent in languages other than English also 1. Read consent language. 2. Agree to the consent language (through ‘I agree’ checkbox or any other form of signature) 3.3 ABHA Creation Through Demo Auth/ Offline Mode (Avaibale Only for trusted entities. All government Entities are elligible Optional Aadhaar collection and Error Message (CRT_ABHA_304) System must allow the user to enter Aadhaar Number and the system will display an error message for invalid Aadhaar Number Enter Aadhaar number 3.4 ABHA Creation Through Demo Auth/ Offline Mode (Avaibale Only for trusted entities. All government Entities are elligible Optional Demographic Information based authentication (CRT_ABHA_305) System must verify the demographic information of the user against their Aadhaar Enter name, date of birth and gender as per Aadhaar 3.5 ABHA Creation Through Demo Auth/ Offline Mode (Avaibale Only for trusted entities. All government Entities are elligible Optional Profile Completion (CRT_ABHA_306) System should accepts user’s profile information - state, district, photo and mobile number 1. System auto-populates State,district information. 2. Verifies State and District information and enters Photo and mobile number 3.6 ABHA Creation Through Demo Auth/ Offline Mode (Avaibale Only for trusted entities. All government Entities are elligible Optional Display of ABHA Number (CRT_ABHA_307) System must display the created ABHA Number System shows the 14-digit ABHA number and ABHA address generated ABHA Creation Through Demo Auth/ Offline Mode (Avaibale Only for trusted entities. All government Entities are elligible Optional View and Download ABHA details. (If integrators is generating ABHA card) (CRT_ABHA_308)\" System must have a provision to View / Download ABHA card 1. System should show the user their ABHA Card. 2. ABHA Card should be generated by API and should contain: ABHA Number (Mandatory), User Photo(Optional), ABHA QR code, date of birth and gender, ABHA Address 3.7 ABHA Creation Through Demo Auth/ Offline Mode (Avaibale Only for trusted entities. All government Entities are elligible Optional View and Download ABHA details. (If integrators is not generating ABHA card) (CRT_ABHA_309)\" If Integrator is not generating ABHA card. If Integrator is not generating ABHA card then They print the mentioned information on their own card: ABHA Number (Mandatory), ABHA Address 4.1 ABHA Creation Through Driving License / PAN Optional Create ABHA Option (CRT_ABHA_401) The system must provide an option to create ABHA through Driving License / PAN ABHA Creation Through Driving License / PAN Optional Consent collection (CRT_ABHA_402) The system must display the consent language/ disclaimer language and collect user’s consent as per the ABDM published consent. 1. Read consent language. 2. Agree to the consent language (through ‘I agree’ checkbox or any other form of signature) 4.2 ABHA Creation Through Driving License / PAN Optional Consent collection should be multilingual (CRT_ABHA_403) The system should be able to provide the consent in languages other than English also 1. Read consent language. 2. Agree to the consent language (through ‘I agree’ checkbox or any other form of signature) 4.3 ABHA Creation Through Driving License / PAN Optional Communication Mobile Number (CRT_ABHA_404) 1. If communication mobile number is same as Aadhaar linked mobile number then it should directly go to ABHA creation screen. 2. Alternatively, Integrators may also prompt for OTP again from the user and then post verification of OTP user can go to ABHA creation screen. System will check entered mobile is same as Aadhaar linked mobile number. If returns true then user will directed to ABHA creation screen. 4.4 ABHA Creation Through Driving License / PAN Optional Mobile Number Verification (CRT_ABHA_405) If communication mobile number is not same as Aadhaar linked mobile number then system must ask for the OTP to verify comuncation mobile number. System must verify the mobile number. 1. System must send OTP on mobile number. 2. User enters the OTP and clicks on verify. 3. In case of incorrect OTP 4.5 ABHA Creation Through Driving License / PAN Optional Document Verification (CRT_ABHA_406) System must verify the provided document - Driving License / PAN 1. Enter the Driving License / PAN number. 2. Enter name, date of birth and gender as per the document 4.6 ABHA Creation Through Driving License / PAN Optional Document Upload (CRT_ABHA_407) System must allow upload of front and back page of the Driving licence/ PAN 1. Upload the front and back page of the document i.e Driving License / PAN. 4.7 ABHA Creation Through Driving License / PAN Optional Manual Verification and ABHA Creation (CRT_ABHA_408) System Operator / healthcare worker must manually check the documents - Driving License / PAN 1. A healthcare worker/ system operator manually verifies the Driving License / PAN 4.8 ABHA Creation Through Driving License / PAN Optional Display of ABHA Number (CRT_ABHA_409) System must display the created ABHA Number 1. System shows the 14-digit ABHA number and ABHA address generated. 2. The Label should read ABHA Number and not Health ID ABHA Creation Through Driving License / PAN Optional View and Download ABHA details. (If integrators is generating ABHA card) (CRT_ABHA_410) System must have a provision to View / Download ABHA card 1. System should show the user their ABHA Card. 2. ABHA Card should be generated by API and should contain - ABHA Number (Mandatory), User Photo-Optional, ABHA QR code, date of birth and gender, ABHA Address 4.9 ABHA Creation Through Driving License / PAN Optional View and Download ABHA details.(If integrators is not generating ABHA card) (CRT_ABHA_411)\" If Integrator is not generating ABHA card. If Integrator is not generating ABHA card then They print the mentioned information on their own card: ABHA Number (Mandatory), ABHA Address 5.1 ABHA Verification Mandatory ABHA Verification Using ABHA Number/Address and Aadhaar OTP (VRFY_ABHA_101) System must allow ABHA verification using Aadhaar OTP 1. Share ABHA Number or ABHA Address. 2. Receive OTP on the Aadhaar linked mobile number. 3. Enter the OTP. 6.1 ABHA Verification Mandatory ABHA Verification Using ABHA Number/Address and Communication Mobile OTP (VRFY_ABHA_201) System must allow ABHA verification using OTP on Communication Mobile Number 1. Share ABHA Number or ABHA Address. 2. Receive OTP on the Communication mobile number. 3. Enter the OTP 7.1 ABHA Verification Mandatory ABHA Verification Using ABHA Number/Address and Aadhaar Biometric - Fingerprint (VRFY_ABHA_301) System must allow ABHA verification using Biometric scan 1. Share ABHA Number or ABHA Address. 2. Scan fingerprint or face 8.1 ABHA Verification Mandatory ABHA Verification Using Mobile Number and Mobile OTP (VRFY_ABHA_401) System must allow ABHA retrieval and verification using communication mobile number and OTP 1. Share Mobile Number. 2. Receive OTP on Mobile Number. 3. Enter OTP. 4. Get list of ABHA Numbers linked to the Mobile Number. 5. Select one ABHA Number 9.1 Reading ABHA Info using ABHA QR Code Optional Reading ABHA Profile Info using ABHA QR Code (VRFY_ABHA_501) System must allow scanning of ABHA QR code to read the ABHA information EMR/HMIS scans the user’s ABHA QR code 10.1 Profile Update Optional Mobile Update (PROF_ABHA_601) System must allow the user to update their Mobile number 1. Enter new mobile number. 2. Enter OTP. 3. Enter Password/ OTP on old mobile number. 10.2 Profile Update Optional Photo Update (PROF_ABHA_602) System must allow the user to update their Photo 1. Click on Edit Photo. 2. Upload new photo 10.3 Profile Update Optional Email Update (PROF_ABHA_603) System must allow the user to update their Email 1. Enter new Email ID. 2. Enter OTP 10.4 Profile Update Optional Re-KYC (PROF_ABHA_604) System must allow the user to perform re-KYC 1. Click on re-KYC option. 2. Enter OTP received on Aadhaar linked mobile number 10.5 Profile Update Optional Delete ABHA (PROF_ABHA_605) System must allow the user to Delete/ Deactivate ABHA 1. Click on Delete/ Deactivate ABHA. 2. Enter OTP received on mobile number to confirm deletion/ deactivation. 3. Try to login again using the same ABHA 9.1 Linking of ABHA Number and ABHA Address Mandatory Linking of ABHA Number and ABHA Address (LINK_ABHA_701) System should have provision to link the created ABHA number with existing ABHA address 1. User will create ABHA number as deifned in above scenerios. 2. user should be able to link ABHA number with existing ABHA address ","description":"","tags":null,"title":" Milestone 1","uri":"/abdm-docs/11-test-cases/milestone-1/index.html"},{"content":"This section covers:\nComplete Swagger for PHR APIs ABHA Address APIs HIE-CM APIs ","description":"","tags":null,"title":"PHR APIs","uri":"/abdm-docs/12-swagger/phr-address-apis/index.html"},{"content":"Share Profile yaml Complete Swagger for V3 Share Profile APIs ","description":"","tags":null,"title":"V3 Share Profile APIs","uri":"/abdm-docs/12-swagger/hip_hrp/v3_shareprofile/index.html"},{"content":"Health Facility Registry Health Facility Registry is a comprehensive repository of health facilities of the country across modern and traditional systems of medicine.\nIt includes both public and private health facilities including hospitals, clinics, diagnostic laboratories and imaging centers, pharmacies, etc.\nABDM maintains the national directory of all Healthcare Facilities. A facility needs to first enrol in the health facility registry.\nBenefits of Health Facility Registry :\nUnique \u0026 Trustable Identity Facility ID for identification of health facilities across the ABDM ecosystem.\nOnline Presence \u0026 Discoverability Listing of health facilities on a national platform and availability in search results.\nEase of doing business Digitisation of services reducing the efforts for registration \u0026 renewal of various licenses, and empanelment with insurance agencies, TPAs.\nUnified Digital Services Access to telemedicine, digital health records and HMIS solutions.\nHere is the Link to HFIR Document ","description":"","tags":null,"title":"Health Facility Registry","uri":"/abdm-docs/6-hfr/index.html"},{"content":"Handling Notifications Functionality Overview A PHR Application handles a variety of notifications for the User.\nTypes on notifications to be handled:\nCare context - New/Updated New subscription request (v3 APIs only) New Consent request (v3 APIs only) Approved / Revoked consents Expectation on Care Context - new/updated\nThis happens if a subscription is set up for this ABHA address. whenever there is a new care context linked or updated. The PHR App must notify the user on the UI that there is a new health record available. If auto-approval policy is in place then the PHR app must make a consent request to fetch a copy of the health record. More information documented here Expectation on New Subscription Request (v3 APIs only)\nNotify the user on the PHR app UI that there’s a new request Show the subscription request details Allow the user to Approve or Deny the requests Expectation on New Consent Request (v3 APIs only)\nNotify the user on the PHR app UI that there’s a new request Show the Consent request details Allow the user to Grant or Deny the consent Expectation on Approved / Revoked Consents\nStore a copy of consent artefacts More information documented here If there are user-linked records (that is when it acts as an HRP), then they also need to implement handling consent notifications, as defined here\nTest Cases HIP initiated linking flow - When health records are linked with ABHA address at the health facility / health programme\nS.No Functionality Test Case Steps To Be Executed 1 Mandatory Post linking of health records with ABHA address by the HIP with patient consent, the individual can view the health records on the PHR mobile app Health data will be visible in PHR app once HIP link health records with the ABHA address. Once Individual visits the hospital. • ABHA address is shared with the health programme / health facility. • Individual validates the ABHA address with the mobile OTP. • Post linking of health records with ABHA address by the HIP, the individual can open any PHR app and click on “Pull Records” button against the visited health programme / health facility, where the record is created and linked to ABHA address to view the record in mobile device. API Sequence Diagram %%{init:{\"fontSize\": \"1.0rem\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram title Handling Notifications PHR App-\u003e\u003eHIE-CM: POST /v0.5/subscriptions/hiu/notify HIE-CM-\u003e\u003ePHR App: POST /v0.5/subscriptions/hiu/on-notify note left of HIE-CM: Acknowledge Receipt Of Notification API Information Request Response Change Notification to an ABHA address Notification to subscribers if care contexts is added / updated.\n8. Notification to HIU\nBASE URLs: https://your-hrp-server.com\n9. Acknowledge Receipt Of Notification\nBASE URLs: https://dev.abdm.gov.in/gateway\n","description":"","tags":null,"title":"Handling Notifications","uri":"/abdm-docs/5-building-a-phr-app/handling-notifications/index.html"},{"content":"Storing Consent Artefacts Patient Consent notification from CM to HIU Health Information Users (HIUs) need to be notified on the Users’ consent, both when the user grants or revokes consent, or for an expired consent.\nA consent can have different forms:\nGrant Consent This is when the user grants consent to the HIU to access the health records or health information. Revoke Consent This is when the user revokes an earlier granted consent from the user, wherein they want to discontinue sharing their health records or heeath information. The HIUs have to mandatorily get rid of the health records \u0026 information for the users for whose consents have been revoked, to stay ABDM compliant. Expired Consent This is when a granted consent expires. The HIUs have to mandatorily get rid of the health records \u0026 information for the users for whose consents expire, to stay ABDM compliant. The following diagram explains the patient consent notification flow ofrom CM to HIU:\n%%{init:{\"fontSize\": \"1.0rem\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram title Consent Notification from CM to HIU Gateway-\u003e\u003eRepository:POST/consents/hiu/notify activate Repository Repository--\u003e\u003eHIU System:Notification note left of Repository: Optional Step: When notifying about \u003cbr/\u003e consent being revoked, paused or expired Repository-\u003e\u003eGateway:POST/consents/hiu/on-notify deactivate Repository Fetching the Consent Artefact Once the patient grants consent to the HIU, the HIE-CM notifies the HIU system of the consent grant via the gateway. If the patient grants for multiple HIPs, then multiple consent artefacts are generated - one for each HIP. The HIU now first fetches all the consent-artefacts that were generated for his request. Sample User Experience Img a\nImg b\nImg c\nImg d\nImg e\nImg f\nImg g\nImg h\nThe following diagram shows the flow of how an HIU requests to fetch the consent Artefacts:\n%%{init:{\"fontSize\": \"1.0rem\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram title Fetch Consent Artefact HIU System--\u003e\u003eRepository:Consent-fetch Request activate Repository Repository-\u003e\u003eGateway:POST/consents/fetch Gateway-\u003e\u003eRepository:POST/consents/on-fetch deactivate Repository Repository--\u003e\u003eHIU System:Response Test Cases S.No Function Functionality Test Case Steps To Be Executed 1 Revoke Consent Request Mandatory Revoke Consent HIU_FLOW_202 HIUs should not be able to view health records if the consent is revoked. 1. Check list of consent requests to view revoked consents. 2. Check if health record is visible in case the consent is revoked. 2 Expiry of Consent Request Mandatory Consent Expiry HIU_FLOW_301 The HIU should not be able to view the health data of an expired consent request 1. Provide consent with a short expiry period. 2. Check status of consent after expiry. 3. Check if health record is visible to HIU after consent expiry API Information Request Response 1. Patient Consent notification\nBASE URLs: https://your-hrp-server.com\n2. Consent Notifications For Revoked/Expired\nBASE URLs: https://dev.abdm.gov.in/gateway\nThis API is called by HIU as acknowledgement to consent notifications, specifically for cases when consent is REVOKED or EXPIRED.\n3. Fetching the consent artefact\nBASE URLs: https://dev.abdm.gov.in/gateway\nNote: The “consentId” in the request body is the consent artefact id.\n4. Acknowledgement For Fetching the consent artefact\nBASE URLs: https://your-hrp-server.com\nResult of fetch request for a consent artefact\n","description":"","tags":null,"title":"Storing Consent Artefacts","uri":"/abdm-docs/4-milestone3/storing-consent-artefact/index.html"},{"content":"Request Health Records The data request and transfer process between the HIU, HIE-CM and HIP passes through the following three stages:\nFirst Stage\nThe HIU system for patient’s health information to the HIP, through the HIE-CM against a valid granted consent.\nThe HIE-CM assigns a transaction ID for the entire data flow and communicates this Id to the health repositories of the HIU and the HIP.\nThe HIU’s health repository embeds three key elements within the health information request:\nThe consent ID corresponding to the consent artefact against which the information request is being made. A data push URL, which is a callback URL that indicates where the information can be pushed by the HIP’s health repository. This URL can be different from the HIU’s access URL, provided at the time of registration with the gateway. The HIU can specify a different URL for the data flow, in order to keep its identity secret to the possible extent. Several parameters such as the date-time range for the requested and a set of encryption parameters for the HIP repository to encrypt the information. The Elliptic-curve Diffie–Hellman based encryption standard is used for encrypting health information. The HIU’s health repository relays all this information to the HIE-CM through the gateway. From the HIE-CM, the information is relayed to the HIP’s health repository (via the gateway).\nSecond Stage\nOnce the HIP repository receives the information, it first validates the information request, as follows:\nThe HIP finds out if the consent ID corresponds to an expired, paused or revoked artefact. It then checks if the request’s date-time range will correspond to the range for which the consent artefact allows information access. It also ensures that the encryption parameters are correctly defined. Once the above checks are made and validated, the HIP health repository encrypts the requested health records and forwards it along with the transaction ID to the HIU’s data push URL, after signing the encrypted data with its long-term private key. Third Stage\nFinally, the HIE-CM receives notifications from both the HIP and the HIU. The HIP’s health repository notifies the HIE-CM that the requested information was transmitted to the HIU. The HIU’s health repository sends a notification that the requested information was successfully received, or that the request failed.\nAll above 3 stages that pertains to HIP are shown in the following diagram:\n%%{init:{\"fontSize\": \"1.0rem\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram title Request for Health Records HIE-CM-\u003e\u003eHIP/HRP:POST/v0.5/health-information/hip/request activate HIP/HRP HIP/HRP--\u003e\u003eHIP/HRP System:notification HIP/HRP-\u003e\u003eHIE-CM:POST/v0.5/health-information/hip/on-request When HIP gets the request for data transfer, it first validates the consent:\nConsent ID is valid Consent has not expired Data requested is within the consent granted range Only data types that are granted in the consent, are shared Sample User Experience Test Cases Function Functionality Steps To Be Executed Data Transfer \u0026 Share Mandatory HIP must share health records associated with care context on request (HIP_INIT_SHARE_CARECONTEXT) 1. Initiate a “Get data” for a linked care context in the PHR app. 2. HIP will receive a request to share information along with the consent id \u0026 end-point URL where the data must be pushed. 3. HIP must verify that there is a valid consent for sharing this data with the specific HIU making the request. 4. Health records must be shared only for allowed HIP types withing the date ranges granted in the consent. 5. HIP should encrypt the health records to be shared with the HIU public key. 6. HIP should push the encrypted data to the end-point URL. 7. On successful transfer, HIP must notify HIE-CM of successful transfer by calling health information notify API. 8. Transfer must be completed within 2 hours of receiving the request. API Information Request Response 1. Request Health Information\nAPI called by HIE-CM to request health information from HIP against a validated consent artefact.\nNote: Fidelius is designed to automatically handle both formats of public keys (base64 encoded, uncompressed public key format \u0026 x509PublicKey format) but the recommended format for sending the public key is “base64 encoded, uncompressed public key format”. 2. Acknowledge Health Information Request receipt\nAPI called by HIP to acknowledge health information request receipt\n3. Data Transfer via Data Push Url\nHealth information transfer API.\nNote: You can send a base64 value of MD5 checksum of the original (pre-encrypted data) so the HIU can verify the integrity of the data once they decrypt it and derive an equivalent checksum and compare it with the value sent as a part of the encrypted data payload.\nyou can use any online tool like https://emn178.github.io/online-tools/md5_checksum.html to get checksum of the pre-encrypted data. convert the obtained checksum value to base64 once you get a checksum value from the previous step. 4. Data Transfer Notification\nNotifications corresponding to events during data flow\nBASE URL: https://dev.abdm.gov.in/gateway\n","description":"","tags":null,"title":"Request Health Records","uri":"/abdm-docs/3-milestone2/request-health-records/index.html"},{"content":"Default ABHA Address What is ABHA Address?\nABHA Address is an easy to remember username that enables a user to access their health records digitally and share their records with various healthcare providers. An ABHA address look like ‘name@abdm’. It is required to sign up on a PHR Application\nEvery 14-digit ABHA number is automatically issued a default ABHA address on the ABDM HIE-CM, which looks like 14-digit@sbx (for ABDM sandbox) or 14-digit@abdm (for ABDM production)\nCreate ABHA Address\nThe user can also create a user defined name on the HIE-CM that can be linked to this ABHA number. for example: ramesh123@abdm, so that’s easy to remember for them.\nIt is also possible to create an ABHA address that is not linked to an ABHA number on the HIE-CM using mobile, name, age \u0026 gender.\n","description":"","tags":null,"title":"Default ABHA Address","uri":"/abdm-docs/2-milestone1/abha-number/default-abha-address/index.html"},{"content":"Milestone 2 Description of Milestone 2: Building Health Information Provider (HIP) services to share digital records via any Personal Health Records (ABHA) app.\nTest Cases Health Information Provider initiated for Health Records (Any of the 4 methods defined must be demonstrated for HIP Initiated Linking. It is recommended to implement all the 4 methods)\nTest Cases for Health Information Providers (HIP) S.No Function Functionality Test Case Steps To Be Executed 1.1 Health Record Creation Mandatory Creation of Health Records (Health_RECORD_CREATION_101) The system should have a provision to create digital health records 1. Check if digital Health Records are being created in HIP systems (valid for HI types as applicable to the integrating entity). 2.Recommend to have the health record in FHIR format. 2.1 HIP Initiated Health Record Linking Using Mobile OTP Mandatory Link record via mobile OTP (HIP_INTI_LINK_201) The system should have provision to link patient’s Health record with ABHA address 1. Enter patient’s ABHA address on the System. 2. OTP receive by the patient. 2.2 HIP Initiated Health Record Linking Using Mobile OTP Mandatory OTP validation (HIP_INTI_LINK_203) The user shares the OTP with the HIP for validation 1. Share Mobile OTP with HIP System. 2. Validate the OTP. 3. Upon successful validation of OTP 2.3 HIP Initiated Health Record Linking Using Mobile OTP Mandatory Linking of Health Records (HIP_INTI_LINK_205) HIP system links the ABHA Number / Address with the patient records 1. Link Health Records. 2. Through PHR Application 3.1 HIP Initiated Health Record Linking Using Aadhaar OTP Mandatory Link record via aadhaar linked mobile OTP (HIP_INTI_LINK_301) The system should have provision to link patient’s Health record with ABHA address 1. Enter patient’s ABHA address on the System. 2. OTP receive by the patient. 3.2 HIP Initiated Health Record Linking Using Aadhaar OTP Mandatory OTP validation (HIP_INTI_LINK_303) The user shares the OTP with the HIP for validation 1. Share Mobile OTP with HIP System. 2. Validate the OTP. 3. Upon successful validation of OTP 3.3 HIP Initiated Health Record Linking Using Aadhaar OTP Mandatory Linking of Health Records (HIP_INTI_LINK_305) HIP system links the ABHA Number / Address with the patient records 1. Link Health Records. 2. Through PHR Application 4.1 HIP Initiated Health Record Linking Using Direct Auth Mandatory for the Govt. Integartors Direct Auth mode for Linking of Health Records (HIP_INTI_LINK_401) The system should have provision to link patient’s Health record with ABHA address 1. Enter patient’s ABHA address on the System. 2. The user logs into their PHR Application 4.2 HIP Initiated Health Record Linking Using Direct Auth Mandatory Linking of Health Records (HIP_INTI_LINK_404) HIP system links the ABHA Address with the patient records 1. Link Health Records. 2. Through PHR Application 5.1 HIP Initiated Health Record Linking Using Demographic Auth Mandatory for the Govt. Integartors Link record via Demographic Auth (HIP_INTI_LINK_501) The system should have provision to link patient’s Health record with ABHA address. 1. for the verified ABHA Address of the patient in the HIP System. 2.The user provides their demographic details (name, gender, DOB, mobile number). 3. Enter user/patient’s demographic details in the HIP System 5.2 HIP Initiated Health Record Linking Using Demographic Auth Mandatory Validate the demographic details (HIP_INTI_LINK_503) The HIP validates demographic details of patient 1. Validate Demographic Details ( Provided by the user and fetch by the ABHA address). 2.Upon successful validation of OTP 5.3 HIP Initiated Health Record Linking Using Demographic Auth Mandatory Linking of Health Records (HIP_INTI_LINK_505) HIP system links the ABHA Address with the patient records 1. Link Health Records. 2. Through PHR Application 6.1 Sending Notification for deep link workflow Mandatory Sending notification to the patient on their mobile with deep link (HIP_INIT_NOTIFY_HIECM) HIP should notify HIE-CM when a new health record is generated \u0026 ABHA address is not available. This test case is applicable when patient has shared mobile number and has NOT shared ABHA address with HIP during patient registration. 1. New health record like Diagnostic report, Prescription, etc is created on EMR/HMIS system for a patient. 2. Mobile number of patient is available in EMR/HMIS system and ABHA address of the patient is NOT available in EMR/HMIS system. 3. EMR/HMIS system will call the SMS/notify2 API on the gateway to inform of available of new health record (only the mobile number and the HIP ID is to be shared). 4. ABDM should be sending notification to the patient on their mobile with deep link. 5. Patient should be able to download/launch PHR app of their choice. 6. PHR app will make a discovery request to the HIP. 7. Care context for New patient record must be correctly discoverable in the PHR app. 7.1 Grant Consent Request Mandatory HIP must save consent (s)granted for a ABHA address in their system (HIP_INIT_GRANT_CONSENT_) 1. Initiate a new consent request for HIP on HIU web interface on sandbox. 2. Grant the request for this consent on PHR app. 3. HIP will be notified of granted consent request. 4.Verify the HIP has saved the granted consent request as part of EMR/HMIS system 8.1 Revoke Consent Request Mandatory HIP must delete consents for a ABHA address in their system when it is revoked (HIP_INIT_REVOKE_CONSENT) 1. Select a granted consent request for this HIP in the PHR app. 2. Revoke consent on PHR app. 3. HIP will be notified of revoked consent. 4. Verify the HIP has deleted the consent as part of EMR/HMIS system upon revoke by patient 9.1 Expire Consent Request Mandatory HIP must delete consents for a ABHA address in their system when it is expired (HIP_INIT_EXPIRE_CONSENT) 1. Initiate a new consent request for HIP on HIU web interface on sandbox. 2. Grant the consent on PHR app; Set the expiry to a short expiry time. 3. HIP will be notified of granted consent request. 4. HIP will be notified of the expired consent post expiry time. 5.Verify the HIP has deleted the expired request as part of EMR/HMIS system 10.1 ABHA Deactivation Mandatory HIP must delete ABHA address \u0026 all associated consents in their system when patient opts out of ABDM (HIP_INIT_ABHA_OPTOUT_DEACTIVATE ) HIP must delete ABHA address \u0026 all associated consents in their system when patient opts out of ABDM. 11.1 Data Transfer \u0026 Share Mandatory HIP must share health records associated with care context on request (HIP_INIT_SHARE_CARECONTEXT) 1. Initiate a ““Get data”” for a linked care context in the PHR app. 2. HIP will receive a request to share information along with the consent id \u0026 end-point URL where the data must be pushed. 3. HIP must verify that there is a valid consent for sharing this data with the specific HIU making the request. 4. Health records must be shared only for allowed HIP types withing the date ranges granted in the consent. 5. HIP should encrypt the health records to be shared with the HIU public key. 6. HIP should push the encrypted data to the end-point URL. 7. On successful transfer, HIP must notify HIE-CM of successful transfer by calling health information notify API. 8. Transfer must be completed within 2 hours of receiving the request. Test Cases for PHR Applicationlication S.No Function Functionality Test Case Steps To Be Executed 1.1 User Initiated Health Record Linking Mandatory Search for Facility/ HIP (USER_INIT_LINK_602) 1. Patient logs in PHR Application. 2. PHR Application must provide an option to search health providers (provider can be hospitals, labs, clinics, nursing home, doctor, govt Health program, telemedicine provider 1. Search for required HIP. 2. Select that HIP 1.2 User Initiated Health Record Linking Mandatory Share User Profile Details with Facility/ HIP (USER_INIT_LINK_603) PHR Application must share user’s profile details (Mobile no., ABHA Number, ABHA Address, Name, Gender, Year of Birth and Patient ID (optional) with the Facility/HIP. Profile Details will be shared. 1.3 User Initiated Health Record Linking Mandatory Fetch Health Records (USER_INIT_LINK_604) PHR Application must fetch/ receive Health Records available with the selected HIP/ Facility for the shared profile details. Receive list of Health Records that are available with the Facility/ HIP 1.4 User Initiated Health Record Linking Mandatory Provide Consent for Health Record Linking (USER_INIT_LINK_605) PHR Application will prompt to enter an OTP received on the user’s mobile number. 1. Select “Link Health Records” on PHR Applicationlication. 2. Receive OTP on mobile number. 3. Enter OTP and provide consent for health record linking. 1.5 User Initiated Health Record Linking Mandatory Pull Records (USER_INIT_LINK_607) In PHR Application user will able to pull the records. Through PHR Applicationlication,check if the linked records can be pulled 2.1 SHARE PROFILE Mandatory Share Patient Profile (SHARE _PATIENT_PROFILE_701) User will scan the QR code which is placed the facility premises. 1. Log into PHR Application. 2. User will scan the QR code which is placed the facility premises. 3. Post scanning, patient profile details are displayed including ABHA number, ABHA address, Name, Gender, DoB, Mobile No and Address. Below this consent language is displayed - “You consent to the above information to be shared with (HIP Name). They can use this information for your registration and linking your health records” and both “Cancel” / “Share” buttons are provided. 4.Check that after clicking on “Share” button, user profile is successfully shared with the HIP and if user click on “Cancel” button then user profile is not shared with the HIP. 5. User clicks on share and gets a token number. 6. User clicks on ok and gets token number with validity of 30 minutes. ","description":"","tags":null,"title":" Milestone 2","uri":"/abdm-docs/11-test-cases/milestone-2/index.html"},{"content":"Bahmni Bahmni is an OpenMRS Distro. It is an open source EMR and a full Hospital Management System with Lab, Billing, Pharmacy, PACS and other integrated features. An instance of Bahmni has been setup to act as a Health Information Provider and Health Information User in the ABDM Sandbox. This can be very useful for testing the following use cases during ABDM integration.\nTo see examples of how Milestone 1 is integrated in a HMIS / LMIS To test Milestone 3 if you are integrating the same in a HMIS or PHR app To test most of the PHR app related testcases that require a HIP / HIU Who is developing Bahmni? Thoughtworks started building Bahmni in January 2013 as part of its mission of social and economic justice. In October of 2017 Thoughtworks transferred ownership of Bahmni to the Bahmni Coalition under the Fiscal Sponsorship of the non-profit OpenMRS, Inc. Thoughtworks continues to be a major contributor to Bahmni, and serves on its Governing Committee. Bahmni is built by the Bahmni Coalition, and other open-source contributors.The Coalition is a group of companies and non-profit organizations who work together under the Fiscal Sponsorship of the non-profit OpenMRS Inc, to develop, implement, and use Bahmni.\nHow is Bahmni ABDM integrated? Bahmni is ABDM compliant, i.e it has successfully integrated all the required milestones/ guidelines mandated by the NHA to be an ABDM compliant software. Bahmni can be deployed as an ABDM compliant Hospital Management System which facilities can adopt to integrate seamlessly with the ABDM ecosystem\nWith Bahmni,\nThe user can capture and verify the ABHA ID and fetch the demographic information of the patient.\nThe facility can act as a HIP, i.e. create medical records which can be shared digitally.\nThe facility can act as a HIU, i.e. request and view patient’s records with consent.\nBahmni Environment The LITE version of Bahmni, (ABDM Compliant) configured for clinics and small hospitals. It comes with the CIEL dictionary, and ABDM components. To access the hosted instance that is linked with the ABDM sandbox use\nURL: https://dev.lite.mybahmni.in/\nThe environment is currently available only during India hours (8am-9pm IST daily). If you need it up longer for specific demos, please contact bahmni via SLACK.\nPlease ping on Slack #bahmni-infra channel if you are have issues while accessing the link.\nNote : HIU/HIP id for the above Bahmni environment\n{ \"identifier\": { \"name\": \"Bahmni\", \"id\": \"Bahmni\" }, \"telephone\": null, \"city\": null, \"latitude\": null, \"longitude\": null, \"address\": null, \"districtCode\": null, \"stateCode\": null, \"pinCode\": null, \"facilityType\": [ \"HIP\", \"HIU\" ], \"isHIP\": true, \"attributes\": { \"hipAttributes\": null, \"hiuAttributes\": null, \"healthLockerAttributes\": null } } Credentials\nBahmni EMR:\nUsernames: superman, dr_neha, registration\nPassword: Admin123\nHIU:\nUsername: admin\nPassword: nimda\nPlease be aware that multiple integrators will use the same login / credentials. This support from Bahmni is being provided to support the ABDM community. Share the love \u0026 care.\nLanding Page \u0026 Login Page Img 1\nImg 2\nImg 3\nCommunication Tools Discussion Forum:\nThe primary place to communicate about Bahmni is the Discussion Forum. The Bahmni forums are hosted under the “OpenMRS Talk” discussion forums\" (a section of OpenMRS’s discussion forum)\nChat on Slack:\nSigning up on Bahmni Slack\nFor quick chat-style messages, active Bahmni contributors use Slack. Most communications are on the #community channel. There are other channels for project (or topic) specific discussions. Slack info\nURL: https://bahmni.slack.com\nLogin:\nIf you belong to an organization whose domain name has already been pre-approved, then you may create your own account. Otherwise the users can also make the request on the discussion forums, via https://www.bahmni.org/contact-us/ ","description":"","tags":null,"title":"Bahmni","uri":"/abdm-docs/1-basics/bahmni/index.html"},{"content":"Packaging Health Data This section helps you understand data packaging, what goes into the main envelope, types of health information and much more. The examples provided in this section only explain the syntactic meaning of the data formats. For expressing symantec meaning via standards, encoding and terminologies please refer to the CDAC NRCeS website or as recommended by NHA.\nDevelopers resource\nYou will need to use an FHIR client library to code the JSON samples provided in the sections below. Please refer to the FHIR references for developers and implementers at this link. During development, it’s usually a good idea to validate the resource. For this, you may use one of the validators listed in the reference library/resources section. For example, the following example validates the entire file content (json) FHIR Documents\nAs explained in the APIs and Standards section, the following are the Health Information (HI) Types that are currently supported. The document type codes must be specfied as per the defined SNOMED-CT codes specified below. Please check the “Main Envelope” section to see example. Code Display SNOMED-CT code Prescription Prescription 440545006 DiagnosticReport Diagnostic Report 721981007 OPConsultation OP Consultation 371530004 DischargeSummary Discharge Summary 373942005 ImmunizationRecord Immunization Record 41000179103 HealthDocumentRecord Record artifact 419891008 WellnessRecord Wellness Record N/A (Should match exact text Wellness record) Please refer to NRCeS’ Implementer’s Guide to create FHIR documents compliant to the FHR standards. This section covers\nThe main envelope Diagnostic reports as FHIR DiagnosticReport Data encryption and decryption How to start testing the health repositories ","description":"","tags":null,"title":"Packaging Health Data","uri":"/abdm-docs/3-milestone2/packaging-health-data/index.html"},{"content":"Healthcare Professional Registry Healthcare Professionals Registry is a comprehensive repository of all verified healthcare professionals involved in delivery of healthcare services across both modern and traditional systems of medicine. Enrolling in the Healthcare Professionals Registry will enable them to get connected to India’s digital health ecosystem.\nCurrently Doctors and Nurses can enroll in HPR and going forward other categories of professionals will be added.\nUser manual\nHPR user manual Download here API documents\nSearch doctor API- Production Download here\nSearch doctor API- Sandbox Download here\nRegister Health Professional(Doctor\u0026Nurse)-Production Download here\nRegister Health Professional (Doctor \u0026 Nurse)-Sandbox Download here\nMaster Data Fields\nMaster Data Fields - Download here ","description":"","tags":null,"title":"Health Professional Registry","uri":"/abdm-docs/7-hpr/index.html"},{"content":"Setting up Auto-Approval Functionality Overview The PHR App should get confirmation from the user that it can automatically retrieve any new linked health records and save a copy in the PHR application. On confirmation from the user, the PHR app can set up an auto-approval policy with the HIE-CM. The HIE-CM responds with an auto-approval ID that must be saved by the PHR app. When the PHR App receives a notification for a new care context or update of a care context, it is expected to initiate a consent request to the HIE-CM for access to the linked care context Since the auto approval policy is in place the HIE-CM will immediately respond with a consent grant to the PHR app. The PHR App can now use the approved consent to retrieve a copy of the health record and save it. Sample User Experience Img1\nImg2\nImg3\nImg4\nImg5\nImg6\nImg7\nAPI Sequence Diagram %%{init:{\"fontSize\": \"1.0rem\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram title Setup Auto-Approval PHR App-\u003e\u003eHIE-CM: Setup auto-approval for HIU\u003cbr/\u003ePOST/consents/auto-approve note over HIE-CM,PHR App:Returns Auto-Approval Id PHR App-\u003e\u003eHIE-CM: Enable auto-approval-policy\u003cbr/\u003ePOST/consents/auto-approval-policy/{auto-approval-id}/enable PHR App-\u003e\u003eHIE-CM: Disable auto-approval-policy\u003cbr/\u003ePOST/consents/auto-approval-policy/{auto-approval-id}/disable API Information Request Response Auto Approval 1. Notification to HIU\nBASE URLs: https://dev.abdm.gov.in/cm\nNote : HIU should be associated with the user’s client id\nEnable/Disable Auto-Approval 2. Disable Auto-Approval Policy\nBASE URLs: https://dev.abdm.gov.in/cm\n3. Enable Auto-Approval Policy\nBASE URLs: https://dev.abdm.gov.in/cm\n","description":"","tags":null,"title":"Setup Auto-Approval","uri":"/abdm-docs/5-building-a-phr-app/setup-auto-approval/index.html"},{"content":"Getting Health Records The data request and transfer process between the HIU, HIE-CM and HIP passes through the following three stages:\nFirst Stage\nThe HIU system initiates data request for a patient’s health information to the HIP against the relevant consent-artefact, through the HIE-CM. As part of the data request, the HIU’s health repository embeds three key elements within the health information request: The consent ID corresponding to the consent artefact against which the information request is being made. A data push URL, which is a callback URL that indicators where the information can be pushed by the HIP’s health repository. This URL can be different from the HIU’s access URL, provided at the time of registration with the gateway. The HIU can specify a different URL for the data flow, in order to keep its identity secret to the extent possible. Several parameters such as the date-time range for the requested and a set of encryption parameters for the HIP repository to encrypt the information. The Elliptic-curve Diffie–Hellman based encryption standard is used for encrypting health information. Upon receipt of the data-request, HIE-CM assigns a transaction ID (txn-id) for the entire data flow and communicates this Id to the health repositories of the HIU and the HIP. The HIU’s health repository relays all this information to the HIE-CM through the gateway. From the HIE-CM, the information is relayed to the HIP’s health repository (via the gateway).\nSecond Stage\nOnce the HIP repository receives the information, it first validates the information request, as follows:\nThe HIP finds out if the consent ID corresponds to an expired, paused or revoked artefact. It then checks if the request’s date-time range will correspond to the range for which the consent artefact allows information access. It also ensures that the encryption parameters are correctly defined. Once the above checks are made and validated, the HIP health repository encrypts the requested health records and forwards it along with the transaction ID to the HIU’s data push URL, after signing the encrypted data with its long-term private key. Third Stage\nFinally, the HIE-CM receives notifications from both the HIP and the HIU. The HIP’s health repository notifies the CM that the requested information was transmitted to the HIU.\nThe HIU’s health repository sends a notification that the requested information was successfully received, or that the request failed.\nNote For more details on data transfer, please refer this Webinar\nSample User Experience Img 1\nImg 2\nImg 3\nImg 4\nImg 5\nImg 6\nImg 7\nImg 8\nImg 9\nImg a\nImg b\nImg c\nImg d\nImg e\nImg f\nImg g\nImg h\nImg i\nImg j\nAPI Sequence Diagram All above 3 stages that pertains to HIU are shown in the following API sequence diagram:\n%%{init:{\"fontSize\": \"1.0rem\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram title Health Data Request \u0026 Transfer HIU System--\u003e\u003eHIU Repository:Health info request activate HIU Repository HIU Repository-\u003e\u003eGateway:POST/health-information/cm/request Gateway-\u003e\u003eHIU Repository:POST/health-information/cm/on-request deactivate HIU Repository HIU Repository--\u003e\u003eHIU System: Response activate HIU System activate HIP Repository Note over HIU Repository,Gateway:Direct Data Transffer HIP Repository-\u003e\u003eHIU System:POST datapush-url HIU System-\u003e\u003eGateway:POST/health-information/notify deactivate HIP Repository deactivate HIU System API Information Request Response 1. Health Information Data Request\nBASE URLs: https://dev.abdm.gov.in/gateway\nNote:\nThe id in the request body is the consent artefact id for which we are requesting the data and we have the consent for. \"consent\": { \"id\": \"5b5f9947-2115-4ac8-baea-b82c93acde3f\" } Fidelius is designed to automatically handle both formats of public keys (base64 encoded, uncompressed public key format \u0026 x509PublicKey format) but the recommended format for sending the public key is “base64 encoded, uncompressed public key format”. 2. Acknowledgement Of Health Information Request\nBASE URLs: https://dev.abdm.gov.in/hiu\n","description":"","tags":null,"title":"Getting Health Records","uri":"/abdm-docs/4-milestone3/getting-health-record/index.html"},{"content":"Profile Update Applicable To HMIS / LMIS (PVT) Government Health App Using Aadhar Demographic Optional Optional If you want to do profile update for any user, you can do it by using their ABHA number, via:\nABHA Website, if you ABHA number was created on Production website. ABHA Sandbox, if you ABHA number was created on Sandbox environment. If you want to do it in your application, more information is documented under PHR Application section\nTest Cases Functionality Test Case Steps To Be Executed Optional Mobile Update (PROF_ABHA_601) System must allow the user to update their Mobile number 1. Enter new mobile number. 2. Enter OTP. 3. Enter Password/ OTP on old mobile number. Optional Photo Update (PROF_ABHA_602) System must allow the user to update their Photo 1. Click on Edit Photo. 2. Upload new photo Optional Email Update (PROF_ABHA_603) System must allow the user to update their Email 1. Enter new Email ID. 2. Enter OTP Optional Re-KYC (PROF_ABHA_604) System must allow the user to perform re-KYC 1. Click on re-KYC option. 2. Enter OTP received on Aadhaar linked mobile number Optional Delete ABHA (PROF_ABHA_605) System must allow the user to Delete/ Deactivate ABHA 1. Click on Delete/ Deactivate ABHA. 2. Enter OTP received on mobile number to confirm deletion/ deactivation. 3. Try to login again using the same ABHA API Information Request Response Get Profile Details\nAPI to get the profile details.\nBASE URL: https://healthidsbx.abdm.gov.in/api\nUpdate Profile Details\nAPI to update the profile details.\nBASE URL: https://healthidsbx.abdm.gov.in/api\n","description":"","tags":null,"title":"Profile Update","uri":"/abdm-docs/2-milestone1/abha-number/profile-update/index.html"},{"content":"Milestone 3 Functionalities of Milestone 3: Developing Health Information User (HIU) services to provide view of patient’s medical history to authorized healthcare workers with complete consent.\nTest Cases S.No Function Functionality Test Case Steps To Be Executed 1.1 Create Consent Request Mandatory Patient Discovery HIU_FLOW_101 The System should have a provision to find the patient using ABHA Number or ABHA Address. 1. Enter ABHA Address/ ABHA Number 2. Select Find Patient 1.2 Create Consent Request Mandatory Consent Request Initiation HIU_FLOW_102 HIU creates consent request for health records 1. Enter purpose for consent request. 2. Enter duration and expiry of consent request. 3. Enter Health Info type (out of 7 Health Info types). 4. Initiate Request 1.3 Create Consent Request Mandatory Listing of Consent Requests HIU_FLOW_104 The system should be able to view the list of consent requests inititated 1. List of Consent Requests should include - ABHA 1.4 Create Consent Request Mandatory Consent Request is Denied HIU_FLOW_105 The HIU system should not fetch health data for a denied consent request 1. Deny Consent Request on PHR App. 2. Check if data is accessible on the HIU application. 1.5 Create Consent Request Mandatory Consent Request is Approved HIU_FLOW_106 The HIU system would fetch health data for the approved consent request 1.6 Create Consent Request Mandatory HIU_FLOW_107 Fetch health data for (HI Type = DiagnostocReport Structured/Un-Structured) 1. Approve Consent Request on PHR App. 2. Check if data is accessible on the HIU application 1.7 Create Consent Request Mandatory HIU_FLOW_108 Fetch health data for (HI Type = Prescription-Structured) 1. Approve Consent Request on PHR App. 2. Check if data is accessible on the HIU application 1.8 Create Consent Request Mandatory HIU_FLOW_109 Fetch health data for (HI Type = DischargeSummary-Structured) 1. Approve Consent Request on PHR App. 2. Check if data is accessible on the HIU application 1.9 Create Consent Request Mandatory HIU_FLOW_110 Fetch health data for (HI Type = CosultingNote-Structured) 1. Approve Consent Request on PHR App. 2. Check if data is accessible on the HIU application 1.10 Create Consent Request Mandatory HIU_FLOW_111 Fetch health data for (HI Type = Immunization record-Structured) 1. Approve Consent Request on PHR App. 2. Check if data is accessible on the HIU application 1.11 Create Consent Request Mandatory HIU_FLOW_112 Fetch health data for (HI Type = Health Record-Structured) 1. Approve Consent Request on PHR App 2. Check if data is accessible on the HIU application 1.12 Create Consent Request Mandatory HIU_FLOW_113 Fetch health data for (HI Type = Wellness Record-Un-Structured) 1. Approve Consent Request on PHR App. 2. Check if data is accessible on the HIU application 2.1 Revoke Consent Request Mandatory Revoke Consent HIU_FLOW_202 HIUs should not be able to view health records if the consent is revoked. 1. Check list of consent requests to view revoked consents. 2. Check if health record is visible in case the consent is revoked. 3.1 Expiry of Consent Request Mandatory Consent Expiry HIU_FLOW_301 The HIU should not be able to view the health data of an expired consent request 1. Provide consent with a short expiry period. 2. Check status of consent after expiry. 3. Check if health record is visible to HIU after consent expiry ","description":"","tags":null,"title":" Milestone 3","uri":"/abdm-docs/11-test-cases/milestone-3/index.html"},{"content":"The ABDM Sandbox features a reference PHR application which can be used to simulate the consumer side experience. If the software you are integrating is a HMIS / LMIS, we highly recommend that you\nDownload and install the Sandbox ABHA app on an android phone Create an ABHA address that you will use during integration. This looks like yourid@sbx Setup a password for your ABHA address. This will be useful when we work with some APIs Download Sandbox ABHA App Sandbox ABHA App APK File\nInstall Sandbox ABHA App Image1\nImage2\nImage3\nImage4\nImage5\nImage6\nImage7\nCreate ABHA address The user can create ABHA address via:\nABHA Number Mobile Number Email ID Pic1\nPic2\nCreate via MobileNumber: Image1\nImage2\nImage3\nImage4\nImage5\nImage6\nImage7\nImage8\nYour Sandbox ABHA Address You can also login and view your sandbox ABHA address profile at https://abhasbx.abdm.gov.in\n","description":"","tags":null,"title":"Sandbox ABHA App","uri":"/abdm-docs/1-basics/sandbox_abha_app/index.html"},{"content":"UHI \u0026 UHI Network UHI is envisioned as an open protocol for various digital health services. UHI Network will be an open network of End User Applications (EUAs) and participating Health Service Provider (HSP) applications.\nUHI will enable a wide variety of digital health services between patients and health service providers (HSPs) including, but not limited to:\nBooking OPD appointments at hospitals / clinics Booking Tele-Consultation Discovering availability of critical care beds Discovery of lab and diagnostic services Booking of home visits for lab sample collections Booking an ambulance Discovery of nearby pharmacies End user application (EUA) is any application chosen by the service consumer (frequently referred to as user) to access Health services. EUAs can be of diverse forms like mobile apps, interactive voice response systems (IVRS), virtual assistants in English and local languages, etc.\nHealth service providers may be individual doctors, hospitals, labs, pharmacies, companies that aggregate health services, etc. They provide digital health services using Health Service Provider Applications (HSPA) that support UHI.\nUHI ensures that a digital health service can be delivered between any EUA with any HSP in this ecosystem.\nUHI Services\nThe services on UHI will include, but not be limited to\nTeleconsultation Booking Physical Appointments Lab Bookings Ambulance Services Blood Donation UHI Participants\nAny service transaction in UHI involves five entities:\nUser: Patients seeking digital health services through UHI.\nEnd User Application (EUA): User-facing applications offering digital health services\nUHI Gateway: Routing the initial service/provider discovery requests and responses involved in UHI transactions between HSPAs and EUAs\nHealth Service Provider Application (HSPA): Provider-facing applications allowing health service providers (doctors, health facilities etc) to respond to EUA requests and fulfill digital health services\nHealth Service Provider (HSP): Providers of healthcare services\nRole of the UHI Gateway The role of the gateway in a UHI service transaction is limited to the search and discoverability of health services. For example, if a user searches for teleconsultation services on an EUA, the gateway routes the request to all available HSPAs and sends back the responses to the EUA. The booking, payment and fulfillment of the service, thereafter, is done directly between the EUA and the HSPA.\nCheck out the UHI Starter Guide\nCheck out the Catalog Mandatory Requirements document for UHI\nHere is the link to Sandbox Request Form\n","description":"","tags":null,"title":"UHI","uri":"/abdm-docs/8-uhi/index.html"},{"content":"Discovery and Linking of Records Functionality Overview This is applicable when the user has not shared ABHA address when they visit a Health facility. This can also be used by users to discover and link historical records from health facility. How to do this:\nUser should be able to search the Healthcare provider (health facility) by name in the PHR application The Discovery and Link feature can also be used to find \u0026 link records held by large govt. programs, like CoWin Only healthcare providers participating in the ABDM will be discoverable here. Once the healthcare provider is selected, the PHR app triggers a discovery request with the HIE-CM. The discovery request includes the patient’s name, Year of Birth, Gender, ABHA Address \u0026 verified mobile number. The user can also add the patient registration number issued by the healthcare provider to make it easier to locate their health records. The HIE-CM forwards it to the selected healthcare provider (HIP). Currently the HIP is expected to respond to the discovery request within 10 seconds. If there are health records for this patient the list of care contexts is sent back by the HIP and PHR app presents this to the user. The user can now initiate linking of these care contexts with their ABHA address The HIP is expected to verify that the user credentials by sending an OTP to the user’s registered mobile number before allowing the linkage. For more information on how the HIP finds / searches for records, read here\nSample User Experience Img a\nImg b\nImg c\nImg d\nImg e\nImg f\nImg g\nImg h\nImg i\nImg j\nImg k\nImg l\nImg m\nImg n\nImg o\nImg p\nImg q\nTest Cases Health and Facility records linking: User initiated linking flow (Discovery Flow) - Complete Discovery of HIP, linking, fetching and viewing of records in PHR app\nS.No Functionality Test Case Steps To Be Executed 1. Mandatory Link HIP After Login : Click on “Link my Health Records” tab in “My Records” tab Click on “Link my Health Records” tab / “+” symbol in “Linked Facility” tab to search records in HIP 2. Mandatory Discover HIP Search HIP ’s such as hospital, clinic, lab to discover them based on typed string by the individual When individual will search the visited facilty (HIP), the entire facilty name with complete address will be discovered by the individual. This “Search” is based on string, i.e HIP name entered by the patient in the search bar of PHR app. 3. Mandatory Display of patient details After searching facility: The details visible to patient on the PHR app are: Verified mobile number, ABHA address, ABHA number, Patient ID, Full Name, Year of Birth, Gender. Details of Patient will be visible when individual search for the HIP in PHR app while user initiated linking flow. 4. Mandatory Fill Patient ID (Optional) This customizable lable is: Patient ID - In case of linking health records created at health facility. And this field is optional for patient to enter. Check, if exact match of record is found after entering correct Patient ID 5. Mandatory Matching of API specifications to link record Click on “Fetch Records”. After matching following fields, records will be fetched from facility (HIP) to PHR app: Name (Mandatory), Year of Birth (Mandatory), Gender (Mandatory), Mobile Number (Mandatory), Patient ID (Optional) Ensure that already linked care context should not be discovered in PHR mobile app. If all care context of discovered facilty are already linked, then display message called “All your existing records are linked. No additional records availaible for linking”. Ensure that the linked care context is shown in the “Linked Facility” tab of the PHR mobile app 6. Mandatory Link records Display of records details like HI type Display of all correct details of records, after matching of API specifications. Select the record which patient wants to link and click on “Link Selected” 7. Optional Fill mobile OTP received to complete linking of record. Mobile OTP will be received once individual clicks on fetch records. After successful validation of OTP, display message called “Records are successfully linked”. This OTP is sent by HIP to the patient’s mobile. Fill mobile OTP for successful linking of facility. Error message display, for following scenarios : Scenario 1: If there is Communication Gap, between HIP and individual – Due to some technical issue at HIP end like if server is down then, error message is displayed as “Couldn’t Connect: We are sorry. Unable to contact your hospital. Please try again later”. Scenario 2: If individual have never visited the hospital – An error message is displayed as “No health records found”. Scenario 3: Records of all visits are already linked and there is nothing new to link - – An error message is displayed as “No new health record to link: Records of all visits are already linked and there is nothing new to link 8. Mandatory Linked facility will be visible in “Linked Facility” tab. Click on “Pull Records” button to fetch and view records. Ensure that the patient’s health-records are getting fetched. 1. Check that PHR app sends data transfer request to HIP within 5 minutes after an individual click on “Pull Records” button. 2. Ensure that the patient health records are fetched within 2 hours in the PHR mobile app. Ensure that the patient’s health-records are fetched without ERRORED\" 9. Optional Display message regarding fetching of records may take time in “My Records” tab 1. Keep “I” button in “My Records”, so that message is displayed regarding fetching of records may take time when patient hovers over i button. 2. Check that proper error or status message will be displayed if records are taking time in fetching. For e.g. Refresh to fetch record, Data fetch in progress etc.. Since, fetching of records take time. Display message called “Recently linked records might take some time to show” when patient hover over “i button” in “My Records” tab. 10. Optional Records will be displayed in “My Records” tab. Click on the attached report to view the health record. After clicking on record: Details of health record will be displayed alongwith an attachment consisting of record. Details of health record included structured data such as: Facility Name, Visit type, Prescribed By, Date and Time 11. Optional View record in mobile device Record will open when individual clicks on the attachment consisting health record Records will open in the device and patient can view it Health Programme records linking, fetching and viewing of records: User initiated linking (Discovery Flow)\nS.No Functionality Test Case Steps To Be Executed 1. Mandatory Link Programme After Login : Click on “Link my Health Records” tab in “My Records” section Click on “Link my Health Records” tab / “+” symbol in “Linked Facility” tab to search records in HIP. 2. Mandatory Select Health Programme Select programme name whose record patient wants to link, fetch and view in PHR app. Currently, government health programmes such as “CoWIN”, “AB-PMJAY”, e-Sanjeevani OPD, e-Sanjeevani HWC, RCH programme. Going forward, other health programmes will also integrate with PHR app\" Check, if patient is able to select the integrated government health programme with the PHR app. 3. Mandatory Display of patient details After clicking on programme name, the details visible to patient are: Verified mobile number, ABHA address, ABHA number, CoWIN registered mobile no (Customizable Label - Optional), Full Name, Year of Birth, Gender In User initiated linking (Discovery Flow), details of patient will be visible when individual select government health programme in PHR app. 4. Mandatory Fill PM-JAY ID (Optional) This customizable label is: 1. PMJAY ID - In case of linking health records from AB-PMJAY programme. 2. CoWIN Registered Mobile No - In case of linking health records from CoWIN. Check, if exact match of patient records are found, after entering correct PMJAY ID / CoWIN registered mobile number 5. Mandatory Matching of API specifications “Click on “Fetch Records”. After matching following fields, records will be fetched from programme to PHR mobile app: Name (Mandatory), Year of Birth (Mandatory), Gender (Mandatory), Mobile Number (Mandatory), Patient ID (Optional) Ensure that already linked care context should not be discovered in PHR mobile app. If all care context of selected government health programme are already linked, then display message called “All your existing records are linked. No additional records availaible for linking”. Ensure that the linked care context is shown in the “Linked Facility” tab of the PHR mobile app 6. Mandatory Link records Display of records details such as Dose 1, Dose 2 and Dose 3 (Precautionary dose) in case of CoWIN programme. Display of all correct details of records, after matching of API specifications 7. Mandatory Display of records details such as Dose 1, Dose 2 and Dose 3 (Precautionary dose) in case of CoWIN programme. Select the record which patient wants to link and click on “Link Selected” 8. Optional Fill mobile OTP received to complete linking of record. Mobile OTP will be received once individual clicks on fetch records. After successful validation of OTP, display message called “Records are successfully linked”. This OTP is sent by government health programme to the patient’s mobile. Fill mobile OTP for successful linking of facility. 9. Optional Fill mobile OTP received to complete linking of record. Mobile OTP will be received once individual clicks on fetch records. After successful validation of OTP, display message called “Records are successfully linked”. This OTP is sent by government health programme to the patient’s mobile. Fill mobile OTP for successful linking of facility 10. Mandatory Linked programme will be visible in “Linked Facility” tab. Click on “Pull Records” button to fetch and view records Ensure that the patient’s health-records are getting fetched 1. Check that PHR app sends data transfer request to HIP within 5 minutes after an individual click on “Pull Records” button. 2. Ensure that the patient health records are fetched within 2 hours in the PHR mobile app 11. Mandatory Linked programme will be visible in “Linked Facility” tab. Click on “Pull Records” button to fetch and view records Ensure that the patient’s health-records are getting fetched Ensure that the patient’s health-records are fetched without ERRORED 12. Optional Display message regarding fetching of records may take time in “My Records” tab. 1. Keep “I” button in “My Records”, so that message is displayed regarding fetching of records may take time when patient hovers over i button. 2. Check that proper error or status message will be displayed if records are taking time in fetching. For e.g. Refresh to fetch record, Data fetch in progress etc. Since, fetching of records take time. Display message called “Recently linked records might take some time to show” when patient hover over “i button” in “My Records” tab. 13. Optional Records will be displayed in “My Records” tab. Click on the attached report to view the health record. After clicking on record: Details of health record will be displayed alongwith an attachment consisting of record Details of health record included structured data such as: Facility Name, Visit type, Prescribed By, Date and Time 14. Optional View record in mobile device Record will open when individual clicks on the attachment consisting health record Records will open in the device and patient can view it API Sequence Diagram %%{init:{\"fontSize\": \"1.0rem\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram title Discovering \u0026 Linking Health Records in PHR App actor User PHR App-\u003e\u003eHIE-CM: List providers by given name \u003cbr/\u003e GET/providers PHR App-\u003e\u003eHIE-CM: List govt-programs \u003cbr/\u003e GET/govt-programs PHR App-\u003e\u003eHIE-CM: Discover patient Records \u003cbr/\u003e POST/v1/care-contexts/discover HIE-CM-\u003e\u003eHRP/HIP:Discover Patient Records HRP/HIP-\u003e\u003eHIE-CM:Returns care contexts note right of HIE-CM: in 10 seconds PHR App-\u003e\u003eHIE-CM: Link care contexts \u003cbr/\u003e POST/v1/links/link/init HRP/HIP--\u003e\u003eUser: Send OTP to verified mobile number PHR App-\u003e\u003eHIE-CM: Verify Link \u003cbr/\u003e POST/v1/links/link/confirm/{linkRefNumber} HIE-CM-\u003e\u003eHRP/HIP: Confirm \u0026 Link Care Context API Collection 1. Search Providers\nBASE URLs: https://dev.abdm.gov.in/cm\n2. Search Government Programs\nBASE URLs: https://dev.abdm.gov.in/cm\n3. Discover Patient\nBASE URLs: https://dev.abdm.gov.in/cm\n4. Link Care Contexts\nBASE URLs: https://dev.abdm.gov.in/cm\n5. Verify Link\nBASE URLs: https://dev.abdm.gov.in/cm\n","description":"","tags":null,"title":"Discovery \u0026 Linking Records","uri":"/abdm-docs/5-building-a-phr-app/discovery-linking-records/index.html"},{"content":"PHR Application Functionalities of PHR Applications: Creation of ABHA address, Subscriptions for notifications, helping users manage consents, upload of user scanned records and more\nTest Cases Using Mobile Number - Registration Flow : ABHA address creation with mobile number flow (Self Declared Flow - without KYC)\nS.No Functionality Test Scenario Steps To Be Executed 1 Mandatory Click on “Register” to create a new ABHA address 2 Mandatory Select the “Mobile Number option to create ABHA address via mobile number and click on “Continue” button 3 Mandatory Enter the mobile number and click on “Continue” button 4 Mandatory Validate mobile OTP received on entered mobile number Check if an individual receives mobile OTP to validate mobile no 5 Mandatory Resend mobile OTP after 60 seconds post clicking on “Resend OTP Check if an individual receive mobile OTP after 60 seconds and an individual is able to validate mobile number 6 Mandatory Display ABHA addresses linked with entered validated mobile number. So that an individul can select an ABHA address in which one wishes to login. Check if all ABHA addresses linked to mobile no are displayed to select any one and login in PHR application 7 Mandatory Click on “Still want to create a new ABHA address” for creation a new ABHA address 8 Mandatory Fill following profile details such as: • First Name • Middle Name • Last Name • Date of Birth - Day, Month and Year • Gender • Email ID • Address • State • District • Pin Code Mandatory fields: • First Name • Year (within Date of Birth) • Gender • Address • State • District • Pin Code. And Optional fields: • Middle Name • Last Name • Day (within Date of Birth) • Month (within Date of Birth) • Email ID 9 Mandatory Click on checkbox beside “User Information Agreement” to voluntary share profile details with NHA for creating ABHA address and click on “Continue” button Check if check box is selected beside user information agreement before clicking on “continue” button . 10 Mandatory Create ABHA address as per ABHA address policy. ABHA address policy: Minimum length 4 including alphabet, number \u0026 dot (.) are allowed. Number cannot be in beginning and dot (.) cannot be in beginning \u0026 end. Check that adherence to ABHA address policy is must to create ABHA address. 11 Optional Suggestions to create ABHA address as per an individual’s name \u0026 username of e-mail ID needs to be displayed while creating it. Check if suggestions of ABHA address are displayed while creating it. Display “already taken” if entered ABHA address is already created by some other individual. Because no two ABHA address can be same. 12 Mandatory Create password, confirm password and click on “Submit” button. Password needs to be created as per password policy. Password policy: 8 characters or longer, one A-Z, one a-z, one 0-9, atleast one symbol, no space and not more than 2 consecutive characters or keyboard keys. Check that adherence to password policy is must to create ABHA address. 13 Mandatory Congratulation Screen is displayed stating “Congratulations! ABHA address is created successfully \" and click on “Login” button Check that congratulations message is displayed after creating ABHA address \u0026 password. Also, an individual should able to login with updated ABHA address and password. 14 Mandatory Provide Consent after clicking on login button. Click on “I Agree” against “Personal Data Processing Consent Form”. Post this user is able to successfully Login Check that when an individual login for first time, post agreeing to the “Personal Data Processing Consent Form” an individual is able to login. ABHA address creation with email ID flow - Registration Flow : ABHA address creation with email ID flow (Self Declared Flow - without KYC)\nS.No Functionality Test Case Steps To Be Executed 1. Mandatory Click on “Register” to create a new ABHA address 2. Mandatory Select the “Email ID” option to create ABHA address via email ID and click on “Continue” button 3. Mandatory Enter the e-mail id and click on “Continue” button 4. Mandatory Validate e-mail OTP received on entered e-mail ID Check if an individual receives e-mail OTP to validate e-mail ID 5. Mandatory Resend e-mail OTP after 60 seconds post clicking on “Resend OTP Check if an individual receive e-mail OTP after 60 seconds and an individual is able to validate the e-mail ID 6. Mandatory Display ABHA addresses linked with entered validated e-mail id. So that an individul can choose an ABHA address in which one wishes to login. Check if all ABHA addresses linked to e-mail ID are displayed to select any one and login in PHR app 7. Mandatory Click on “Still want to create a new ABHA address” for creation a new ABHA address 8. Mandatory Fill following profile details such as: • First Name • Middle Name • Last Name • Date of Birth - Day, Month and Year • Gender • Email ID • Address • State • District • Pin Code Check that an individual can create ABHA address only when mandatory fields are filled. 9. Mandatory Click on checkbox beside “User Information Agreement” to voluntary share profile details with NHA for creating ABHA address and click on “Continue” button Check if check box is selected beside user information agreement before clicking on “continue” button . 10. Mandatory Create ABHA address as per ABHA address policy. ABHA address policy: Minimum length 4 including alphabet, number \u0026 dot (.) are allowed. Number cannot be in beginning and dot (.) cannot be in beginning \u0026 end. Check that adherence to ABHA address policy is must to create ABHA address. 11. Optional Suggestions to create ABHA address as per an individual’s name \u0026 username of e-mail ID needs to be displayed while creating it. Check if suggestions of ABHA address are displayed while creating it. Display “already taken” if entered ABHA address is already created by some other individual. Because no two ABHA address can be same. 12. Mandatory Create password, confirm password and click on “Submit” button. Password needs to be created as per password policy. (Check remark column) Password policy: 8 characters or longer, one A-Z, one a-z, one 0-9, atleast one symbol, no space and not more than 2 consecutive characters or keyboard keys. Check that adherence to password policy is must to create ABHA address. 13. Mandatory Congratulation Screen is displayed stating “Congratulations! ABHA address is created successfully \" and click on “Login” button Check that congratulations message is displayed after creating ABHA address \u0026 password. Also, an individual should able to login with updated ABHA address and password. 14. Mandatory Click on “I Agree” against “Personal Data Processing Consent Form”. Post this user is able to successfully Login Check that when an individual login for first time, post agreeing to the “Personal Data Processing Consent Form” an individual is able to login. Using ABHA Number - Registration Flow : ABHA address creation with ABHA number flow (KYC verified flow)\nS.No Functionality Test Scenario Steps To Be Executed 1. Mandatory Click on “Register” to create a new ABHA address 2. Mandatory Select the “ABHA number” option to create ABHA address via ABHA number and click on “Continue” button 3. Mandatory Enter the 14 - digit ABHA number and click on “Continue” button 4. Mandatory Validate ABHA number by entering aadhar OTP/mobile OTP received on mobile number linked with entered ABHA number. Check if an individual receives aadhar OTP/mobile OTP and able to validate the ABHA no. 5. Mandatory Resend aadhar OTP / mobile OTP after 60 seconds. Check if an individual receive aadhar OTP / mobile OTP after 60 seconds and an individual is able to validate the ABHA no by entering the OTP. 6. Mandatory Display ABHA addresses linked with entered validated ABHA number. So that an individul can select an ABHA address in which one wishes to login. Check if all ABHA addresses linked to ABHA no are displayed to select any one and login in PHR app 7. Mandatory Click on “Still want to create a new ABHA address” for creation a new ABHA address 8. Mandatory Following profile details are auto-populated from ABHA portal: • First Name • Middle Name • Last Name • Date of Birth - Day, Month and Year • Gender • Mobile number • Email ID • Address • State • District • Pin Code Check that all profile details are popultated from ABHA side to PHR app. 9. Mandatory Click on checkbox beside “User Information Agreement” to voluntary share profile details with NHA for creating ABHA address and click on “Continue” button. Check if check box is selected beside user information agreement before clicking on “continue” button . 10. Mandatory Create ABHA address. ABHA address needs to be created as per ABHA address policy. ABHA address policy: Minimum length 4 including alphabet, number \u0026 dot (.) are allowed. Number cannot be in beginning and dot (.) cannot be in beginning \u0026 end. Check that adherence to ABHA address policy is must to create ABHA address. 11. Optional Suggestions to create ABHA address as per an individual’s name \u0026 username of e-mail ID needs to be displayed while creating it. Check if suggestions of ABHA address are displayed while creating it. Display “already taken” if entered ABHA address is already created by some other individual. Because no two ABHA address can be same. 12. Mandatory Create password, confirm password and click on “Submit” button. Password needs to be created as per password policy. Password policy: 8 characters or longer, one A-Z, one a-z, one 0-9, atleast one symbol, no space and not more than 2 consecutive characters or keyboard keys. Check that adherence to password policy is must to create ABHA address. 13. Mandatory Congratulation Screen is displayed stating “Congratulations! ABHA address name@abdm is created successfully \" and click on “Login” button Check that congratulations message is displayed after creating ABHA address \u0026 password. Also, an individual should able to login with updated ABHA address and password. 14. Mandatory Click on “I Agree” against “Personal Data Processing Consent Form”. Post this user is able to successfully Login Check that when an individual login for first time, post agreeing to the “Personal Data Processing Consent Form” an individual is able to login. ABHA number creation with KYC - ABHA number creation with KYC such as aadhar, DL, etc. Suppose an individual is creating ABHA number using Aadhar as KYC\nS.No Functionality Test Case Steps To Be Executed 1. Mandatory Visit - https://abha.abdm.gov.in/ and click on “Create ABHA number 2. Mandatory Click on option (aadhar / DL) through which an individual wants to create the ABHA no. Suppose an individual select aadhar as an option to create the ABHA no. Ensure that aadhar is linked to mobile no as aadhar OTP authentication is needed to create ABHA no with aadhar flow. 3. Mandatory Enter 12 - digit aadhar no and provide consent to voluntary share aadhar demographic information for creation of ABHA number Check that aadhar OTP is received on mobile no linked with aadhar 4. Mandatory Validate the entered aadhar no by entering the OTP received on mobile no linked to aadhar. Check that validation of aadhar no is successful after entering the correct aadhar OTP 5. Mandatory Resend aadhar OTP after 60 seconds. Check if an individual receive aadhar OTP after 60 seconds and an individual is able to validate the ABHA no by entering the OTP. 6. Mandatory ABHA number card is created using aadhar demographic information. Click on “Download ABHA number card” to download the ABHA number card. All details in the ABHA number card are as per aadhar KYC. Check that ABHA number card is created and it can also be downloaded. Also, check that all information in card is as per aadhar KYC. Login Flow\nS.No Functionality Test Case Steps To Be Executed 1. Mandatory Login with mobile number flow Enter mobile number linked with ABHA address 2. Mandatory Login with mobile number flow Validate mobile number via mobile OTP Check if an individual receives mobile OTP and able to login with mobile number 3. Mandatory Login with mobile number flow Resend Mobile OTP after 60 seconds post clicking on “Resend OTP”. 4. Mandatory Login with mobile number flow Display ABHA addresses linked with entered validated mobile number. So that an individul can select an ABHA address in which one wishes to login. 5. Mandatory Login with e-mail ID flow Enter e-mail ID linked with ABHA address 6. Mandatory Login with e-mail ID flow Validate e-mail ID via e-mail OTP Check if an individual receive email OTP and login with e-mail OTP 7. Mandatory Login with e-mail ID flow Resend e-mail OTP after 60 seconds post clicking on “Resend OTP Check if an individual receive email OTP after 60 seconds and login with e-mail OTP 8. Mandatory Login with e-mail ID flow Display ABHA addresses linked with entered validated e-mail ID. So that an individul can select an ABHA address in which one wishes to login. Check if all ABHA addresses linked with entered email ID are displayed and an individual is able to login in selected ABHA address 9. Mandatory Login with easy to remember ABHA address (name@abdm) flow Enter easy to remember ABHA address - name@abdm 10. Mandatory Login with easy to remember ABHA address (name@abdm) flow Validate ABHA address via password / mobile OTP / e-mail OTP / aadhar OTP as per auth mode Check if an individual is able to login with easy to remember ABHA address via password 11. Mandatory Login with easy to remember ABHA address (name@abdm) flow Validate ABHA address via password / mobile OTP / e-mail OTP / aadhar OTP as per auth mode Check if an individual is able to login with easy to remember ABHA address via mobile OTP / e-mail OTP / aadhar OTP as per auth mode 12. Mandatory Login with easy to remember ABHA address (name@abdm) flow Resend aadhar OTP / mobile OTP / e-mail OTP after clicking on “Resend OTP Check if an individual receive aadhar OTP / mobile OTP/e-mail OTP after 60 seconds and an individual is able to login post validation of ABHA address 13. Mandatory Login with default ABHA address (14-digit@abdm) flow Enter default ABHA address such as 14-digit@abdm 14. Mandatory Login with default ABHA address (14-digit@abdm) flow Validate ABHA address via mobile OTP / aadhar OTP Check if aadhar OTP / mobile OTP is received and post validation of ABHA number, an individual is able to successfully login 15. Mandatory Login with default ABHA address (14-digit@abdm) flow Resend aadhar OTP / mobile OTP after clicking on “Resend OTP” Check if an individual receive aadhar OTP / mobile OTP after 60 seconds and an individual is able to login post validation of ABHA address 16. Mandatory Login with ABHA number flow Enter 14 digit ABHA number 17. Mandatory Login with ABHA number flow Validate ABHA number via aadhar OTP / mobile OTP Check if aadhar OTP / mobile OTP is received and post validation of ABHA number, an individual is able to successfully login 18. Mandatory Login with ABHA number flow Resend aadhar OTP / mobile OTP after clicking on “Resend OTP Check if an individual receive aadhar OTP / mobile OTP after 60 seconds and an individual is able to login post validation of ABHA number 19. Mandatory Reset Password Login with any mode - mobile number / email ID / default ABHA address / easy to remember ABHA address / ABHA number Check if password can be updated by an individual post login with any mode 20. Mandatory Reset Password Post successful login, click on reset password withing setting of the menu bar 21. Mandatory Reset Password Create password as per password policy. Password policy: 8 characters or longer, one A-Z, one a-z, one 0-9, atleast one symbol, no space and not more than 2 consecutive characters or keyboard keys. Check if password is created as per password policy 22. Mandatory Reset Password Confirm password Check new password is created only after same password is confirmed again 23. Mandatory Reset Password A message is displayed called “Your password is successfully changed” Check if an individual new password is created by login with new password Health and Facility records linking: User initiated linking flow (Discovery Flow) - Complete Discovery of HIP, linking, fetching and viewing of records in PHR app\nS.No Functionality Test Case Steps To Be Executed 1. Mandatory Link HIP After Login : Click on “Link my Health Records” tab in “My Records” tab Click on “Link my Health Records” tab / “+” symbol in “Linked Facility” tab to search records in HIP 2. Mandatory Discover HIP Search HIP ’s such as hospital, clinic, lab to discover them based on typed string by the individual When individual will search the visited facilty (HIP), the entire facilty name with complete address will be discovered by the individual. This “Search” is based on string, i.e HIP name entered by the patient in the search bar of PHR app. 3. Mandatory Display of patient details After searching facility: The details visible to patient on the PHR app are: Verified mobile number, ABHA address, ABHA number, Patient ID, Full Name, Year of Birth, Gender. Details of Patient will be visible when individual search for the HIP in PHR app while user initiated linking flow. 4. Mandatory Fill Patient ID (Optional) This customizable lable is: Patient ID - In case of linking health records created at health facility. And this field is optional for patient to enter. Check, if exact match of record is found after entering correct Patient ID 5. Mandatory Matching of API specifications to link record Click on “Fetch Records”. After matching following fields, records will be fetched from facility (HIP) to PHR app: Name (Mandatory), Year of Birth (Mandatory), Gender (Mandatory), Mobile Number (Mandatory), Patient ID (Optional) Ensure that already linked care context should not be discovered in PHR mobile app. If all care context of discovered facilty are already linked, then display message called “All your existing records are linked. No additional records availaible for linking”. Ensure that the linked care context is shown in the “Linked Facility” tab of the PHR mobile app 6. Mandatory Link records Display of records details like HI type Display of all correct details of records, after matching of API specifications. Select the record which patient wants to link and click on “Link Selected” 7. Optional Fill mobile OTP received to complete linking of record. Mobile OTP will be received once individual clicks on fetch records. After successful validation of OTP, display message called “Records are successfully linked”. This OTP is sent by HIP to the patient’s mobile. Fill mobile OTP for successful linking of facility. Error message display, for following scenarios : Scenario 1: If there is Communication Gap, between HIP and individual – Due to some technical issue at HIP end like if server is down then, error message is displayed as “Couldn’t Connect: We are sorry. Unable to contact your hospital. Please try again later”. Scenario 2: If individual have never visited the hospital – An error message is displayed as “No health records found”. Scenario 3: Records of all visits are already linked and there is nothing new to link - – An error message is displayed as “No new health record to link: Records of all visits are already linked and there is nothing new to link 8. Mandatory Linked facility will be visible in “Linked Facility” tab. Click on “Pull Records” button to fetch and view records. Ensure that the patient’s health-records are getting fetched. 1. Check that PHR app sends data transfer request to HIP within 5 minutes after an individual click on “Pull Records” button. 2. Ensure that the patient health records are fetched within 2 hours in the PHR mobile app. Ensure that the patient’s health-records are fetched without ERRORED” 9. Optional Display message regarding fetching of records may take time in “My Records” tab 1. Keep “I” button in “My Records”, so that message is displayed regarding fetching of records may take time when patient hovers over i button. 2. Check that proper error or status message will be displayed if records are taking time in fetching. For e.g. Refresh to fetch record, Data fetch in progress etc.. Since, fetching of records take time. Display message called “Recently linked records might take some time to show” when patient hover over “i button” in “My Records” tab. 10. Optional Records will be displayed in “My Records” tab. Click on the attached report to view the health record. After clicking on record: Details of health record will be displayed alongwith an attachment consisting of record. Details of health record included structured data such as: Facility Name, Visit type, Prescribed By, Date and Time 11. Optional View record in mobile device Record will open when individual clicks on the attachment consisting health record Records will open in the device and patient can view it Health Programme records linking, fetching and viewing of records: User initiated linking (Discovery Flow)\nS.No Functionality Test Case Steps To Be Executed 1. Mandatory Link Programme After Login : Click on “Link my Health Records” tab in “My Records” section Click on “Link my Health Records” tab / “+” symbol in “Linked Facility” tab to search records in HIP. 2. Mandatory Select Health Programme Select programme name whose record patient wants to link, fetch and view in PHR app. Currently, government health programmes such as “CoWIN”, “AB-PMJAY”, e-Sanjeevani OPD, e-Sanjeevani HWC, RCH programme. Going forward, other health programmes will also integrate with PHR app” Check, if patient is able to select the integrated government health programme with the PHR app. 3. Mandatory Display of patient details After clicking on programme name, the details visible to patient are: Verified mobile number, ABHA address, ABHA number, CoWIN registered mobile no (Customizable Label - Optional), Full Name, Year of Birth, Gender In User initiated linking (Discovery Flow), details of patient will be visible when individual select government health programme in PHR app. 4. Mandatory Fill PM-JAY ID (Optional) This customizable label is: 1. PMJAY ID - In case of linking health records from AB-PMJAY programme. 2. CoWIN Registered Mobile No - In case of linking health records from CoWIN. Check, if exact match of patient records are found, after entering correct PMJAY ID / CoWIN registered mobile number 5. Mandatory Matching of API specifications “Click on “Fetch Records”. After matching following fields, records will be fetched from programme to PHR mobile app: Name (Mandatory), Year of Birth (Mandatory), Gender (Mandatory), Mobile Number (Mandatory), Patient ID (Optional) Ensure that already linked care context should not be discovered in PHR mobile app. If all care context of selected government health programme are already linked, then display message called “All your existing records are linked. No additional records availaible for linking”. Ensure that the linked care context is shown in the “Linked Facility” tab of the PHR mobile app 6. Mandatory Link records Display of records details such as Dose 1, Dose 2 and Dose 3 (Precautionary dose) in case of CoWIN programme. Display of all correct details of records, after matching of API specifications 7. Mandatory Display of records details such as Dose 1, Dose 2 and Dose 3 (Precautionary dose) in case of CoWIN programme. Select the record which patient wants to link and click on “Link Selected” 8. Optional Fill mobile OTP received to complete linking of record. Mobile OTP will be received once individual clicks on fetch records. After successful validation of OTP, display message called “Records are successfully linked”. This OTP is sent by government health programme to the patient’s mobile. Fill mobile OTP for successful linking of facility. 9. Optional Fill mobile OTP received to complete linking of record. Mobile OTP will be received once individual clicks on fetch records. After successful validation of OTP, display message called “Records are successfully linked”. This OTP is sent by government health programme to the patient’s mobile. Fill mobile OTP for successful linking of facility 10. Mandatory Linked programme will be visible in “Linked Facility” tab. Click on “Pull Records” button to fetch and view records Ensure that the patient’s health-records are getting fetched 1. Check that PHR app sends data transfer request to HIP within 5 minutes after an individual click on “Pull Records” button. 2. Ensure that the patient health records are fetched within 2 hours in the PHR mobile app 11. Mandatory Linked programme will be visible in “Linked Facility” tab. Click on “Pull Records” button to fetch and view records Ensure that the patient’s health-records are getting fetched Ensure that the patient’s health-records are fetched without ERRORED 12. Optional Display message regarding fetching of records may take time in “My Records” tab. 1. Keep “I” button in “My Records”, so that message is displayed regarding fetching of records may take time when patient hovers over i button. 2. Check that proper error or status message will be displayed if records are taking time in fetching. For e.g. Refresh to fetch record, Data fetch in progress etc. Since, fetching of records take time. Display message called “Recently linked records might take some time to show” when patient hover over “i button” in “My Records” tab. 13. Optional Records will be displayed in “My Records” tab. Click on the attached report to view the health record. After clicking on record: Details of health record will be displayed alongwith an attachment consisting of record Details of health record included structured data such as: Facility Name, Visit type, Prescribed By, Date and Time 14. Optional View record in mobile device Record will open when individual clicks on the attachment consisting health record Records will open in the device and patient can view it HIP initiated linking flow - When health records are linked with ABHA address at the health facility / health programme\nS.No Functionality Test Case Steps To Be Executed 1 Mandatory Post linking of health records with ABHA address by the HIP with patient consent, the individual can view the health records on the PHR mobile app Health data will be visible in PHR app once HIP link health records with the ABHA address. Once Individual visits the hospital. • ABHA address is shared with the health programme / health facility. • Individual validates the ABHA address with the mobile OTP. • Post linking of health records with ABHA address by the HIP, the individual can open any PHR app and click on “Pull Records” button against the visited health programme / health facility, where the record is created and linked to ABHA address to view the record in mobile device. Sharing of health records with patient’s consent to the HIU\nS.No Functionality Test Case Steps To Be Executed 1 Mandatory HIU should be able to view the health data of a APPROVED consent request Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient.(HI Type = DiagnostocReport Structured) 2 Mandatory HIU should be able to view the health data of a APPROVED consent request Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient.(HI Type = DiagnostocReport Un-Structured) 3 Mandatory HIU should be able to view the health data of a APPROVED consent request Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient.(HI Type = Prescription-Structured) 4 Mandatory HIU should be able to view the health data of a APPROVED consent request Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient.(HI Type = Prescription-Un-Structured) 5 Mandatory HIU should be able to view the health data of a APPROVED consent request Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient.(HI Type = DischargeSummary-Structured) 6 Mandatory HIU should be able to view the health data of a APPROVED consent request Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient.(HI Type = DischargeSummary-Un-Structured) 7 Mandatory HIU should be able to view the health data of a APPROVED consent request Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient.(HI Type = CosultingNote-Structured) 8 Mandatory HIU should be able to view the health data of a APPROVED consent request Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. (HI Type = CosultingNote-Un-Structured) 9 Mandatory HIU should be able to view the health data of a APPROVED consent request Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. (HI Type = Immunization record-Structured) 10 Mandatory HIU should be able to view the health data of a APPROVED consent request Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. (HI Type = Immunization record-Un-Structured) 11 Mandatory HIU should be able to view the health data of a APPROVED consent request Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient/ (HI Type = Wellness Record-Structured) 12 Mandatory HIU should be able to view the health data of a APPROVED consent request Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. (HI Type = Wellness Record-Un-Structured) 13 Mandatory HIU should be able to view the health data of a APPROVED consent request Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. (HI Type = Health Record-Structured) 14 Mandatory HIU should be able to view the health data of a APPROVED consent request Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. (HI Type = Health Record-Un-Structured) Display Profile Details with status as KYC Verified / Self-Declared\nS.No Functionality Test Case Steps To Be Executed 1 Mandatory Showing individual’s profile details in the PHR app Individual’s profile is displayed in the PHR app with their status such as KYC verified and Self-Declared. Display all profile details filled to the individual, when individual click on Profile after Login. Also Download ABHA address card in the PDF format\nS.No Functionality Test Case Steps To Be Executed 1 Mandatory Download ABHA address card Post clicking on “QR Code” icon, an individual can scan QR Code, share ABHA address card and download ABHA address card Following fields will be displayed in the ABHA address card: Profile Photo, Full Name, ABHA number - It will be displayed if, 14-digit Health ID number is linked to the ABHA address. ABHA number is displayed as XX-XXXX-XXXX-3421 (Hide starting 12 digits of ABHA number), ABHA address - It will be displayed as XXXXam@abdm (Hide starting alphabets of ABHA address), QR Code, Date of Birth, Gender, Mobile Number - It will be displayed as XXXXXX2278 (Hide starting 6 digits of ABHA number) Consent Pin\nS.No Functionality Test Case Steps To Be Executed 1 Mandatory Set Consent Pin Validate OTP received on registered mobile number Check that OTP is received on registered mobile number. 2 Mandatory Set Consent Pin Validate OTP received on registered mobile number Resend OTP option is provided 3 Mandatory Set Consent Pin Enter 4 digit consent pin Check that only 4 digit consent pin is accepted 4 Mandatory Set Consent Pin Confirm Consent Pin Re-enter the consent pin to confirm the consent pin. Check that confirmation of consent pin is taken by re-entering it. 5 Mandatory Set Consent Pin Display message, so that an individual knows that consent pin is set successfully Display message “Congratulations! Your consent pin is successfully updated”. Below this message “Go Back To Home Screen” tab is provided to navigate the individual to home screen. 6 Mandatory Reset Consent Pin Enter 4 digit old consent pin Check if old consent pin entered is correct 7 Mandatory Reset Consent Pin Enter 4 digit new consent pin Check that only 4 digit consent pin are accepted 8 Mandatory Reset Consent Pin Confirm new consent pin Re-enter the consent pin to confirm the consent pin. Check that confirmation of consent pin is taken by re-entering it. 9 Mandatory Reset Consent Pin Display message, so that an individual knows that consent pin is updated Display message Congratulations! Your new consent pin is successfully updated. Below this message “Go Back To Home Screen tab is provided to navigate the individual to home screen. 10 Mandatory Forgot Consent Pin Enter OTP Check that OTP is received on registered mobile number. 11 Mandatory Forgot Consent Pin Resend OTP, if OTP is not received in 60 seconds Check that resend OTP option is provided, if OTP is not received on mobile device 12 Mandatory Forgot Consent Pin Enter 4 digit new consent pin 4 digit consent pin is only accepted 13 Mandatory Forgot Consent Pin Confirm new consent pin Re-enter the consent pin to confirm the consent pin. Check that confirmation of consent pin is taken by re-entering it. 14 Mandatory Forgot Consent Pin Display message, so that an individual knows that consent pin is updated Display message “Congratulations! Your new consent pin is successfully updated”. Below this message “Go Back To Home Screen” tab is provided to navigate the individual to home screen. Tabs in PHR app (My Records/Linked Facility/Consents)\nS.No Functionality Test Case Steps To Be Executed 1 Mandatory “Requests” section in the “Consents” tab of PHR app 1) Requested - Not yet any action is taken by individual on consent request received from HIU to PHR app. All request (consent / subscription / locker) sent by HIU to patiet are seen in “Requested” dropdown within “Requests” section of PHR app 2 Mandatory “Requests” section in the “Consents” tab of PHR app 2) Denied - Individual have “Denied” consent request received from HIU to PHR app. All denied request (consent / subscription / locker) by patient are seen in “Denied” dropdown within “Requests” section of PHR app. 3 Mandatory “Requests” section in the “Consents” tab of PHR app 3) Expired - Requests is expired because patient have not acted on consent request received in PHR app within the time duration set by HIU All expired request (consent / subscription / locker) by patient are seen in “Expired” dropdown within “Requests” section of PHR app. 4 Mandatory “Approved” section in the “Consents” tab of PHR app 1) Granted - Patient had granted the consent request received from HIU to PHR app All granted request (consent / subscription / locker) by patient are seen in “Granted” dropdown within “Approved” section of PHR app. 5 Mandatory “Approved” section in the “Consents” tab of PHR app 2) Revoked - Patient had revoked consent requests after granting it in PHR app. All revoked request (consent / subscription / locker) by patient are seen in “Revoked” dropdown within “Approved” section of PHR app. 6 Mandatory View patient health records in “My Records” tab of PHR app To view records, post linking and fetching from healthcare providers (health locker, health facility and health programme) Click on record fetched in the “My Records” tab 7 Mandatory View patient health records in “My Records” tab of PHR app To view records, post linking and fetching from healthcare providers (health locker, health facility and health programme) Details of records are viewed with attachment 8 Mandatory View patient health records in “My Records” tab of PHR app To view records, post linking and fetching from healthcare providers (health locker, health facility and health programme) Click on the attachment to view the health record / report in the device 9 Mandatory “Linked Facility” tab in PHR app Linked providers includes health lockers health facility and health programme Edit Subscription Request/Disable auto approval request\nS.No Functionality Test Case Steps To Be Executed 1 Mandatory Edit active subscription request Already granted subscription request can be edited Check if HI types, types of visit and time period can be edited and saved by clicking on “Save Changes” button” 2 Mandatory Disable auto approval requests Already granted auto approval policy can be disabled Check if already granted auto approval policy for health locker can be disabled by clickicking on “Disable” button. Post disble of auto - approval policy Link/Unlink ABHA no to the ABHA address\nS.No Functionality Test Case Steps To Be Executed 1 Mandatory Link ABHA no to the ABHA address Click on “Link ABHA Number” option provided beside “Self Declared” in home screen 2 Mandatory Link ABHA no to the ABHA address Enter 14-digit ABHA no 3 Mandatory Link ABHA no to the ABHA address Validate ABHA no via aadhar OTP / mobile OTP Check that an individual is able to validate ABHA no via both aadhar OTP / mobile OTP 4 Mandatory Link ABHA no to the ABHA address Resend OTP if OTP is not received in 60 seconds 5 Mandatory Link ABHA no to the ABHA address Displaye message: “Congratulations! Your ABHA number is now linked to your existing ABHA address. ABHA number is visible on your profile. Check that post OTP validation of ABHA no 6 Mandatory Link ABHA no to the ABHA address Click on “Go back to home screen” tab to go back to profile Check that after clicking on “Go back to home screen” tab 7 Mandatory Unlink ABHA no to the ABHA address Click on “Unlink ABHA Number” option provided beside 14-digit ABHA number in home screen. 8 Mandatory Unlink ABHA no to the ABHA address Display confirmation message: “Even after unlinking ABHA number you will still be able to share your health records with healthcare providers through ABHA address. Do you still want to unlink ABHA number XX-XXXX-XXXX-XXXX with your existing ABHA address?” (Yes/No) 9 Mandatory Unlink ABHA no to the ABHA address Validate ABHA no by selecting any one of the option - “OTP is sent on mobile number linked with your aadhar” / “OTP on mobile number linked with your ABHA number Check that an individual is able to validate ABHA no via OTP received on mobile no linked with aadhar / ABHA no 10 Mandatory Unlink ABHA no to the ABHA address Resend OTP if OTP is not received in 60 seconds 11 Mandatory Unlink ABHA no to the ABHA address Display message: “ABHA number is unlinked to existing ABHA address. Now ABHA number is not visible in your profile 12 Mandatory Unlink ABHA no to the ABHA address Click on “Go back to home screen” tab to go back to profile Check that after clicking on “Go back to home screen” tab Edit Profile\nS.No Functionality Test Case Steps To Be Executed 1 Mandatory Edit profile for KYC verified profiles Update mobile number Mobile OTP is received on updated mobile no. Post mobile OTP validation, mobile no is updated. 2 Mandatory Edit profile for KYC verified profiles Update email ID E-mail OTP is received on updated e-mail ID. Post e-mail OTP validation, e-mail ID is updated. 3 Mandatory Edit profile for KYC verified profiles Update address All fields of address such as address line 1, district, state and pin-code can be updated. 4 Mandatory Edit profile for Self-Declared profile Update Photo Photo can be edited by an individul taking the picture from mobile camera / upload photo from gallery of the device 5 Mandatory Edit profile for Self-Declared profile Update Full Name Update First Name, Middle name and Last Name 6 Mandatory Edit profile for Self-Declared profile Update Gender Update Gender 7 Mandatory Edit profile for Self-Declared profile Update DoB Update Day, Month and Year 8 Mandatory Edit profile for Self-Declared profile Update Mobile No Mobile OTP is received on updated mobile no. Post mobile OTP validation, mobile no is updated. 9 Mandatory Edit profile for Self-Declared profile Update Email ID E-mail OTP is received on updated e-mail ID. Post e-mail OTP validation, e-mail ID is updated. 10 Mandatory Edit profile for Self-Declared profile Update Address All fields of address such as address line 1, district, state and pin-code can be updated. Deep Link Flow : Send SMS to patient mobile to initiate record linking and fetching in PHR app\nS.No Functionality Test Case Steps To Be Executed 1 Mandatory In case patient visits the health facility and do not provide the ABHA address for linking of health records. Then, ABDM compliant health facility will notify ABDM when there is a new health record created of the patient. ABDM will send a deep link SMS is to the patient’s mobile for fetching and viewing records in PHR app using User Initiated Linking Flow (Discovery Flow) Patient visits a health facility and registers by providing Name, DoB, Gender and Mobile. Patient does not share any ABHA Address with the facility. 2 Mandatory In case patient visits the health facility and do not provide the ABHA address for linking of health records. Then, ABDM compliant health facility will notify ABDM when there is a new health record created of the patient. ABDM will send a deep link SMS is to the patient’s mobile for fetching and viewing records in PHR app using User Initiated Linking Flow (Discovery Flow) If the Health Facility is participating in ABDM, then it will notify ABDM when there is a new health record for this patient. Only the mobile number and the ID of the facility is notified. Facilities are identified by the facility’s HIPCODE. This can be obtained by registering the facility using the Health Facility Registry and linking the facility to a ABDM approved Health Repository Provider Software. 3 Mandatory In case patient visits the health facility and do not provide the ABHA address for linking of health records. Then, ABDM compliant health facility will notify ABDM when there is a new health record created of the patient. ABDM will send a deep link SMS is to the patient’s mobile for fetching and viewing records in PHR app using User Initiated Linking Flow (Discovery Flow) ABDM will send an SMS to the user with a deep link as shown below: Dear Madam/Sir, (facility name) is now participating in Ayushman Bharat Digital Mission (ABDM). Your report at this facility is now ready. See your record by clicking on on phr.abdm.gov.in/uhi/(hipcode) ABDM 4 Mandatory In case patient visits the health facility and do not provide the ABHA address for linking of health records. Then, ABDM compliant health facility will notify ABDM when there is a new health record created of the patient. ABDM will send a deep link SMS is to the patient’s mobile for fetching and viewing records in PHR app using User Initiated Linking Flow (Discovery Flow) Clicking on the link will show the list of all ABDM compliant PHR applications. Post clicking on deep link by patient\nUse Case 1: In case ABDM compliant PHR application is not installed in PHR app, then user is redirected to download and install it from play store/app store.”\nS.No Functionality Test Case Steps To Be Executed 1 Mandatory Post clicking on deep link by patient Check that, if no ABDM compliant PHR application is installed in phone - Navigate patient to play store / app store to install the selected PHR application from the list of all ABDM compliant PHR applications. 2 Mandatory Post clicking on deep link by patient Check that, post installing the PHR app. New user is able to create the ABHA address and Password by providing basic details such as Nma, DoB, Gender, Mobile No., Address Use Case 2: In case ABDM compliant PHR application is already installed in PHR app, then app will directly launch and initiate the User Initiated Linking (Discovery Flow)\nS.No Functionality Test Case Steps To Be Executed 1 Mandatory Post clicking on deep link by patient Check that selected PHR app from the list of all ABDM compliant PHR app’s is launched successfully. 2 Mandatory Post clicking on deep link by patient Check that post launch, PHR app initiates the discovery request with HIP where patient health records were created Scan and Share - Scan the QR code to share information.\nScan QR Code at the ABDM compliant health facility to get token number for better queue management and completing faster patient registration.\nThere are 2 use-cases here: 1. Use-case 1: Patients can scan the Health Facility QR Code using any PHR application\nS.No Functionality Test Scenario Steps To Be Executed 1. Mandatory Scan Health QR Code using PHR App Use-case 1 - Patient can scan the QR Code using any PHR app such as ABHA mobile app Check that, patient is able to login to any PHR app such as ABHA mobile app. 2. Mandatory Scan Health QR Code using PHR App Use-case 1 - Patient can scan the QR Code using any PHR app such as ABHA mobile app Check that patient is able to click on “QR Code icon” and scan the QR Code at ABDM compliant health facility. 3. Mandatory Scan Health QR Code using PHR App Use-case 1 - Patient can scan the QR Code using any PHR app such as ABHA mobile app Check that, post clicking on share button, patient profile details are successfully shared to the HMIS side with consent of the patient. 4. Mandatory Scan Health QR Code using PHR App Use-case 1 - Patient can scan the QR Code using any PHR app such as ABHA mobile app Check thatnotification is displayed for patient to know that profile details are successfully shared with the hospital and token number is also displayed. 5. Mandatory Scan Health QR Code using PHR App Use-case 1 - Patient can scan the QR Code using any PHR app such as ABHA mobile app Check that post click on “OK” button, token number is displayed and it is valid for next 30 minutes. This time duration is configurable. 2. Use-Case 2: Scan the QR Code through third party scanner / phone camera\nS.No Functionality Test Scenario Steps To Be Executed 1. Mandatory Scan Health QR Code using 3rd party camera ABDM compliant PHR application is already installed in patient’s mobile and patient is already logged on in the PHR app Check that, QR Code is scanned using phone camera or any 3rd party QR scanner 2. Mandatory Scan Health QR Code using 3rd party camera ABDM compliant PHR application is already installed in patient’s mobile and patient is already logged on in the PHR app Check that installed ABDM Compliant PHR apps and browser is displayed. Patient can click on chrome browser to open the user initiated deep link web page to see the complete listing of ABDM compliant PHR apps. 3. Mandatory Scan Health QR Code using 3rd party camera ABDM compliant PHR application is already installed in patient’s mobile and patient is already logged on in the PHR app Check that post clicking on any one of the PHR apps, patient is redirected to share profile page of PHR app as patient is logged-in to the PHR app 4. Mandatory Scan Health QR Code using 3rd party camera ABDM compliant PHR application is already installed in patient’s mobile and patient is already logged on in the PHR app Check that post clicking on share button, patient profile details are successfully shared to the HMIS side with consent of the patient. 5. Mandatory Scan Health QR Code using 3rd party camera ABDM compliant PHR application is already installed in patient’s mobile and patient is already logged on in the PHR app Check that notification is displayed, that the profile details are shared with the hospital and token number is also displayed. 6. Mandatory Scan Health QR Code using 3rd party camera ABDM compliant PHR application is already installed in patient’s mobile and patient is already logged on in the PHR app Check that post click on “OK” button, token number is displayed and it is valid for next 30 minutes. This time duration is configurable. 7. Mandatory Scan Health QR Code using 3rd party camera ABDM compliant PHR application is already installed in patient’s mobile but patient is not logged on in the PHR app Check QR Code can be scanned using phone camera or any 3rd party QR scanner. 8. Mandatory Scan Health QR Code using 3rd party camera ABDM compliant PHR application is already installed in patient’s mobile but patient is not logged on in the PHR app Check that installed ABDM Compliant PHR apps and browser is displayed. Patient can click on chrome browser to open the user initiated deep link web page to see the complete listing of ABDM compliant PHR apps. 9. Mandatory Scan Health QR Code using 3rd party camera ABDM compliant PHR application is already installed in patient’s mobile but patient is not logged on in the PHR app Post clicking on any one of the PHR apps, patient is redirected to login page of PHR app as patient is not logged-in to the PHR app 10. Mandatory Scan Health QR Code using 3rd party camera ABDM compliant PHR application is already installed in patient’s mobile but patient is not logged on in the PHR app Check that post successful login, patient is redirected to share profile page of PHR app. 11. Mandatory Scan Health QR Code using 3rd party camera ABDM compliant PHR application is already installed in patient’s mobile but patient is not logged on in the PHR app Check that post clicking on share button, patient profile details are successfully shared to the HMIS side with consent of the patient. 12. Mandatory Scan Health QR Code using 3rd party camera ABDM compliant PHR application is already installed in patient’s mobile but patient is not logged on in the PHR app Check that notification is displayed, that the profile details are shared with the hospital and token number is also displayed. 13. Mandatory Scan Health QR Code using 3rd party camera ABDM compliant PHR application is already installed in patient’s mobile but patient is not logged on in the PHR app Check that post click on “OK” button, token number is displayed and it is valid for next 30 minutes. This time duration is configurable. 14. Mandatory Scan Health QR Code using 3rd party camera No ABDM compliant PHR application is installed in patient’s mobile device. Check that QR Code can be scanned using phone camera or any 3rd party QR scanner 15. Mandatory Scan Health QR Code using 3rd party camera No ABDM compliant PHR application is installed in patient’s mobile device. Check that User Initiated Deep Link Web Page opens, and patient can see the complete listing of ABDM compliant PHR apps. 16. Mandatory Scan Health QR Code using 3rd party camera No ABDM compliant PHR application is installed in patient’s mobile device. Check that once patient selects any one of the PHR app, he/she is redirected to Google Play Store / app store to download / install the selected mobile PHR app 17. Mandatory Scan Health QR Code using 3rd party camera No ABDM compliant PHR application is installed in patient’s mobile device. Check that, selected PHR app is launched after installation and patient will create ABHA address and password ","description":"","tags":null,"title":"PHR Application","uri":"/abdm-docs/11-test-cases/phr-app/index.html"},{"content":"Display Health Records For a given granted consent, the idea is to decrypt the received data and then display the health records in longitudinal format (that is, chronological order).\nIf the consent is revoked or expired then:\nHIU should not display the health records of the user\nHIU has to mandatorily delete any copy of health records that they hold\nIf there’s a way to summarise the results, analyse the reports so that it makes it easy for the Doctors / Consultants to make patient analysis easier.\nHere: Sample Report display from Bahmni on PHR App\n","description":"","tags":null,"title":"Display Health Records","uri":"/abdm-docs/4-milestone3/display-health-record/index.html"},{"content":"Encryption and Decryption The aim of encryption is to ensure that only the party (HIU) that has been granted consent by the user (or patient) is able to access the health data information of the user.\nHere’s a high level overview on how the process of encyption and decryption works between HIUs and the HIPs, with the consent of the patient:\nEvery Health Information User (HIU) has 2 keys; that is public \u0026 private key. When the HIU wants to request any HIP for information, the public key of the HIU (along with other key material pertaining to the HIU and the corresponding request) is shared in the request. The HIP validates that the user/patient has granted consent to the HIP (requesting for data) to share health data information. Once that is validated, the HIP will encrypt the data using a shared key (which is generated using HIP’s private key, and HIU’s publick key material) The encrypted data is then shared with HIU, along with the public key of HIP (and other key material). HIUs will have to decrypt data using a shared key (which is generated using HIU’s private key, and HIP’s publick key material). Here’s a sequence diagram to understand the how the flow and exchange of information takes place:\n%%{init:{\"fontSize\": \"1.0rem\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram HIU System-\u003e\u003eGateway:Request for Health Data Gateway-\u003e\u003eHIP Repository:Forward request with HIU public key material\u003cbr/\u003ePOST/health-information/hip/request activate HIP Repository HIP Repository--\u003e\u003eHIP System:notification HIP Repository-\u003e\u003eGateway:POST/health-information/hip/on-request Note over HIP Repository,HIP System:Prepare data (encryption) HIP Repository--\u003e\u003eHIU System: Direct data transfer with HIP public key material\u003cbr/\u003ePOST/datapush-url HIP Repository-\u003e\u003eGateway:Notify on the transfer\u003cbr/\u003ePOST/health-information/notify A detailed coverage on the implemetation principles can be found in this section.\nExample Implementation(s) The use of Fidelius CLI is encouraged for implementing encryption and decryption as a part of Milestone 2 and Milestone 3 (Building HIP and Building HIU) requirements.\nFidelius CLI’s usage is covered in detail in this section.\nFollowing is a short video demonstrating Fidelius CLI’s usage in the context of a HIP.\nThis webinar (from 2:33:52) — also covers the usage of Fidelius CLI in detail, from both the HIP and HIU perspectives.\nUsing Fidelius CLI with other Programming Languages\nWhile Fidelius CLI is a Java implementation, the ./examples folder in the corresponding repository can be perused for guidance on integrating Fidelius CLI (achieved by invoking the binary as a subprocess) in Node JS, Python, Ruby, and PHP codebases.\nNodeJS Python Ruby PHP The above examples can be run using the following commands:\n$ node examples/node/index.js $ python3 examples/python/main.py $ ruby examples/ruby/main.rb $ php examples/php/index.php ","description":"","tags":null,"title":"Encryption \u0026 Decryption","uri":"/abdm-docs/3-milestone2/encryption-decryption/index.html"},{"content":"The Authorization Header Almost all ABDM APIs require you to pass the session token obtained via your client ID / secret in the Authorization HTTP Header. Remember to add the word “Bearer \" in front of the JWT access Token you obtain from the https://dev.abdm.gov.in/gateway/v0.5/sessions\nAuthorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6IC..... ABDM Client IDs \u0026 Call Back URLs Every organization that completes certification with ABDM is issued one or more Client IDs Each Client ID should be used by the organization to register ONE INSTANCE of their ABDM compiliant software One Client ID can be used to register only ONE callback URL. Each instance of the software can hold health records for one or more health facilities Each Health Facility must register in the Health Facility Registry and obtain a HFR ID. This ID also acts as the HIP ID in the ABDM APIs. The HFR login is used by the facility to register the Client ID / Callback URL of the ABDM compliant software being used. Facility id must be passed in X-HIP-ID Header in ABDM apis The HIE-CM APIs are designed to be asyncronous. When you call an API on the gateway, if the request is accepted you will merely get a HTTP 200 response acknowledging that the request has been recorded.\nOnce the response is available, the gateway will invoke the callback URL registered for the Client ID. All integrators must register a call back URL for their Client ID\nThe Sequence diagram below provides an example of the asyncronous nature of the ABDM APIs.\n%%{init:{\"fontSize\": \"1.0rem\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram autonumber participant client as HRP participant gateway as ABDM Gateway Note over client : Each instance of HRP has a client Id from ABDM Note over client : Each instance registers a callback Url client-\u003e\u003egateway: /v0.5/users/auth/fetch-modes gateway-\u003e\u003eclient: Response: 200 (as acknowledgment) Note right of client : asynchronous calls gateway-\u003e\u003eclient: /v0.5/users/auth/on-fetch-modes client-\u003e\u003egateway: Response: 200 (as acknowledgment) Note : Use ISO timestamps for current timestamps while working with apis in postman (For example: 2023-05-09T21:10:36.177Z)\nRegistering your callback URL (Sandbox Only) The callback URL is the url for your site where your application recieves APIs calls from the ABDM gateway. After obtaining the client ID and the secret, use the gateway sessions api to get the accessToken. Use the below api, to register the callback url. Pass the Gateway Session Token in the “Authorization:” header and the callback url in “url:”.\ncurl --location --request PATCH 'https://dev.abdm.gov.in/devservice/v1/bridges' --header 'Content-Type: application/json' --header 'Authorization: Bearer your-access-token-from-gateway-session' --data-raw '{ \"url\": \"https://my-emr-site.in\" } Disclaimer This API is only available in in sandbox. This is configured via Health Facility Registry in production\nAfter registering the callback url, if we fire any API which has a callback, ABDM will post the response of the fired API to that callback url. You can use the /v1/bridge/getServices API to check what is configured for your client ID including the callback URL.\nLinking the HIPs / HIUs ID for a Client ID The HIP code used by ABDM is the same as the health facility registry ID.\nIn the Sandbox you can simply declare a HIP/HIU ID without it being part of the health facility registry. You can use it to link one HIP / HIU ID with your Client ID with no validations.\nNote Make sure you provide a Unique HIP ID and Facility name (Make up a unique id and name). The Sandbox is a shared integration system and currently does not check for duplicate HIP IDs. This will make it easier for you to search and discover your health facility in the PHR app\nAll HIUs including PHR apps need to register a unique HIU code and name.\nCheck your configuration For detailed APIs related to registration with the ABDM gateway\nhttps://sandbox.abdm.gov.in/swagger/ndhm-devservice.yaml\nABDM HTTP Headers A single ABDM Client (also called a Bridge) can support multiple HIPs / HIUs on the same registered URL. In order to clearly identify which HIP / HIU this message was intented to be sent, the Gateway adds the following headers as part its API calls\nThe X-HIP-ID Header – Contains the health facility registry code that is linked to the Client ID The X-HIU-ID Header – Contains the health information user code that is linked to this Client ID The ABDM architecture is designed to support multiple HIE-CMs. Whenever you call any Gateway API you must include a header that tells the gateway which HIE-CM must this request be sent to\nX-CM-ID – Pass ‘sbx’ if you are in the sandbox, Pass ‘abdm’ if you are in production. You must get this from HIE-CM domain name suffixed after the @ symbol in a PHR address. Use Webhook to learn APIs We recommend using a combination of Postman \u0026 webhook to quickly understand ABDM APIs. Use your postman collection and ensure your async callbacks are working in sandbox\nGo to https://webhook.site Copy your unique URL (which would be your callback url) shown on the page Register it with ABDM Gateway. Ensure you get a Response: 200 Link a HIP / HIU ID of your choice to your client id. Ensure you get a Response: 200 Create a Sandbox ABHA address at https://phrsbx.abdm.gov.in Call an async Gateway API like /v0.5/users/auth/fetch-modes with the @sbx ABHA address Verify you get a callback (like /v0.5/users/auth/on-fetch-modes) at your webhook site. It should look like the image below Sample User Experience for Callback Img1\nImg2\nImg3\nImg4\nImg5\nImg6\nImg7\n","description":"","tags":null,"title":"Working with ABDM APIs","uri":"/abdm-docs/1-basics/working_with_abdm_apis/index.html"},{"content":"HCX Integrators Please visit HCX Documentation for detailed Health Claims Exchange Specifications.\nTo support the vision of Pradhan Mantri Jan Arogya Yojana (PMJAY), NHA has created a standardized health claim platform based on the Health Claim Exchange Specification (HCX) to enable automation of the health claim-related information exchange between payers, providers, beneficiaries, and other relevant entities.\nThe specification provides an interoperable, machine-readable, auditable, verifiable, and open standard-based structure protocol for communication between the entities.\nThe FHIR Implementation Guide for ABDM has been updated to support HCX specifications. The preview of the IG is hosted at -https://www.nrces.in/preview/ndhm/fhir/r4/hcx-profile.html\nFor HCX, a new record named ‘InsuranceRecord’ and related profiles and value sets has been introduced under the section HCX profiles.\nPlease test these changes and do share your inputs/feedback/concerns to the below email ids before August 12, 2022:\nnrc-help@cdac.in integration.support@nha.gov.in Based on the inputs/comments the updated IG will be finally published for production use.\n","description":"","tags":null,"title":"HCX Integrators","uri":"/abdm-docs/9-hcx-integrators/index.html"},{"content":"Support Deep Links Functionality Overview Any mobile application that can display a user’s personal health record (ABHA) under the Ayushman Bharat Digital Mission (ABDM) needs to adhere to the deep linking specification outlined in this document.\nUser Flow:\nPatient visits a health facility and registers by providing Name, DateOfBirth, Gender and Mobile. Patient does not share any ABHA Address with the facility. If the Health Facility is participating in ABDM, then it will notify ABDM when there is a new health record for this patient. Only the mobile number and the ID of the facility is notified. Facilities are identified by the facility’s HIPCODE. This can be obtained by registering the facility using the Health Facility Registry and linking the facility to a ABDM approved Health Repository Provider Software. ABDM will send an SMS to the user with a deep link. The content of the message will be: Clicking on the link will show the list of all ABHA Mobile Applications that have cleared functional and security testing in the ABDM sandbox and have been production approved. Note: The list of apps are presented in a random order each time the link is opened. The list of apps displayed is specific to the OS – Android or IOS\nSelecting an app will launch the app if already installed on the device or take the user to the play store (android) / app store (ios) to download the app. The deep link passed to the app in both scenarios contains the HIPCODE. The ABHA Mobile Application will help new users to register and create a ABHA Address using their name, date of birth, gender and mobile. The ABHA Mobile Application must recognize that the invocation was via a Deep Link. It must initiate a Discovery request to the HIPCODE that was part of the deep link. The Discovery API is implemented by ABHA Mobile Applications to find health records at a health facility. It is important for the ABHA Mobile Application to guide the user to provide the same Name, DoB, Gender and Mobile number that was provided to the Health Facility. If there is any difference in this information, the record cannot be retrieved correctly. ABDM will forward the Discovery request from the ABHA Mobile Application to the participating Health Facility. The Discovery request consists of the ABHA Address (chosen by the user), Name, date of birth, Gender and Mobile Number. The Health facility will search for any health records for this combination. If it finds a record it will respond to the ABHA Mobile Application with the available records listed in the form of care contexts. The ABHA Mobile Application should be able to display this to the user, link the care context to the ABHA Address, collect the appropriate consent from the user, fetch the health record(s) from the facility and display it to the user. Process to enable Deep Link support to your ABHA Mobile Application\nThe ABHA Mobile Application must submit the following information to ABDM as part of Sandbox exit. Send an email to abdm.sandbox@nha.gov.in with the following details (eg here is AarogyaSetu)\nName of the App: AarogyaSetu Play Store Link App Store Link Android Intent URI: uhi://discover?hip=‘HIPCODE’ iOS Intent URI: arogya://discover?hip=‘HIPCODE’ Logo for your App: Share file as an attachment Please note that for this version of the deep linking release there is some flexibility provided in the intent URI and each ABHA Mobile Application can define its format. It is mandatory for all intent URIs to accept the HIPCODE. Here’s a tip for implementors:\nFor Android implementors For iOS implementors Demonstrating your Deep Link support during Sandbox Exit\nGet the team to configure your ABHA Mobile Application correctly on the sandbox implementation site at phrsbx.adbm.gov.in. If you are providing your application as an APK for sideloading note that only the “already installed” test case can be verified.\nThe EMRSBX application available at https://emrsbx.abdm.gov.in/ has been updated to support the deep linking flow.\nLogin to EMRSBX. Register a new patient without providing a ABHA Address - Just use Name, DateOfBirth, Gender and a Mobile for the registration. Add a new Health record to this patient. You will get a notification SMS on the mobile with a deep link. The deeplink URI will point to phrsbx.adbm.gov.in/uhi/‘HIPCODE’. App should behave correctly as defined in this document for both user cases. New User - who downloads, installs and creates a ABHA Address Already installed App user When you launch the PHR app, it starts with a log-on page or the home page for a logged in user. ABDM requires the PHR app to start at a different page if invoked with a specific intent. This can be described in 2 scenarios:\nScenario 1\nQR Code at Facility is scanned using third party camera app. This triggers a link (PHR | ABDM ) and lists the compatible PHR apps On selecting the PHR app, the PHR app is invoked with a specific intent. The App is expected to directly go to the share profile page pre-filled with the facility to share the profile Scenario 2\nUser has not shared the ABHA address at the health facility. Health Facility triggers an SMS notification with a deep link to the user’s mobile number when a new health record is created. The link looks like phr.abdm.gov.in/uhi/. On clicking the link, a list of compatible PHR applications is displayed. On selecting the PHR app, the app is invoked with the specific intent. The App is expected to go directly to the discovery and link page and pre-filled with the facility. Test Cases Deep Link Flow : Send SMS to patient mobile to initiate record linking and fetching in PHR app\nS.No Functionality Test Case Steps To Be Executed 1 Mandatory In case patient visits the health facility and do not provide the ABHA address for linking of health records. Then, ABDM compliant health facility will notify ABDM when there is a new health record created of the patient. ABDM will send a deep link SMS is to the patient’s mobile for fetching and viewing records in PHR app using User Initiated Linking Flow (Discovery Flow) Patient visits a health facility and registers by providing Name, DateOfBirth, Gender and Mobile. Patient does not share any ABHA Address with the facility. 2 Mandatory In case patient visits the health facility and do not provide the ABHA address for linking of health records. Then, ABDM compliant health facility will notify ABDM when there is a new health record created of the patient. ABDM will send a deep link SMS is to the patient’s mobile for fetching and viewing records in PHR app using User Initiated Linking Flow (Discovery Flow) If the Health Facility is participating in ABDM, then it will notify ABDM when there is a new health record for this patient. Only the mobile number and the ID of the facility is notified. Facilities are identified by the facility’s HIPCODE. This can be obtained by registering the facility using the Health Facility Registry and linking the facility to a ABDM approved Health Repository Provider Software. 3 Mandatory In case patient visits the health facility and do not provide the ABHA address for linking of health records. Then, ABDM compliant health facility will notify ABDM when there is a new health record created of the patient. ABDM will send a deep link SMS is to the patient’s mobile for fetching and viewing records in PHR app using User Initiated Linking Flow (Discovery Flow) ABDM will send an SMS to the user with a deep link as shown below: Dear Madam/Sir, (facility name) is now participating in Ayushman Bharat Digital Mission (ABDM). Your report at this facility is now ready. See your record by clicking on phr.abdm.gov.in/uhi/(hipcode) 4 Mandatory In case patient visits the health facility and do not provide the ABHA address for linking of health records. Then, ABDM compliant health facility will notify ABDM when there is a new health record created of the patient. ABDM will send a deep link SMS is to the patient’s mobile for fetching and viewing records in PHR app using User Initiated Linking Flow (Discovery Flow) Clicking on the link will show the list of all ABDM compliant PHR applications. Post clicking on deep link by patient\nUse Case 1: In case ABDM compliant PHR application is not installed in PHR app, then user is redirected to download and install it from play store/app store.\"\nS.No Functionality Test Case Steps To Be Executed 1 Mandatory Post clicking on deep link by patient Check that, if no ABDM compliant PHR application is installed in phone - Navigate patient to play store / app store to install the selected PHR application from the list of all ABDM compliant PHR applications. 2 Mandatory Post clicking on deep link by patient Check that, post installing the PHR app. New user is able to create the ABHA address and Password by providing basic details such as Name, DateOfBirth, Gender, Mobile Number, Address Use Case 2: In case ABDM compliant PHR application is already installed in PHR app, then app will directly launch and initiate the User Initiated Linking (Discovery Flow)\nS.No Functionality Test Case Steps To Be Executed 1 Mandatory Post clicking on deep link by patient Check that selected PHR app from the list of all ABDM compliant PHR app’s is launched successfully. 2 Mandatory Post clicking on deep link by patient Check that post launch, PHR app initiates the discovery request with HIP where patient health records were created ","description":"","tags":null,"title":"Support Deep links","uri":"/abdm-docs/5-building-a-phr-app/support-deep-links/index.html"},{"content":"Transferring Health Data Firewall Rules DataPush URL - can be any URL specified by the HIU. The HRP system must ensure that its firewall rules are setup in such a way that the outbound HTTPs requests can be to any URL\nSecurity is ensured by making sure that the encrypted data can only be decrypted by requesting HIU\nPosting the Data The encrypted data must be pushed to the HIU by the HRP within a short time frame. Current timeout is set to 20 minutes.\nIf the data is very large, for example: running into 100s of MBs for CT scans, MRIs etc, the data can be pushed in parts.\nIt is also encouraged for large files to use a streaming approach instead of pushing data to HIU.\nOnce the data push is complete, the HRP must notify the HIE-CM that it has transferred the data (health-information/notify).\n%%{init:{\"fontSize\": \"1.0rem\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram HIP/HRP Repository--\u003e\u003eHIU System: Direct data transfer\u003cbr/\u003ePOST/datapush-url HIP/HRP Repository-\u003e\u003eGateway:Notify on the transfer\u003cbr/\u003ePOST/health-information/notify Testing \u0026 Verifying Data Transfer Testing with PHR Application\nOn the PHR app, log in with an SBX ABHA address Register a patient with the same SBX ABHA address in your HIP/HRP Create a new health record for this patient Link a care context for this health record using HIP initiated linking PHR App should automatically make a request for the health record along with apt consents Prepare the health record, encrypt \u0026 transfer to the data push URL provided by the PHR app Your record should be successfully displayed in the ABHA PHR app Test Cases Function Functionality Steps To Be Executed Data Transfer \u0026 Share Mandatory HIP must share health records associated with care context on request (HIP_INIT_SHARE_CARECONTEXT) 1. Initiate a “Get data” for a linked care context in the PHR app. 2. HIP will receive a request to share information along with the consent id \u0026 end-point URL where the data must be pushed. 3. HIP must verify that there is a valid consent for sharing this data with the specific HIU making the request. 4. Health records must be shared only for allowed HIP types withing the date ranges granted in the consent. 5. HIP should encrypt the health records to be shared with the HIU public key. 6. HIP should push the encrypted data to the end-point URL. 7. On successful transfer, HIP must notify HIE-CM of successful transfer by calling health information notify API. 8. Transfer must be completed within 2 hours of receiving the request. ","description":"","tags":null,"title":"Transferring Health Data","uri":"/abdm-docs/3-milestone2/transfer-health-data/index.html"},{"content":" Overview Several API parameters require encoding / encryption. This section points you to tools that are useful when testing APIs using POSTMAN\nConvert Image to Base64 RSA Encryption Convert Image to Base64 Converting an image into Base64 string means taking the binary representation of an image and converting it into a string of ASCII digits (A-Z, a-z, 0-9).\nTo convert an image into Base64 :\nuse https://codebeautify.org/image-to-base64-converter After uploading the image and converting into Base64 string, copy the string and use it in the request body of API which expects it. Sample User Experience for Converting Image to Base64 RSA Encryption RSA(Rivest-Shamir-Adleman) is an Asymmetric encryption technique that uses two different keys as public and private keys to perform the encryption and decryption. With RSA, you can encrypt sensitive information with a public key and a matching private key is used to decrypt the encrypted message.\nTo encrypt the data :\nStep-1: API to retrieve public key Step-2: RSA Encryption via online RSA Encryption API Type Certificate URL Cipher Type For V3 APIs https://healthidsbx.abdm.gov.in/api/v1/auth/cert RSA/ECB/OAEPWithSHA-1AndMGF1Padding For PHR V1 APIs https://phrsbx.abdm.gov.in/api/v1/phr/public/certificate RSA/ECB/PKCS1Padding For V1 APIs https://healthidsbx.abdm.gov.in/api/v1/auth/cert RSA/ECB/PKCS1Padding For V2 APIs https://healthidsbx.abdm.gov.in/api/v2/auth/cert RSA/ECB/PKCS1Padding RSA Encryption For V3 APIs API to retrieve the public key Authentication token public certificate. This certificate is also used to encrypt the data.\nBASE URL: https://healthidsbx.abdm.gov.in/api\nRSA Encryption via online (while using Postman) https://www.devglan.com/online-tools/rsa-encryption-decryption\nSelect cipher type - RSA/ECB/OAEPWithSHA-1AndMGF1Padding\nAfter encrypting, copy the string and use it in the response body of API which expects it.\nRSA Encryption For PHR V1 APIs API to retrieve the public key BASE URL: https://phrsbx.abdm.gov.in/\nRSA Encryption via online (while using Postman) https://www.devglan.com/online-tools/rsa-encryption-decryption\nSelect cipher type - RSA/ECB/PKCS1Padding\nAfter encrypting, copy the string and use it in the response body of API which expects it.\nRSA Encryption For V1 APIs API to retrieve the public key BASE URL: https://healthidsbx.abdm.gov.in/api\nRSA Encryption via online (while using Postman) https://www.devglan.com/online-tools/rsa-encryption-decryption\nSelect cipher type - RSA/ECB/PKCS1Padding\nAfter encrypting, copy the string and use it in the response body of API which expects it.\nRSA Encryption For V2 APIs API to retrieve the public key BASE URL: https://healthidsbx.abdm.gov.in/api\nRSA Encryption via online (while using Postman) https://www.devglan.com/online-tools/rsa-encryption-decryption\nSelect cipher type - RSA/ECB/PKCS1Padding\nAfter encrypting, copy the string and use it in the response body of API which expects it.\nSample User Experience for RSA Encryption ","description":"","tags":null,"title":"Encoding \u0026 RSA Encryption","uri":"/abdm-docs/1-basics/encoding-rsa-encryption/index.html"},{"content":"Fetching and Display of Records Functionality Overview Every PHR Application also needs to implement an HIU (Health Information User) The process for implementing HIU is described in Milestone 3. Whenever a new care context is linked to the ABHA address, the PHR App receives a notification. The PHR app is expected to create a consent request for that health record and send it to the HIE-CM. If auto-approval policy is in place, the consent is immediately approved. The PHR App must then initiate the health information request along with the consent to obtain the health record from the HIP. The PHR App must offer a long term storage for these health records for the user. The PHR app must display the fetched records to the user within the app organised ideally in chronological order. Test Cases Sharing of health records with patient’s consent to the HIU\nS.No Functionality Test Case Steps To Be Executed 1 Mandatory HIU should be able to view the health data of a APPROVED consent request Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient.(HI Type = DiagnostocReport Structured) 2 Mandatory HIU should be able to view the health data of a APPROVED consent request Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient.(HI Type = DiagnostocReport Un-Structured) 3 Mandatory HIU should be able to view the health data of a APPROVED consent request Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient.(HI Type = Prescription-Structured) 4 Mandatory HIU should be able to view the health data of a APPROVED consent request Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient.(HI Type = Prescription-Un-Structured) 5 Mandatory HIU should be able to view the health data of a APPROVED consent request Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient.(HI Type = DischargeSummary-Structured) 6 Mandatory HIU should be able to view the health data of a APPROVED consent request Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient.(HI Type = DischargeSummary-Un-Structured) 7 Mandatory HIU should be able to view the health data of a APPROVED consent request Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient.(HI Type = CosultingNote-Structured) 8 Mandatory HIU should be able to view the health data of a APPROVED consent request Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. (HI Type = CosultingNote-Un-Structured) 9 Mandatory HIU should be able to view the health data of a APPROVED consent request Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. (HI Type = Immunization record-Structured) 10 Mandatory HIU should be able to view the health data of a APPROVED consent request Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. (HI Type = Immunization record-Un-Structured) 11 Mandatory HIU should be able to view the health data of a APPROVED consent request Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient/ (HI Type = Wellness Record-Structured) 12 Mandatory HIU should be able to view the health data of a APPROVED consent request Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. (HI Type = Wellness Record-Un-Structured) 13 Mandatory HIU should be able to view the health data of a APPROVED consent request Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. (HI Type = Health Record-Structured) 14 Mandatory HIU should be able to view the health data of a APPROVED consent request Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. Check whether HIU individual is able to fetch health data for the consent request created for a patient and APPROVED by the patient. (HI Type = Health Record-Un-Structured) Tabs in PHR app (My Records/Linked Facility/Consents)\nS.No Functionality Test Case Steps To Be Executed 1 Mandatory “Requests” section in the “Consents” tab of PHR app 1) Requested - Not yet any action is taken by individual on consent request received from HIU to PHR app. All request (consent / subscription / locker) sent by HIU to patiet are seen in “Requested” dropdown within “Requests” section of PHR app 2 Mandatory “Requests” section in the “Consents” tab of PHR app 2) Denied - Individual have “Denied” consent request received from HIU to PHR app. All denied request (consent / subscription / locker) by patient are seen in “Denied” dropdown within “Requests” section of PHR app. 3 Mandatory “Requests” section in the “Consents” tab of PHR app 3) Expired - Requests is expired because patient have not acted on consent request received in PHR app within the time duration set by HIU All expired request (consent / subscription / locker) by patient are seen in “Expired” dropdown within “Requests” section of PHR app. 4 Mandatory “Approved” section in the “Consents” tab of PHR app 1) Granted - Patient had granted the consent request received from HIU to PHR app All granted request (consent / subscription / locker) by patient are seen in “Granted” dropdown within “Approved” section of PHR app. 5 Mandatory “Approved” section in the “Consents” tab of PHR app 2) Revoked - Patient had revoked consent requests after granting it in PHR app. All revoked request (consent / subscription / locker) by patient are seen in “Revoked” dropdown within “Approved” section of PHR app. 6 Mandatory View patient helth records in “My Records” tab of PHR app To view records, post linking and fetching from healthcare providers (health locker, health facility and health programme) Click on record fetched in the “My Records” tab 7 Mandatory View patient helth records in “My Records” tab of PHR app To view records, post linking and fetching from healthcare providers (health locker, health facility and health programme) Details of records are viewed with attachment 8 Mandatory View patient helth records in “My Records” tab of PHR app To view records, post linking and fetching from healthcare providers (health locker, health facility and health programme) Click on the attachment to view the health record / report in the device 9 Mandatory “Linked Facility” tab in PHR app Linked providers includes health lockers health facility and health programme ","description":"","tags":null,"title":"Fetch \u0026 Display Records","uri":"/abdm-docs/5-building-a-phr-app/fetch-display-records/index.html"},{"content":"Sandbox Exit ABDM Sandbox Journey\nSandbox Exit Process Post integrations, the following 4-step process will apply for any integrator to exit from the Sandbox. Kindly fill the form in your sandbox user account to initiate exit.\nStep 1: Functional \u0026 non-functional Testing of the application by an internal NHA team Draft test cases for functional evaluation can be found in the below link\nTest cases for M1 Test cases for M2 Test cases for M3 Note : From 5th August 2022 onwards, the functional \u0026 non-functional testing of the application will be conducted by NHA empaneled agencies which are as below:\nM/s FIME India Pvt. Ltd.\nM/s Suma Soft Pvt. Ltd.\nM/s Tata Communications\nThe interested integrators are requested to connect with any one of the above agencies for functional and non-functional testing/certification on chargeable basis. The integrators (new and the existing ones) who are not able to get themselves certified by the cut off date will be required to get the testing conducted by any of these agencies only. Please click here for contact details of the above agencies.\nStep 2: Security testing of the web/mobile application from any STQC or CERT-IN empaneled agency. Applicants are requested to engage with relevant agencies and submit the “Safe-to-Host” certificate to NHA\nSuggestive pointers on infrastructural requirements for security testing clearance can be found in document To view List of CERT-IN empaneled agencies for Safe-to-Host certification please follow below steps Please go to the link . Navigate to Cyber Security Assurance tab and select Empanelment by CERT-in from dropdown. STQC may also reach out to perform validation testing on a few sample applications.\nStep 3: A final round of approval for application go-live will be sought from the internal team at NHA. Applicants will be required to share the following before the committee:\nFunctional testing report for integrations completed Safe-to-Host certificate for the application Summary details of the application duly filled in excel Step 4: Once approved, access will be shared for integration in the production environment.\nKindly ensure the partnering HIP is registered on Health Facility Registry in order to interface with the ABDM infrastructure.\nDetailed walkthrough on facility registration steps can be found in video link . Once registered, the HIP will be required to update production access bridge ID in their Health Facility Registry profile – please find all steps demonstrated in document The application is now expected to be prepared for go-live in respective healthcare facilities.\nPlease ensure facility staff is well-versed with the new software and is briefed on ABDM building blocks well in advance to assist patients.\nAgency Contact Details Sr.No Agency Name Email Address Contact Number Company URL- 1 M/s FIME India Pvt. Ltd salesindia@fime.com 080-43358036 Click here 2 M/s Suma Soft Pvt. Ltd abdm@sumasoft.com 8828222799 Click here 3 M/s Tata Communications hesrc.helpdesk@tatacommunications.com 1800-419-5588 Click here ","description":"","tags":null,"title":"Sandbox Exit","uri":"/abdm-docs/10-sandbox-exit/index.html"},{"content":"To become an ABDM Compliant Application, your application needs to implement specific functional capabilities and pass functional validation.\nThe functionality has been broken into milestones to make it easier to implement. Your first step is to understand the functionalities that your application must support. This depends on what type of application you are integrating.\nCertification Functionality to be implemented M1 M2 M3 Locker Integrated Programs HFR HPR HMIS Applications - Used by Hospitals Yes Yes Yes NA NA Yes NA LMIS Application - Used by Labs Yes Yes NA NA NA Yes NA PHR Application - For consumers Yes Yes Yes Yes NA NA NA Public Health Application - Used by Health Workers Yes Yes Yes No Yes Yes NA Teleconsultation Application Yes Yes Yes No No Yes Yes Each functionality is defined by detailed test cases that must be passed to to obtain ABDM compliance.\nHere is a quick list of functionalities that must be implemented for each milestone certification:\nFeatures to be supported for Milestone 1 (M1) Create ABHA number \u0026 address - using Aadhaar / Mobile / Driving License Collect \u0026 Verify ABHA address during patient registration Features to be supported for Milestone 2 (M2) Description: This milestone enables a health care entity/professional to become Health Information Provider (HIP). This implies that the clinical artifacts generated will be linked with the ABHA address and is ready for consent-based-sharing within ABDM eco-system. Patient will be able to view the generated and linked health records in any of his/her preferred PHR app downloaded in the mobile device. Functionalities offered are:\nHelp users discover their health records available in your system Notify or link a new health record with an ABHA address when it is created in your system Share the health record on request after verifying user consent Structure the health record in an inter-operable format using FHIR Support Consent revokes, deletion of ABHA address and uptime related heartbeats Features to be supported for Milestone 3 (M3) Description: Completion of this milestone enables a healthcare entity/professional to become Health Information User (HIU). This milestone enables exchange of health data between healthcare entities or healthcare professionals or with a health locker based on patient authentication only. Any entity seeking health records for treatment/diagnosis is termed as Health Information User (HIU). Functionalities offered are:\nRequest access to health records linked with a ABHA address Fetch linked records from HRPs Organize and display fetched health records Features to be supported by a PHR app Issue ABHA address to the user Link the ABHA address to a ABHA No if requested by the user Login (authenticate) the user Share user profile during registration at a healthcare provider Discover user records at a healthcare provider Link health records discovered by the user to their ABHA address Notify users when any new health records are linked to their ABHA address Raise consent requests and fetch newly linked records (Milestone 3) Organize and display fetched health records Help the user manage their consents \u0026 subscriptions Scan / Upload records held by the user and link it to their PHR address Act as a HRP for users health records and share it on demand Help users edit their profile, delete ABHA address Features to be supported by Integrated programs Goverment Health programs need to mandatorily support the following additional features apart from any of the above roles\nIssue an unique ABHA No to the user using offline methods Create a linked ABHA address Link health records to ABHA No Fetch health records from ABHA No ","description":"","tags":null,"title":"Become ABDM Compliant","uri":"/abdm-docs/1-basics/making_your_app_abdm_compliant/index.html"},{"content":"Managing Consents Functionality Overview The role of the PHR app is to help the user to manage the consent request. The PHR App must:\nList all of the consent requests that have been sent to the user\nAllow the user to edit the content of the consent request and modify it as per their requirements.\nAllow the user to grant / deny a new consent request.\nAllow the users to view granted consents and revoke them at any point in time.\nUser Experience Here’s a reference of an ABHA App to help you understand how PHR Applications can do this:\nTest Cases Tabs in PHR app (My Records/Linked Facility/Consents)\nS.No Functionality Test Case Steps To Be Executed 1 Mandatory “Requests” section in the “Consents” tab of PHR app 1) Requested - Not yet any action is taken by individual on consent request received from HIU to PHR app. All request (consent / subscription / locker) sent by HIU to patiet are seen in “Requested” dropdown within “Requests” section of PHR app 2 Mandatory “Requests” section in the “Consents” tab of PHR app 2) Denied - Individual have “Denied” consent request received from HIU to PHR app. All denied request (consent / subscription / locker) by patient are seen in “Denied” dropdown within “Requests” section of PHR app. 3 Mandatory “Requests” section in the “Consents” tab of PHR app 3) Expired - Requests is expired because patient have not acted on consent request received in PHR app within the time duration set by HIU All expired request (consent / subscription / locker) by patient are seen in “Expired” dropdown within “Requests” section of PHR app. 4 Mandatory “Approved” section in the “Consents” tab of PHR app 1) Granted - Patient had granted the consent request received from HIU to PHR app All granted request (consent / subscription / locker) by patient are seen in “Granted” dropdown within “Approved” section of PHR app. 5 Mandatory “Approved” section in the “Consents” tab of PHR app 2) Revoked - Patient had revoked consent requests after granting it in PHR app. All revoked request (consent / subscription / locker) by patient are seen in “Revoked” dropdown within “Approved” section of PHR app. API Sequence Diagram %%{init:{\"fontSize\": \"1.0rem\", \"sequence\":{\"showSequenceNumbers\":true}}}%% sequenceDiagram title Managing Consents PHR App-\u003e\u003eHIE-CM: List all consent artefacts \u003cbr/\u003e GET /consent-artefacts PHR App-\u003e\u003eHIE-CM: Approve Request \u003cbr/\u003e POST/consent-requests/{request-id}/approve PHR App-\u003e\u003eHIE-CM: Deny Request \u003cbr/\u003e POST/consent-requests/{request-id}/deny PHR App-\u003e\u003eHIE-CM: Revoke Consents \u003cbr/\u003e POST/consents/revoke API Information Request Response 1. List Consent Artefacts\nBASE URLs: https://dev.abdm.gov.in/cm\n2. Approve Requests\nBASE URLs: https://dev.abdm.gov.in/cm\n3. Deny Requests\nBASE URLs: https://dev.abdm.gov.in/cm\n4. Revoke Consents\nBASE URLs: https://dev.abdm.gov.in/cm\n","description":"","tags":null,"title":"Managing Consents","uri":"/abdm-docs/5-building-a-phr-app/managing-consents/index.html"},{"content":"Test Cases This section covers:\nMilestone 1 Test Cases Milestone 2 Test Cases Milestone 3 Test Cases PHR Application Test Cases ","description":"","tags":null,"title":"Test Cases","uri":"/abdm-docs/11-test-cases/index.html"},{"content":"Uploading User Record Functionality Overview PHR Applications must allow users to scan and upload any records that they may have with them. This includes: physical records, output from IoT devices like BP meter, Glucose meters; and health devices like fit-bit, smartwatches etc The PHR application can decide the HI type of the record based on the contents or user input. If the HI type cannot be determined the PHR app is expected to use HI type as “HealthDocumentRecord”. The PHR Application needs to get a linking token in order to link these health records as a care context to the ABHA address. This is done using the APIs specified in Milestone 1. The PHR Application must add a care context to the ABHA address of the user for the uploaded records using HIP initiated linking. The PHR Application needs to ensure the uploaded records can be shared in the ABDM ecosystem. This is achieved by supporting the Health Information Transfer APIs which are specified as part of Milestone 2. ","description":"","tags":null,"title":"Uploading User Record","uri":"/abdm-docs/5-building-a-phr-app/upload-user-records/index.html"},{"content":"Swagger This section covers: Complete Swagger For ABHA Number APIs V1/V2 V3 HIP APIs HIU APIs PHR APIs ABHA Address APIs HIE-CM APIs ","description":"","tags":null,"title":"Swagger","uri":"/abdm-docs/12-swagger/index.html"},{"content":"Glossary Abbrevation Expansion ABDM Ayushman Bharat Digital Mission ASHA Ayushman Bharat Health Account AMA Ahmedabad Medical Association API Application Program Interface ATR Action Taken Report BHIM Bharat Interface for Money CME Continuing Medical Education DHIS Digiltal Health Incentive Scheme EC Empowered Committee HER Electronic Health Record EUA End User Applications FHIR Fast Healthcare Interoperability Resources HBI Heal By India HCX Health Claims Exchange HIP Health Information Provider HIU Health Information User HFR Health Facility Registry HP ID Health Professionals Id HRP Health Professional Registry HIE-CM Health Information Exchange-Consent Manager HMIS Health Management Information System HSPA Health Service Provider Applications HTC Health-Tech Committee IDPA India Development Partnership Activity IMA Indian Medical Association LMS Learning Management System LMIS Laboratory Management Information System LOINC Logical Observation Identifiers Names and Codes MSG Mission Steering Group MVP Minimum Viable Product NASH National Accreditation Board for Hospitals \u0026 Healthcare Providers NABL National Accreditation Board for Testing and Calibration Laboratories NDHM National Dlgltal Health Mission NMR National Medical Register NOTTO National Organ \u0026 Tissue Transplant Organization NPCI National Payments Corpora1ion of India PHR Personal Health Record Saas Software as a Service SNOMED-CT Systematized Nomenclature of Medicine - Clinical Tenns WASA Web Application Securily Assessment ","description":"","tags":null,"title":"Glossary","uri":"/abdm-docs/13-glossary/index.html"},{"content":"Welcome to the ABDM Sandbox This documentation is designed for developers who want to integrate with the various ABDM Building Blocks.\nABDM Building Blocks ABDM Sandbox provides you access to APIs for the following Building Blocks\nAyushman Bharat Health Account (ABHA) - Formerly called Health ID. Health Information Exchange \u0026 Consent Manager ( @abdm HIE-CM) The Health Professionals Registry (HPR) The Health Facility Registry (HFR) Coming Soon The following building blocks and their API documentation are work in progress and will be available soon\nUHI – The Unified Health Interface (UHI) gateway will enable interoperable digital health services HCX – The Health Claims Exchange will enable interoperable exchange of health claims between payers \u0026 providers starting with PMJAY Contributors This documentation was made possible due to many contributions from the ABDM community\nA big shout out to THOUGHTWORKS for their support to developing better documentation for ABDM.\nYeshna Arya and Nandini A from thoughtworks need a special mention for having developed most of the content\nContributors \u0026 Reviewers\nKiran Anandampillai Angshuman Sarkar Meenakshi Jha Kumar Satyam Sai Kishore Komanduri Snehal Dayal Namrata Dodiya Sudev AC Krishan Bhardwaj Shubhanshu Shukla ","description":"","tags":null,"title":"ABDM Sandbox Home","uri":"/abdm-docs/index.html"},{"content":"","description":"","tags":null,"title":"Categories","uri":"/abdm-docs/categories/index.html"},{"content":"","description":"","tags":null,"title":"Tags","uri":"/abdm-docs/tags/index.html"}]